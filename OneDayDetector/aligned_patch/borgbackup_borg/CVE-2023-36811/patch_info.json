{
    "CVE_id": "CVE-2023-36811",
    "CPE": [
        "1.2.0a5",
        "1.2.4",
        "1.2.0b4",
        "1.2.0a4",
        "1.2.3",
        "1.2.0b3",
        "1.2.0a3",
        "1.2.2",
        "1.2.0b2",
        "1.2.0a2",
        "1.2.1",
        "1.2.0b1",
        "1.2.0a1",
        "1.2.0",
        "1.2.0a0",
        "1.1.15b1",
        "1.1.18",
        "1.1.17",
        "1.1.16",
        "1.1.15",
        "1.1.14",
        "1.1.13",
        "1.1.12",
        "1.1.11",
        "1.1.10",
        "1.1.9",
        "1.1.8",
        "1.1.7",
        "1.1.6",
        "1.1.0b6",
        "1.1.5",
        "1.1.0b5",
        "1.1.4",
        "1.1.0b4",
        "1.1.3",
        "1.1.0b3",
        "1.1.2",
        "1.1.0b2",
        "1.1.1",
        "1.1.0b1",
        "1.1.0",
        "1.0.13",
        "1.0.12",
        "1.0.11",
        "1.0.10",
        "1.0.9",
        "1.0.8",
        "1.0.7",
        "1.0.7bin",
        "1.0.6",
        "1.0.5",
        "1.0.4",
        "1.0.3",
        "1.0.2",
        "1.0.1",
        "1.0.0",
        "0.30.1",
        "0.30.0",
        "0.29.0",
        "0.28.2",
        "0.28.1",
        "0.28.0",
        "0.27.0",
        "0.26.1",
        "0.26.0",
        "0.25.0",
        "0.24.0",
        "0.23.0",
        "0.16",
        "0.15",
        "0.14",
        "0.13",
        "0.12",
        "0.11",
        "0.10",
        "0.9",
        "0.8.1",
        "0.8",
        "0.7",
        "0.6.1",
        "0.6"
    ],
    "modified_items": {
        "archive.py": {},
        "changes_1.x.rst": {
            "archives_tam_vuln": "other",
            "Pre-1.2.5 archives spoofing vulnerability (CVE-2023-36811)": "other"
        },
        "checks.py": {
            "write_archive_without_tam": "function",
            "test_check_rebuild_manifest": "function",
            "test_check_rebuild_refcounts": "function"
        },
        "check_cmd.py": {
            "test_manifest_rebuild_duplicate_archive": "function"
        },
        "cache.py": {
            "fetch_and_build_idx": "function"
        },
        "msgpack.py": {
            "get_limited_unpacker": "function"
        },
        "parseformat.py": {
            "get_tam": "other"
        },
        "key.py": {
            "test_invalid_manifest": "other",
            "test_invalid_archive": "other",
            "test_round_trip_manifest": "other",
            "test_round_trip_archive": "other",
            "test_tampered_manifest": "other",
            "test_tampered_archive": "other",
            "test_invalid": "other",
            "test_round_trip": "other",
            "test_tampered": "other"
        }
    }
}