int flash_adaptor_write(uint32_t offset, const uint8_t *buffer, uint32_t len)
{
    int ret = ERR;
    uint8_t *block_buff;

    if ((NULL == buffer) || (0 == len) || (len > FLASH_BLOCK_SIZE)
        || ((offset & FLASH_BLOCK_MASK))) {
        HAL_OTA_LOG("invalid param len %ld, offset %ld", len, offset);
        return ERR;
    }

    if (len == FLASH_BLOCK_SIZE) {
        ret = hal_spi_flash_erase_write(buffer, FLASH_BLOCK_SIZE, offset);
        if(ret != OK) {
           HAL_OTA_LOG("hal_ota_write_flash fail offset %lu, len %u", offset, FLASH_BLOCK_SIZE);
        }
        return ret;
    }

    block_buff = osal_malloc(FLASH_BLOCK_SIZE);
    if (NULL == block_buff) {
        HAL_OTA_LOG("atiny_malloc fail");
        return ERR;
    }

    ret = hal_spi_flash_read(block_buff + len, FLASH_BLOCK_SIZE - len, offset + len);
    if (ret != OK) {
        HAL_OTA_LOG("hal_spi_flash_read fail offset %lu, len %lu", offset + len, FLASH_BLOCK_SIZE - len);
        goto EXIT;
    }

    (void)memcpy(block_buff, buffer, len);
    ret = hal_spi_flash_erase_write(block_buff, FLASH_BLOCK_SIZE, offset);
    if (ret != OK) {
        HAL_OTA_LOG("hal_ota_write_flash fail offset %lu, len %u", offset, FLASH_BLOCK_SIZE);
    }

EXIT:
    osal_free(block_buff);
    return ret;
}
