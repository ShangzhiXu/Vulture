static uint8_t prv_firmware_read(uint16_t instanceId,
                                 int *numDataP,
                                 lwm2m_data_t **dataArrayP,
                                 lwm2m_data_cfg_t *dataCfg,
                                 lwm2m_object_t *objectP)
{
    uint32_t i;
    uint8_t result;

    // this is a single instance object
    if (instanceId != 0) {
        return COAP_404_NOT_FOUND;
    }

    // is the server asking for the full object ?
    if (*numDataP == 0) {
        uint16_t resources[] = { RES_M_PACKAGE_URI, RES_M_STATE, RES_M_UPDATE_RESULT,
            RES_O_FIRMWARE_UPDATE_DELIVER_METHOD
        };
        *dataArrayP = lwm2m_data_new(array_size(resources));
        if (*dataArrayP == NULL) {
            return COAP_500_INTERNAL_SERVER_ERROR;
        }
        *numDataP = array_size(resources);
        for (i = 0 ; i < array_size(resources); ++i) {
            (*dataArrayP)[i].id = resources[i];
        }
    }

    i = 0;
    do {
        switch ((*dataArrayP)[i].id) {
        case RES_M_PACKAGE: {
            result = COAP_405_METHOD_NOT_ALLOWED;
            break;
        }
        case RES_M_PACKAGE_URI: {
#ifdef CONFIG_FEATURE_FOTA
            const char *pkg_uri;
            pkg_uri = atiny_fota_manager_get_pkg_uri(atiny_fota_manager_get_instance());
            if (pkg_uri == NULL) {
                pkg_uri = "";
            }
            lwm2m_data_encode_nstring(pkg_uri, strlen(pkg_uri) + 1, *dataArrayP + i);
            result = COAP_205_CONTENT;
#else
            result = COAP_405_METHOD_NOT_ALLOWED;
#endif
            break;
        }
        case RES_M_UPDATE: {
            result = COAP_405_METHOD_NOT_ALLOWED;
            break;
        }
        case RES_M_STATE: { // firmware update state (int)
#ifdef CONFIG_FEATURE_FOTA
            int state = atiny_fota_manager_get_rpt_state(atiny_fota_manager_get_instance());
            lwm2m_data_encode_int(state, *dataArrayP + i);
            result = COAP_205_CONTENT;
#else
            result = COAP_405_METHOD_NOT_ALLOWED;
#endif
            break;
        }
        case RES_M_UPDATE_RESULT: {
#ifdef CONFIG_FEATURE_FOTA
            int updateresult = atiny_fota_manager_get_update_result(atiny_fota_manager_get_instance());
            lwm2m_data_encode_int(updateresult, *dataArrayP + i);
            result = COAP_205_CONTENT;
#else
            result = COAP_405_METHOD_NOT_ALLOWED;
#endif
            break;
        }
        case RES_O_FIRMWARE_UPDATE_DELIVER_METHOD: {
#ifdef CONFIG_FEATURE_FOTA
            int method = atiny_fota_manager_get_deliver_method(atiny_fota_manager_get_instance());
            lwm2m_data_encode_int(method, *dataArrayP + i);
            result = COAP_205_CONTENT;
#else
            result = COAP_405_METHOD_NOT_ALLOWED;
#endif
        }
        break;
        default:
            result = COAP_404_NOT_FOUND;
        }
        i++;
    }
    while ((i < *numDataP) && (result == COAP_205_CONTENT));

#ifdef CONFIG_FEATURE_FOTA
    if (dataCfg && (1 == *numDataP) && (RES_M_STATE == (*dataArrayP)[0].id)) {
        atiny_fota_manager_get_data_cfg(atiny_fota_manager_get_instance(), dataCfg);
    }
#endif

    return result;
}
