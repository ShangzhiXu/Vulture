VOID Example_Event(VOID)
{
    UINT32 event;
    UINT32 ret;

    /*
     * timeout, WAITMODE to read event, timeout is 100 ticks,
     * if timeout, wake task directly
     */
    printf("Example_Event wait event 0x%x.\n", EVENT_WAIT);

    event = LOS_EventRead(&g_exampleEvent, EVENT_WAIT, LOS_WAITMODE_AND, 100);
    if (event == EVENT_WAIT) {
        printf("Example_Event, read event : 0x%x.\n", event);
        ret = LOS_InspectStatusSetById(LOS_INSPECT_EVENT, LOS_INSPECT_STU_SUCCESS);
        if (ret != LOS_OK) {
            printf("Set Inspect Status Err.\n");
        }
    } else {
        printf("Example_Event, read event timeout.\n");
        ret = LOS_InspectStatusSetById(LOS_INSPECT_EVENT, LOS_INSPECT_STU_ERROR);
        if (ret != LOS_OK) {
            printf("Set Inspect Status Err.\n");
        }
    }
    return;
}
