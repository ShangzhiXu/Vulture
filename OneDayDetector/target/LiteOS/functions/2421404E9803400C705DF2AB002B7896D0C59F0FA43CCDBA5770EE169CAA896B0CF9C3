static int ret_to_errno(int ret)
{
    int err = 0;

    switch (ret) {
        case SPIFFS_OK:
            return 0;

        case SPIFFS_ERR_DATA_SPAN_MISMATCH:
        case SPIFFS_ERR_IS_INDEX:
        case SPIFFS_ERR_INDEX_REF_FREE:
        case SPIFFS_ERR_INDEX_REF_LU:
        case SPIFFS_ERR_INDEX_REF_INVALID:
        case SPIFFS_ERR_INDEX_FREE:
        case SPIFFS_ERR_INDEX_LU:
        case SPIFFS_ERR_INDEX_INVALID:
        case SPIFFS_ERR_CONFLICTING_NAME:
        case SPIFFS_ERR_INVALID_PARA:
            err = EINVAL;
            break;

        case SPIFFS_ERR_NOT_WRITABLE:
        case SPIFFS_ERR_NOT_READABLE:
        case SPIFFS_ERR_NOT_CONFIGURED:
            err = EACCES;
            break;

        case SPIFFS_ERR_NOT_MOUNTED:
        case SPIFFS_ERR_NOT_A_FS:
        case SPIFFS_ERR_PROBE_NOT_A_FS:
        case SPIFFS_ERR_MAGIC_NOT_POSSIBLE:
            err = ENODEV;
            break;

        case SPIFFS_ERR_FULL:
        case SPIFFS_ERR_PROBE_TOO_FEW_BLOCKS:
            err = ENOSPC;
            break;

        case SPIFFS_ERR_BAD_DESCRIPTOR:
        case SPIFFS_ERR_OUT_OF_FILE_DESCS:
            err = EBADF;
            break;

        case SPIFFS_ERR_MOUNTED:
        case SPIFFS_ERR_FILE_EXISTS:
            err = EEXIST;
            break;

        case SPIFFS_ERR_NOT_FOUND:
        case SPIFFS_ERR_NOT_A_FILE:
        case SPIFFS_ERR_DELETED:
        case SPIFFS_ERR_FILE_DELETED:
        case SPIFFS_ERR_NOT_FINALIZED:
        case SPIFFS_ERR_NOT_INDEX:
        case SPIFFS_ERR_IS_FREE:
        case SPIFFS_ERR_INDEX_SPAN_MISMATCH:
        case SPIFFS_ERR_FILE_CLOSED:
            err = ENOENT;
            break;

        case SPIFFS_ERR_NAME_TOO_LONG:
            err = ENAMETOOLONG;
            break;

        case SPIFFS_ERR_RO_NOT_IMPL:
        case SPIFFS_ERR_RO_ABORTED_OPERATION:
            err = EROFS;
            break;

        case SPIFFS_ERR_SEEK_BOUNDS:
            err = EOVERFLOW;
            break;

        case SPIFFS_ERR_END_OF_OBJECT:
        case SPIFFS_ERR_NO_DELETED_BLOCKS:
            err = ENODATA;
            break;

        case SPIFFS_ERR_ERASE_FAIL:
            err = EIO;
            break;

        default:
            err = EIO;
            break;
    }

    VFS_ERRNO_SET(err);
    return -err;
}
