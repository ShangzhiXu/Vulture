spiffs_cache_page *spiffs_cache_page_allocate_by_fd(spiffs *fs, spiffs_fd *fd)
{
    // before this function is called, it is ensured that there is no already existing
    // cache page with same object id
    spiffs_cache_page_remove_oldest(fs, SPIFFS_CACHE_FLAG_TYPE_WR, 0);
    spiffs_cache_page *cp = spiffs_cache_page_allocate(fs);
    if (cp == 0)
    {
        // could not get cache page
        return 0;
    }

    cp->flags = SPIFFS_CACHE_FLAG_TYPE_WR;
    cp->obj_id = fd->obj_id;
    fd->cache_page = cp;
    SPIFFS_CACHE_DBG("CACHE_ALLO: allocated cache page "_SPIPRIi" for fd "_SPIPRIfd ":"_SPIPRIid "\n", cp->ix, fd->file_nbr, fd->obj_id);
    return cp;
}
