int start_firmware_download(lwm2m_context_t *contextP, char *uri,
                            pack_storage_device_api_s *storage_device_p)
{
    lwm2m_transaction_t *transaction;
    unsigned char update_flag = 0;
    int ret = -1;
    int uri_len;
    lwm2m_server_t *server;

    if (!contextP || !uri || (*uri == '\0') || (!storage_device_p)) {
        ATINY_LOG(LOG_ERR, "invalid params");
        return -1;
    }
    ATINY_LOG(LOG_ERR, "start download");
    g_fota_storage_device = storage_device_p;
    uri_len = strlen(uri);
    server = registration_get_registered_server(contextP);
    if (server == NULL) {
        ATINY_LOG(LOG_ERR, "registration_get_registered_server failed");
        return -1;
    }

    ret = update_uri_info(uri, uri_len, &update_flag);
    if (ret != 0) {
        ;  // continue to although update_uri_info failed
    }

    ATINY_LOG(LOG_DEBUG, "update_flag = %u", update_flag);
    if (!((update_flag == 0) && (g_ota_uri != NULL))) {
        if (g_ota_uri != NULL) {
            lwm2m_free(g_ota_uri);
            g_ota_uri = NULL;
        }
        ret = parse_firmware_uri(uri, uri_len);
        if (ret != 0) {
            ATINY_LOG(LOG_ERR, "parse_firmware_uri failed");
            return -1;
        }
    }

    transaction = transaction_new(server->sessionH, COAP_GET, NULL, NULL, contextP->nextMID++, 4, NULL);
    if (!transaction) {
        ATINY_LOG(LOG_ERR, "transaction_new failed");
        return -1;
    }
    ret = coap_set_header_uri_path(transaction->message, g_ota_uri);
    if ((ret < 0) || (transaction->message->uri_path == NULL)) {
        transaction_free(transaction);
        return -1;
    }

    // coap_set_header_uri_query(transaction->message, query);
    if (g_fw_update_record.in_use == 1) {
        ret = coap_set_header_block2(transaction->message, g_fw_update_record.block_num + 1, 0, g_fw_update_record.block_size);
    } else {
        ret = coap_set_header_block2(transaction->message, 0, 0, FW_BLOCK_SIZE);
    }
    if (ret != 1) {
        transaction_free(transaction);
        return -1;
    }

    transaction->callback = firmware_download_reply;
    transaction->userData = (void *)contextP;

    contextP->transactionList = (lwm2m_transaction_t *)LWM2M_LIST_ADD(contextP->transactionList, transaction);

    if (transaction_send(contextP, transaction) != 0) {
        ATINY_LOG(LOG_ERR, "transaction_send failed");
        return -1;
    }

    return 0;
}
