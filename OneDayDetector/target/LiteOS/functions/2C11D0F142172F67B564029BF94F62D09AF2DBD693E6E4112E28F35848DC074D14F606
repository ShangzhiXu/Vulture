VOID OsExceptSyncExcHdl(ExcContext *frame)
{
    UINT32 regESR = AARCH64_SYSREG_READ(ESR_ELx);
    UINT32 bitsEC = NBIT(regESR, 31, 26);       /* get the 26-31bit for EC */

#if (LOSCFG_KERNEL_SMP == YES)
    /* use halt ipi to stop other active cores */
    UINT32 target = (UINT32)(OS_MP_CPU_ALL & ~CPUID_TO_AFFI_MASK(ArchCurrCpuid()));
    HalIrqSendIpi(target, LOS_MP_IPI_HALT);
#endif

#ifdef LOSCFG_SHELL_EXCINFO_DUMP
    LogReadWriteFunc func = OsGetExcInfoRW();
#endif

    g_curNestCount++;

    if (g_curNestCount == 1) {
        if (g_excHook != NULL) {
            g_excHook(0, frame);
        }

#ifdef LOSCFG_SHELL_EXCINFO_DUMP
        if (func != NULL) {
            SetExcInfoIndex(0);
        }
        OsRecordExcInfoTime();
#endif
        PrintExcInfo("/*******************Exception Information*******************/"
                     "\nExcClass:0x%x => ", bitsEC);

        OsExcType(frame, regESR, bitsEC);
        OsExcDumpContext(frame);

        PrintExcInfo("/*******************Exception Information END*****************/\n");
    } else {
        OsCallStackInfo();
    }
#ifdef LOSCFG_SHELL_EXCINFO_DUMP
    if (func != NULL) {
        PrintExcInfo("Be sure your space bigger than OsOsGetExcInfoOffset():0x%x\n", OsGetExcInfoOffset());
        func(OsGetExcInfoDumpAddr(), OsGetExcInfoLen(), 0, OsGetExcInfoBuf());
    }
#endif
#ifdef LOSCFG_EXC_INTERACTION
    OsKeepExcInteractionTask();
#endif
    for (;;) {
        ;
    }
}
