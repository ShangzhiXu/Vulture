static void test_def_itoa(int number, const char *expected)
{
  char buf[TEST_BUFSIZE];
  char *test_buf = &buf[GUARD_SIZE];

  size_t exp_len = strlen(expected);
  fail_unless(exp_len + 4 < (TEST_BUFSIZE - (2 * GUARD_SIZE)));

  memset(buf, MAGIC_UNTOUCHED_BYTE, sizeof(buf));
  lwip_itoa(test_buf, exp_len + 1, number);
  def_check_range_untouched(buf, GUARD_SIZE);
  fail_unless(test_buf[exp_len] == 0);
  fail_unless(!memcmp(test_buf, expected, exp_len));
  def_check_range_untouched(&test_buf[exp_len + 1], TEST_BUFSIZE - GUARD_SIZE - exp_len - 1);

  /* check with too small buffer */
  memset(buf, MAGIC_UNTOUCHED_BYTE, sizeof(buf));
  lwip_itoa(test_buf, exp_len, number);
  def_check_range_untouched(buf, GUARD_SIZE);
  def_check_range_untouched(&test_buf[exp_len + 1], TEST_BUFSIZE - GUARD_SIZE - exp_len - 1);

  /* check with too large buffer */
  memset(buf, MAGIC_UNTOUCHED_BYTE, sizeof(buf));
  lwip_itoa(test_buf, exp_len + 4, number);
  def_check_range_untouched(buf, GUARD_SIZE);
  fail_unless(test_buf[exp_len] == 0);
  fail_unless(!memcmp(test_buf, expected, exp_len));
  def_check_range_untouched(&test_buf[exp_len + 4], TEST_BUFSIZE - GUARD_SIZE - exp_len - 4);
}
