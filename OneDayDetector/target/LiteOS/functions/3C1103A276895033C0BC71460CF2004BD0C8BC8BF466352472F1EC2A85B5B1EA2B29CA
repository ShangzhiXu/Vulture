static cJSON *create_service_data(cJSON *profile_data[], uint32_t num)
{
    cJSON *service_data = NULL;
    int ret = ATINY_ERR;
    const char *serviceid = "Battery";
    const char *evet_time = "20201103T114920Z";
    uint32_t i;

    service_data = cJSON_CreateArray();
    if (service_data == NULL) {
        ATINY_LOG(LOG_ERR, "cJSON_CreateArray null");
        goto EXIT;
    }

    for (i = 0; i < num; i++) {
        cJSON *item = NULL;
        cJSON *tmp = NULL;

        item = cJSON_CreateObject();
        if (item == NULL) {
            ATINY_LOG(LOG_ERR, "cJSON_CreateObject null");
            goto EXIT;
        }
        cJSON_AddItemToArray(service_data, item);

        tmp = cJSON_CreateString(serviceid);
        if (tmp == NULL) {
            ATINY_LOG(LOG_ERR, "cJSON_CreateString null");
            goto EXIT;
        }
        cJSON_AddItemToObject(item, MQTT_SERVICEID, tmp);

        cJSON_AddItemToObject(item, MQTT_SERVICE_DATA, profile_data[i]);
        profile_data[i] = NULL;

        tmp = cJSON_CreateString(evet_time);
        if (tmp == NULL) {
            ATINY_LOG(LOG_ERR, "cJSON_CreateString null");
            goto EXIT;
        }
        cJSON_AddItemToObject(item, MQTT_EVENT_TIME, tmp);
    }

    ret = ATINY_OK;

EXIT:
    if (ret != ATINY_OK) {
        if (service_data != NULL) {
            cJSON_Delete(service_data);
            service_data = NULL;
        }
    }

    for (i = 0; i < num; i++) {
        if (profile_data[i]) {
            cJSON_Delete(profile_data[i]);
        }
    }

    return service_data;
}
