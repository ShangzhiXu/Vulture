int pack_checksum_update_data(pack_checksum_s *thi, uint32_t offset, const uint8_t *buff, uint16_t len,
                              pack_hardware_s *hardware)
{
    int ret;

    ASSERT_THIS(return PACK_ERR);

    if (len == 0) {
        return PACK_OK;
    }

    if (buff == NULL) {
        PACK_LOG("buff null");
        return PACK_ERR;
    }

    if (((thi->offset_flag) && (thi->offset == offset)) || (pack_head_get_head_len(thi->head) == offset)) {
        if (pack_checksum_get_alg(thi)->update(pack_checksum_get_alg(thi), buff, len) != PACK_OK) {
            return PACK_ERR;
        }
        thi->offset_flag = true;
        thi->offset = offset + len;
        return PACK_OK;
    }
    if ((hardware == NULL) || (hardware->read_software == NULL)) {
        PACK_LOG("hardware null");
        return PACK_ERR;
    }

    ret = pack_checksum_init_head_data(thi);
    if (ret != PACK_OK) {
        return ret;
    }

    ret = pack_checksum_restore_checksum(thi, offset, hardware);
    if (ret != PACK_OK) {
        return ret;
    }

    if (pack_checksum_get_alg(thi)->update(pack_checksum_get_alg(thi), buff, len) != PACK_OK) {
        return PACK_ERR;
    }

    thi->offset_flag = true;
    thi->offset = offset + len;
    return PACK_OK;
}
