UINT32 LOS_RingbufWrite(Ringbuf *ringbuf, const CHAR *buf, UINT32 size)
{
    UINT32 cpSize = 0;
    UINT32 intSave;
    if ((ringbuf == NULL) || (buf == NULL) || (size == 0) || (ringbuf->status != RBUF_INITED)) {
        return 0;
    }

    LOS_SpinLockSave(&ringbuf->lock, &intSave);

    if ((ringbuf->fifo == NULL) || (ringbuf->remain == 0))  {
        cpSize = 0;
        goto EXIT;
    }

    if (ringbuf->startIdx <= ringbuf->endIdx) {
        cpSize = OsRingbufWriteLoop(ringbuf, buf, size);
    } else {
        cpSize = OsRingbufWriteLinear(ringbuf, buf, size);
    }
EXIT:
    LOS_SpinUnlockRestore(&ringbuf->lock, intSave);
    return cpSize;
}
