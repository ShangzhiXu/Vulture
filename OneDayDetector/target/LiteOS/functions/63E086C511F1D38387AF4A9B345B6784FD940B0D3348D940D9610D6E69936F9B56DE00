static spiffs_cache_page *spiffs_cache_page_get(spiffs *fs, spiffs_page_ix pix)
{
    spiffs_cache *cache = spiffs_get_cache(fs);
    if ((cache->cpage_use_map & cache->cpage_use_mask) == 0) return 0;
    int i;
    for (i = 0; i < cache->cpage_count; i++)
    {
        spiffs_cache_page *cp = spiffs_get_cache_page_hdr(fs, cache, i);
        if ((cache->cpage_use_map & (1 << i)) &&
                (cp->flags & SPIFFS_CACHE_FLAG_TYPE_WR) == 0 &&
                cp->pix == pix )
        {
            //SPIFFS_CACHE_DBG("CACHE_GET: have cache page "_SPIPRIi" for "_SPIPRIpg"\n", i, pix);
            cp->last_access = cache->last_access;
            return cp;
        }
    }
    //SPIFFS_CACHE_DBG("CACHE_GET: no cache for "_SPIPRIpg"\n", pix);
    return 0;
}
