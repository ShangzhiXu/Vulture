void PrintOutTensor(MsMicroTensor *tensor)
{
    if (tensor == NULL) {
        return;
    }
    unsigned int tensorSize = GetTensorElementSize(tensor);
    if (tensorSize > kPrintNums) {
        tensorSize = kPrintNums;
    }

    switch ((enum DataType)tensor->type) {
        case DataType_DT_FLOAT:
            PrintTensor_fp(tensor->data, tensorSize);
            break;
        case DataType_DT_FLOAT16:
            PrintTensor_fp(tensor->data, tensorSize);
            break;
        case DataType_DT_INT8:
            PrintTensor_8(tensor->data, tensorSize);
            break;
        case DataType_DT_INT32:
            PrintTensor_32(tensor->data, tensorSize);
            break;
        case DataType_DT_UINT8:
            PrintTensor_U8(tensor->data, tensorSize);
            break;
        case DataType_DT_INT16:
            PrintTensor_16(tensor->data, tensorSize);
            break;
        case DataType_DT_UINT32:
            PrintTensor_U32(tensor->data, tensorSize);
            break;
        case DataType_DT_INT64:
            PrintTensor_64(tensor->data, tensorSize);
            break;
        case DataType_DT_UINT16:
            PrintTensor_U16(tensor->data, tensorSize);
            break;
        default:
            printf("data type is not supported.\n\n\n");
    }
}
