s32_t spiffs_phys_wr(
    spiffs *fs,
    u8_t op,
    spiffs_file fh,
    u32_t addr,
    u32_t len,
    u8_t *src)
{
    (void)fh;
    spiffs_page_ix pix = SPIFFS_PADDR_TO_PAGE(fs, addr);
    spiffs_cache *cache = spiffs_get_cache(fs);
    spiffs_cache_page *cp =  spiffs_cache_page_get(fs, pix);

    if (cp && (op & SPIFFS_OP_COM_MASK) != SPIFFS_OP_C_WRTHRU)
    {
        // have a cache page
        // copy in data to cache page

        if ((op & SPIFFS_OP_COM_MASK) == SPIFFS_OP_C_DELE &&
                (op & SPIFFS_OP_TYPE_MASK) != SPIFFS_OP_T_OBJ_LU)
        {
            // page is being deleted, wipe from cache - unless it is a lookup page
            spiffs_cache_page_free(fs, cp->ix, 0);
            return SPIFFS_HAL_WRITE(fs, addr, len, src);
        }

        u8_t *mem =  spiffs_get_cache_page(fs, cache, cp->ix);
        _SPIFFS_MEMCPY(&mem[SPIFFS_PADDR_TO_PAGE_OFFSET(fs, addr)], src, len);

        cache->last_access++;
        cp->last_access = cache->last_access;

        if (cp->flags & SPIFFS_CACHE_FLAG_WRTHRU)
        {
            // page is being updated, no write-cache, just pass thru
            return SPIFFS_HAL_WRITE(fs, addr, len, src);
        }
        else
        {
            return SPIFFS_OK;
        }
    }
    else
    {
        // no cache page, no write cache - just write thru
        return SPIFFS_HAL_WRITE(fs, addr, len, src);
    }
}
