static s16_t usmusertable_get_value(struct snmp_node_instance *cell_instance, void *value)
{
  snmpv3_user_storagetype_t storage_type;

  switch (SNMP_TABLE_GET_COLUMN_FROM_OID(cell_instance->instance_oid.id)) {
    case 3: /* usmUserSecurityName */
      MEMCPY(value, cell_instance->reference.ptr, cell_instance->reference_len);
      return (s16_t)cell_instance->reference_len;
    case 4: /* usmUserCloneFrom */
      MEMCPY(value, snmp_zero_dot_zero.id, snmp_zero_dot_zero.len * sizeof(u32_t));
      return snmp_zero_dot_zero.len * sizeof(u32_t);
    case 5: { /* usmUserAuthProtocol */
      const struct snmp_obj_id *auth_algo;
      snmpv3_auth_algo_t auth_algo_val;
      snmpv3_get_user((const char *)cell_instance->reference.ptr, &auth_algo_val, NULL, NULL, NULL);
      auth_algo = snmp_auth_algo_to_oid(auth_algo_val);
      MEMCPY(value, auth_algo->id, auth_algo->len * sizeof(u32_t));
      return auth_algo->len * sizeof(u32_t);
    }
    case 6: /* usmUserAuthKeyChange */
      return 0;
    case 7: /* usmUserOwnAuthKeyChange */
      return 0;
    case 8: { /* usmUserPrivProtocol */
      const struct snmp_obj_id *priv_algo;
      snmpv3_priv_algo_t priv_algo_val;
      snmpv3_get_user((const char *)cell_instance->reference.ptr, NULL, NULL, &priv_algo_val, NULL);
      priv_algo = snmp_priv_algo_to_oid(priv_algo_val);
      MEMCPY(value, priv_algo->id, priv_algo->len * sizeof(u32_t));
      return priv_algo->len * sizeof(u32_t);
    }
    case 9: /* usmUserPrivKeyChange */
      return 0;
    case 10: /* usmUserOwnPrivKeyChange */
      return 0;
    case 11: /* usmUserPublic */
      /* TODO: Implement usmUserPublic */
      return 0;
    case 12: /* usmUserStorageType */
      snmpv3_get_user_storagetype((const char *)cell_instance->reference.ptr, &storage_type);
      *(s32_t *)value = storage_type;
      return sizeof(s32_t);
    case 13: /* usmUserStatus */
      *(s32_t *)value = 1; /* active */
      return sizeof(s32_t);
    default:
      LWIP_DEBUGF(SNMP_MIB_DEBUG, ("usmusertable_get_value(): unknown id: %"S32_F"\n", SNMP_TABLE_GET_COLUMN_FROM_OID(cell_instance->instance_oid.id)));
      return 0;
  }
}
