lv_obj_t * lv_keyboard_create(lv_obj_t * par, const lv_obj_t * copy)
{
    LV_LOG_TRACE("keyboard create started");

    /*Create the ancestor of keyboard*/
    lv_obj_t * kb = lv_btnmatrix_create(par, copy);
    LV_ASSERT_MEM(kb);
    if(kb == NULL) return NULL;

    if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(kb);

    /*Allocate the keyboard type specific extended data*/
    lv_keyboard_ext_t * ext = lv_obj_allocate_ext_attr(kb, sizeof(lv_keyboard_ext_t));
    LV_ASSERT_MEM(ext);
    if(ext == NULL) {
        lv_obj_del(kb);
        return NULL;
    }

    /*Initialize the allocated 'ext' */
    ext->ta         = NULL;
    ext->mode       = LV_KEYBOARD_MODE_TEXT_LOWER;
    ext->cursor_mng = 0;

    /*The signal and design functions are not copied so set them here*/
    lv_obj_set_signal_cb(kb, lv_keyboard_signal);

    /*Init the new keyboard keyboard*/
    if(copy == NULL) {
        /* Set a size which fits into the parent.
         * Don't use `par` directly because if the window is created on a page it is moved to the
         * scrollable so the parent has changed */
        lv_obj_set_size(kb, lv_obj_get_width_fit(lv_obj_get_parent(kb)),
                        lv_obj_get_height_fit(lv_obj_get_parent(kb)) / 2);
        lv_obj_align(kb, NULL, LV_ALIGN_IN_BOTTOM_MID, 0, 0);
        lv_obj_set_event_cb(kb, lv_keyboard_def_event_cb);
        lv_obj_set_base_dir(kb, LV_BIDI_DIR_LTR);
        lv_obj_add_protect(kb, LV_PROTECT_CLICK_FOCUS);

        lv_btnmatrix_set_map(kb, kb_map[ext->mode]);
        lv_btnmatrix_set_ctrl_map(kb, kb_ctrl[ext->mode]);

        lv_theme_apply(kb, LV_THEME_KEYBOARD);
    }
    /*Copy an existing keyboard*/
    else {
        lv_keyboard_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
        ext->ta                = copy_ext->ta;
        ext->mode              = copy_ext->mode;
        ext->cursor_mng        = copy_ext->cursor_mng;

        lv_btnmatrix_set_map(kb, kb_map[ext->mode]);
        lv_btnmatrix_set_ctrl_map(kb, kb_ctrl[ext->mode]);

        /*Refresh the style with new signal function*/
        //        lv_obj_refresh_style(new_kb);
    }

    LV_LOG_INFO("keyboard created");

    return kb;
}
