static uint8_t prv_read(uint16_t instanceId, int *numDataP, lwm2m_data_t **dataArrayP,
                        lwm2m_data_cfg_t *dataCfg, lwm2m_object_t *objectP)
{
    uint8_t result;
    int     ri, ni;

    // multi-instance object: search instance
    acc_ctrl_oi_t *accCtrlOiP = (acc_ctrl_oi_t *)lwm2m_list_find(objectP->instanceList, instanceId);
    if (accCtrlOiP == NULL) {
        return COAP_404_NOT_FOUND ;
    }

    // is the server asking for the full object ?
    if (*numDataP == 0) {
        uint16_t resList[] = {
            RES_M_OBJECT_ID,
            RES_M_OBJECT_INSTANCE_ID,
            RES_O_ACL,  // prv_set_tlv will return COAP_404_NOT_FOUND w/o values!
            RES_M_ACCESS_CONTROL_OWNER
        };
        int nbRes = sizeof(resList) / sizeof(uint16_t);

        *dataArrayP = lwm2m_data_new(nbRes);
        if (*dataArrayP == NULL) {
            return COAP_500_INTERNAL_SERVER_ERROR ;
        }
        *numDataP = nbRes;
        for (ri = 0; ri < nbRes; ri++) {
            (*dataArrayP)[ri].id = resList[ri];
        }
    }

    ni = ri = 0;
    do {
        result = prv_set_tlv((*dataArrayP) + ni, accCtrlOiP);
        if (result == COAP_404_NOT_FOUND) {
            ri++;
            if (*numDataP > 1) {
                result = COAP_205_CONTENT;
            }
        } else if (ri > 0) {    // copy new one by ri skipped ones in front
            (*dataArrayP)[ni - ri] = (*dataArrayP)[ni];
        }
        ni++;
    }
    while ((ni < *numDataP) && (result == COAP_205_CONTENT));
    *numDataP = ni - ri;

    return result;
}
