int32_t at_cmd_multi_suffix(const int8_t *cmd, int  len, at_cmd_info_s *cmd_info)
{
    at_listener listener;
    int ret;
    int print_len;

    if ((cmd_info == NULL) || (cmd == NULL)) {
        return AT_FAILED;
    }

    memset(&listener, 0, sizeof(listener));
    listener.cmd_info = *cmd_info;
    print_len = ((cmd_info->resp_buf && cmd_info->resp_len) ? (int)*(cmd_info->resp_len) : -1);
    AT_LOG("cmd len %d, %p,%d", print_len, cmd_info->resp_buf, (int)cmd_info->resp_len);

    LOS_MuxPend(at.trx_mux, LOS_WAIT_FOREVER);

    LOS_MuxPend(at.cmd_mux, LOS_WAIT_FOREVER);
    at_listener_list_add(&listener);
    at_transmit((uint8_t *)cmd, len, 1);
    LOS_MuxPost(at.cmd_mux);

    ret = LOS_SemPend(at.resp_sem, at.timeout);

    LOS_MuxPend(at.cmd_mux, LOS_WAIT_FOREVER);
    at_listner_list_del(&listener);
    LOS_MuxPost(at.cmd_mux);

    LOS_MuxPost(at.trx_mux);
    write_at_task_msg(AT_SENT_DONE);

    if (ret != LOS_OK) {
        AT_LOG("LOS_SemPend for listener.resp_sem failed(ret = %x, cmd = %s)!", ret, cmd);
        return AT_FAILED;
    }

    *cmd_info = listener.cmd_info;
    return AT_OK;
}
