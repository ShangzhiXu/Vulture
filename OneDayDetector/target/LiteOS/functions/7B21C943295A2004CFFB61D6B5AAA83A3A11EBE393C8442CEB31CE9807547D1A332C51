static lv_res_t lv_roller_scrl_signal(lv_obj_t * roller_scrl, lv_signal_t sign, void * param)
{
    lv_res_t res;

    /* Include the ancient signal function */
    res = ancestor_scrl_signal(roller_scrl, sign, param);
    if(res != LV_RES_OK) return res;
    if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);

    lv_obj_t * roller     = lv_obj_get_parent(roller_scrl);

    /*On delete the ddlist signal deletes the label so nothing left to do here*/
    lv_obj_t * label = get_label(roller);
    if(label == NULL) return LV_RES_INV;

    int32_t id            = -1;
    lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);

    const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
    lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
    lv_coord_t font_h              = lv_font_get_line_height(font);

    if(sign == LV_SIGNAL_DRAG_END) {
        /*If dragged then align the list to have an element in the middle*/
        lv_coord_t label_y1   = label->coords.y1 - roller->coords.y1;
        lv_coord_t label_unit = font_h + line_space;
        lv_coord_t mid        = (roller->coords.y2 - roller->coords.y1) / 2;

        id = (mid - label_y1 + line_space / 2) / label_unit;

        if(id < 0) id = 0;
        if(id >= ext->option_cnt) id = ext->option_cnt - 1;

        ext->sel_opt_id     = id;
        ext->sel_opt_id_ori = id;
        res                        = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
        if(res != LV_RES_OK) return res;
    }
    /*If picked an option by clicking then set it*/
    else if(sign == LV_SIGNAL_RELEASED) {
        release_handler(roller);
    }
    else if(sign == LV_SIGNAL_PRESSED) {
#if LV_USE_ANIMATION
        lv_anim_del(roller_scrl, (lv_anim_exec_xcb_t)lv_obj_set_y);
#endif
    }
    else if(sign == LV_SIGNAL_PARENT_SIZE_CHG) {
#if LV_USE_ANIMATION
        lv_anim_del(lv_page_get_scrllable(roller), (lv_anim_exec_xcb_t)lv_obj_set_y);
#endif
        refr_position(roller, false);
        refr_width(roller);

    }

    /*Position the scrollable according to the new selected option*/
    if(id != -1) {
        refr_position(roller, LV_ANIM_ON);
    }

    return res;
}
