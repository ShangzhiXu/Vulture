s32_t SPIFFS_ix_map(spiffs *fs,  spiffs_file fh, spiffs_ix_map *map,
                    u32_t offset, u32_t len, spiffs_page_ix *map_buf)
{
    SPIFFS_API_DBG("%s "_SPIPRIfd " "_SPIPRIi " "_SPIPRIi "\n", __func__, fh, offset, len);
    s32_t res;
    SPIFFS_API_CHECK_CFG(fs);
    SPIFFS_API_CHECK_MOUNT(fs);
    SPIFFS_LOCK(fs);

    fh = SPIFFS_FH_UNOFFS(fs, fh);

    spiffs_fd *fd;
    res = spiffs_fd_get(fs, fh, &fd);
    SPIFFS_API_CHECK_RES_UNLOCK(fs, res);

    if (fd->ix_map)
    {
        SPIFFS_API_CHECK_RES_UNLOCK(fs, SPIFFS_ERR_IX_MAP_MAPPED);
    }

    map->map_buf = map_buf;
    map->offset = offset;
    // nb: spix range includes last
    map->start_spix = offset / SPIFFS_DATA_PAGE_SIZE(fs);
    map->end_spix = (offset + len) / SPIFFS_DATA_PAGE_SIZE(fs);
    memset(map_buf, 0, sizeof(spiffs_page_ix) * (map->end_spix - map->start_spix + 1));
    fd->ix_map = map;

    // scan for pixes
    res = spiffs_populate_ix_map(fs, fd, 0, map->end_spix - map->start_spix + 1);
    SPIFFS_API_CHECK_RES_UNLOCK(fs, res);

    SPIFFS_UNLOCK(fs);
    return res;
}
