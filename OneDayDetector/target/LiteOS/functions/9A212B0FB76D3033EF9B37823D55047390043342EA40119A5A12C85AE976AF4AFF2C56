lv_obj_t * lv_imgbtn_create(lv_obj_t * par, const lv_obj_t * copy)
{
    LV_LOG_TRACE("image button create started");

    /*Create the ancestor of image button*/
    lv_obj_t * imgbtn = lv_btn_create(par, copy);
    LV_ASSERT_MEM(imgbtn);
    if(imgbtn == NULL) return NULL;

    /*Allocate the image button type specific extended data*/
    lv_imgbtn_ext_t * ext = lv_obj_allocate_ext_attr(imgbtn, sizeof(lv_imgbtn_ext_t));
    LV_ASSERT_MEM(ext);
    if(ext == NULL) {
        lv_obj_del(imgbtn);
        return NULL;
    }

    if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(imgbtn);
    if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);

    /*Initialize the allocated 'ext' */
    _lv_memset_00((void *)ext->img_src_mid, sizeof(ext->img_src_mid));
#if LV_IMGBTN_TILED
    _lv_memset_00(ext->img_src_left, sizeof(ext->img_src_left));
    _lv_memset_00(ext->img_src_right, sizeof(ext->img_src_right));
#endif
    ext->tiled = 0;

    ext->act_cf = LV_IMG_CF_UNKNOWN;

    /*The signal and design functions are not copied so set them here*/
    lv_obj_set_signal_cb(imgbtn, lv_imgbtn_signal);
    lv_obj_set_design_cb(imgbtn, lv_imgbtn_design);

    /*Init the new image button image button*/
    if(copy == NULL) {
        lv_theme_apply(imgbtn, LV_THEME_IMGBTN);
    }
    /*Copy an existing image button*/
    else {
        lv_imgbtn_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
        _lv_memcpy((void *)ext->img_src_mid, copy_ext->img_src_mid, sizeof(ext->img_src_mid));
#if LV_IMGBTN_TILED
        _lv_memcpy((void *)ext->img_src_left, copy_ext->img_src_left, sizeof(ext->img_src_left));
        _lv_memcpy((void *)ext->img_src_right, copy_ext->img_src_right, sizeof(ext->img_src_right));
#endif
        ext->tiled = copy_ext->tiled;
        /*Refresh the style with new signal function*/
        lv_obj_refresh_style(imgbtn, LV_STYLE_PROP_ALL);
    }

    LV_LOG_INFO("image button created");

    return imgbtn;
}
