lwm2m_object_t *get_object_location(void)
{
    // -------------------------------------------------------------------- JH --
    lwm2m_object_t *locationObj;

    locationObj = (lwm2m_object_t *)lwm2m_malloc(sizeof(lwm2m_object_t));
    if (locationObj != NULL) {
        memset(locationObj, 0, sizeof(lwm2m_object_t));

        // It assigns its unique ID
        // The 6 is the standard ID for the optional object "Location".
        locationObj->objID = LWM2M_LOCATION_OBJECT_ID;

        // and its unique instance
        locationObj->instanceList = (lwm2m_list_t *)lwm2m_malloc(sizeof(lwm2m_list_t));
        if (locationObj->instanceList != NULL) {
            memset(locationObj->instanceList, 0, sizeof(lwm2m_list_t));
        } else {
            lwm2m_free(locationObj);
            return NULL;
        }

        // And the private function that will access the object.
        // Those function will be called when a read query is made by the server.
        // In fact the library don't need to know the resources of the object, only the server does.
        locationObj->readFunc = prv_location_read;
    }

    return locationObj;
}
