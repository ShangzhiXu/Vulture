s32_t spiffs_populate_ix_map(spiffs *fs, spiffs_fd *fd, u32_t vec_entry_start, u32_t vec_entry_end)
{
    s32_t res;
    spiffs_ix_map *map = fd->ix_map;
    spiffs_ix_map_populate_state state;
    vec_entry_start = MIN((u32_t)(map->end_spix - map->start_spix), vec_entry_start);
    vec_entry_end = MAX((u32_t)(map->end_spix - map->start_spix), vec_entry_end);
    if (vec_entry_start > vec_entry_end)
    {
        return SPIFFS_ERR_IX_MAP_BAD_RANGE;
    }
    state.map_objix_start_spix = SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs, map->start_spix + vec_entry_start);
    state.map_objix_end_spix = SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs, map->start_spix + vec_entry_end);
    state.remaining_objix_pages_to_visit =
        state.map_objix_end_spix - state.map_objix_start_spix + 1;
    state.fd = fd;

    res = spiffs_obj_lu_find_entry_visitor(
              fs,
              SPIFFS_BLOCK_FOR_PAGE(fs, fd->objix_hdr_pix),
              SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE(fs, fd->objix_hdr_pix),
              SPIFFS_VIS_CHECK_ID,
              fd->obj_id | SPIFFS_OBJ_ID_IX_FLAG,
              spiffs_populate_ix_map_v,
              0,
              &state,
              0,
              0);

    if (res == SPIFFS_VIS_END)
    {
        res = SPIFFS_OK;
    }

    return res;
}
