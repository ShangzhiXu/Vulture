int32_t esp8266_bind(const int8_t *host, const int8_t *port, int32_t proto)
{
    int ret = AT_FAILED;
    int port_i = 0;
    char cmd[64] = {0};

    (void)sscanf((char *)port, "%d", &port_i);
    AT_LOG("get port = %d\r\n", port_i);

    if (at.mux_mode != AT_MUXMODE_MULTI) {
        AT_LOG("Only support in multi mode!\r\n");
        return -1;
    }

    int id = at.get_id();
    ret = LOS_QueueCreate("dataQueue", 16, &at.linkid[id].qid, 0, sizeof(QUEUE_BUFF));
    if (ret != LOS_OK) {
        AT_LOG("init dataQueue failed!");
        at.linkid[id].usable = AT_LINK_UNUSE;
        return AT_FAILED;
    }

    snprintf(cmd, 64, "%s=%d,\"%s\",\"0.0.0.0\",0,%d,0", AT_CMD_CONN, id, proto == ATINY_PROTO_UDP ? "UDP" : "TCP",
        port_i);

    esp8266_cmd((int8_t *)cmd, strlen(cmd), "OK\r\n", NULL, NULL);
    return id;
}
