static int atiny_fota_downloaded_state_recv_notify_ack(atiny_fota_state_s *thi, data_send_status_e status)
{
    int ret;
    atiny_fota_state_e rpt_state;
    lwm2m_observe_info_t observe_info;
    pack_storage_device_api_s *device = NULL;

    ASSERT_THIS(return ATINY_ARG_INVALID);
    if (status != SENT_SUCCESS) {
        ATINY_LOG(LOG_ERR, "downloaded state notify fail %d", status);
        atiny_fota_manager_set_update_result(thi->manager, ATINY_FIRMWARE_UPDATE_FAIL);
        return atiny_fota_manager_set_state(thi->manager, ATINY_FOTA_IDLE);
    }

    rpt_state = atiny_fota_manager_get_rpt_state(thi->manager);
    // rpt downloading state ack
    if (rpt_state == ATINY_FOTA_DOWNLOADING) {
        ret = start_firmware_download(atiny_fota_manager_get_lwm2m_context(thi->manager), atiny_fota_manager_get_pkg_uri(thi->manager),
                                      atiny_fota_manager_get_storage_device(thi->manager));
        if (ret == ATINY_OK) {
            return atiny_fota_manager_set_state(thi->manager, ATINY_FOTA_DOWNLOADING);
        }
        ATINY_LOG(LOG_ERR, "start_firmware_download fail %d", ret);
        atiny_fota_manager_set_update_result(thi->manager, ATINY_FIRMWARE_UPDATE_FAIL);
        (void)atiny_fota_manager_rpt_state(thi->manager, ATINY_FOTA_IDLE);
        return ATINY_ERR;
    }

    // rpt idle state ack
    if (ATINY_FOTA_IDLE == rpt_state) {
        return atiny_fota_manager_set_state(thi->manager, rpt_state);
    }

    // rpt downloaded state ack
    if (ATINY_FOTA_DOWNLOADED == rpt_state) {
        return ATINY_OK;
    }

    // rpt updating state ack
    if (lwm2m_get_observe_info(atiny_fota_manager_get_lwm2m_context(thi->manager), &observe_info) != COAP_NO_ERROR
            || 0 == observe_info.tokenLen) {
        ATINY_LOG(LOG_ERR, "lwm2m_get_observe_info fail");
        goto EXIT_DOWNLOADED;
    }

    device = atiny_fota_manager_get_storage_device(thi->manager);
    if ((device == NULL) || (device->active_software == NULL) || (device->active_software(device) != ATINY_OK)) {
        ATINY_LOG(LOG_ERR, "active_software fail");
        goto EXIT_DOWNLOADED;
    }

    if (flag_write(FLAG_APP, &observe_info, sizeof(observe_info)) != ATINY_OK) {
        ATINY_LOG(LOG_ERR, "flag_write fail");
        goto EXIT_DOWNLOADED;
    }

    atiny_set_reboot_flag();
    return atiny_fota_manager_set_state(thi->manager, ATINY_FOTA_UPDATING);

EXIT_DOWNLOADED:
    atiny_fota_manager_set_update_result(thi->manager, ATINY_FIRMWARE_UPDATE_FAIL);
    (void)atiny_fota_manager_rpt_state(thi->manager, ATINY_FOTA_DOWNLOADED);
    return ATINY_ERR;
}
