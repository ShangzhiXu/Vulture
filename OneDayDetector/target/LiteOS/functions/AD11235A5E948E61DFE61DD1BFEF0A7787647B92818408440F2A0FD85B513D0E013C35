void lv_roller_set_options(lv_obj_t * roller, const char * options, lv_roller_mode_t mode)
{
    LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
    LV_ASSERT_STR(options);


    lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
    lv_obj_t * label = get_label(roller);

    ext->sel_opt_id     = 0;
    ext->sel_opt_id_ori = 0;

    /*Count the '\n'-s to determine the number of options*/
    ext->option_cnt = 0;
    uint16_t cnt;
    for(cnt = 0; options[cnt] != '\0'; cnt++) {
        if(options[cnt] == '\n') ext->option_cnt++;
    }
    ext->option_cnt++; /*Last option has no `\n`*/

    if(mode == LV_ROLLER_MODE_NORMAL) {
        ext->mode = LV_ROLLER_MODE_NORMAL;
        lv_label_set_text(label, options);
    }
    else {
        ext->mode = LV_ROLLER_MODE_INIFINITE;

        size_t opt_len = strlen(options) + 1; /*+1 to add '\n' after option lists*/
        char * opt_extra = _lv_mem_buf_get(opt_len * LV_ROLLER_INF_PAGES);
        uint8_t i;
        for(i = 0; i < LV_ROLLER_INF_PAGES; i++) {
            strcpy(&opt_extra[opt_len * i], options);
            opt_extra[opt_len * (i + 1) - 1] = '\n';
        }
        opt_extra[opt_len * LV_ROLLER_INF_PAGES - 1] = '\0';
        lv_label_set_text(label, opt_extra);
        _lv_mem_buf_release(opt_extra);

        ext->sel_opt_id     = ((LV_ROLLER_INF_PAGES / 2) + 1) * ext->option_cnt;

        ext->option_cnt = ext->option_cnt * LV_ROLLER_INF_PAGES;
    }

    ext->sel_opt_id_ori = ext->sel_opt_id;


    //    refr_width(roller);
    //    refr_height(roller);
    refr_position(roller, LV_ANIM_OFF);
}
