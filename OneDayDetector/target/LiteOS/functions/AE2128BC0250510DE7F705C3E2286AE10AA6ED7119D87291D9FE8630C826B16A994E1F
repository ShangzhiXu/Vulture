UINT32 Example_SwTimer(VOID)
{
    UINT16 id1;
    UINT16 id2; // timer id
    UINT32 ret;

    printf("Kernel swtimer demo begin.\n");
#if (LOSCFG_BASE_CORE_SWTMR_ALIGN == YES)
    ret = LOS_SwtmrCreate(1000, LOS_SWTMR_MODE_ONCE, Timer1_Callback, &id1, 1, OS_SWTMR_ROUSES_ALLOW, OS_SWTMR_ALIGN_SENSITIVE);
#else
    ret = LOS_SwtmrCreate(1000, LOS_SWTMR_MODE_ONCE, Timer1_Callback, &id1, 1);
#endif
    if (ret != LOS_OK) {
        printf("Create Timer1 failed.\n");
    } else {
        printf("Create Timer1 ok.\n");
    }

#if (LOSCFG_BASE_CORE_SWTMR_ALIGN == YES)
    ret = LOS_SwtmrCreate(100, LOS_SWTMR_MODE_PERIOD, Timer2_Callback, &id2, 1, OS_SWTMR_ROUSES_ALLOW, OS_SWTMR_ALIGN_SENSITIVE);
#else
    ret = LOS_SwtmrCreate(100, LOS_SWTMR_MODE_PERIOD, Timer2_Callback, &id2, 1);
#endif
    if (ret != LOS_OK) {
        printf("Create Timer2 failed.\n");
    } else {
        printf("Create Timer2 ok.\n");
    }

    ret = LOS_SwtmrStart(id1);
    if (ret != LOS_OK) {
        printf("Start Timer1 failed.\n");
    } else {
        printf("Start Timer1 ok.\n");
    }

    (VOID)LOS_TaskDelay(200);

    ret = LOS_SwtmrStop(id1);
    if (ret != LOS_OK) {
        printf("Stop Timer1 failed.\n");
    } else {
        printf("Stop Timer1 ok.\n");
    }

    ret = LOS_SwtmrStart(id1);
    if (ret != LOS_OK) {
        printf("Start Timer1 failed.\n");
    }

    (VOID)LOS_TaskDelay(1000);

    /* the timer that mode is once, kernel will delete it automatically when timer is timeout */
    ret = LOS_SwtmrDelete(id1);
    if (ret != LOS_OK) {
        printf("Delete Timer1 failed.\n");
    } else {
        printf("Delete Timer1 ok.\n");
    }

    ret = LOS_SwtmrStart(id2);
    if (ret != LOS_OK) {
        printf("Start Timer2 failed.\n");
    } else {
        printf("Start Timer2 ok.\n");
    }

    (VOID)LOS_TaskDelay(1000);

    ret = LOS_SwtmrStop(id2);
    if (ret != LOS_OK) {
        printf("Stop Timer2 failed.\n");
    }

    ret = LOS_SwtmrDelete(id2);
    if (ret != LOS_OK) {
        printf("Delete Timer2 failed.\n");
    }

    return LOS_OK;
}
