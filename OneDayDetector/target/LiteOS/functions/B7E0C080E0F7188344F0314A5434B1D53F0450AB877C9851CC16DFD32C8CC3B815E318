struct TM *localtime64_r(const Time64_T *time, struct TM *local_tm)
{
    Time64_T timeoff;
    int dstsec = 0;

    LOCK(lock);
    if (CheckWithinDstPeriod(NULL, *time) == TRUE) {
        dstsec = DstForwardSecondGet();
    }
    timeoff = *time + timezone + dstsec;
    UNLOCK(lock);

    /* Reject time_t values whose year would overflow int because
     * __secs_to_zone cannot safely handle them. */
    if ((timeoff < (INT_MIN * MAX_SEC_PER_YEAR)) || (timeoff > (INT_MAX * MAX_SEC_PER_YEAR))) {
        errno = EOVERFLOW;
        return 0;
    }

    if (__secs_to_tm(timeoff, local_tm) < 0) {
        errno = EOVERFLOW;
        return 0;
    }
    return local_tm;
}
