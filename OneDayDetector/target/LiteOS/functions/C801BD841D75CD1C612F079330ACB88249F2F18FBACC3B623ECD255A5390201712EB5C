void test1_sendAndReceive(MQTTClient *c, int qos, char *test_topic)
{
    char *topicName = NULL;
    int topicLen;
    int i = 0;
    int iterations = 50;
    int rc;
    int wait_seconds;

    MyLog(LOGA_DEBUG, "%d messages at QoS %d", iterations, qos);
    memset(&pubmsg, '\0', sizeof(pubmsg));
    pubmsg.payload = "a much longer message that we can shorten to the extent that we need to payload up to 11";
    pubmsg.payloadlen = 11;
    pubmsg.qos = qos;
    pubmsg.retained = 0;
    pubmsg.dup = 0;

    for (i = 0; i < iterations; ++i)
    {
        test1_message_data = NULL;
        rc = MQTTPublish(c, test_topic, &pubmsg);
        assert("Good rc from publish", rc == MQTT_SUCCESS, "rc was %d", rc);

        /* wait for the message to be received */
        wait_seconds = 10;
        while ((test1_message_data == NULL) && (wait_seconds-- > 0))
        {
            MQTTYield(c, 100);
        }
        assert("Message Arrived", wait_seconds > 0, "Time out waiting for message %d\n", i);

        if (!test1_message_data)
            printf("No message received within timeout period\n");
    }

    /* wait to receive any outstanding messages */
    wait_seconds = 2;
    while (wait_seconds-- > 0)
    {
        MQTTYield(c, 1000);
    }
}
