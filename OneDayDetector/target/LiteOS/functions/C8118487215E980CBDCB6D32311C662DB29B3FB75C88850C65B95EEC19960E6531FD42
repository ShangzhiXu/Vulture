static int atiny_fota_idle_state_recv_notify_ack(atiny_fota_state_s *thi, data_send_status_e status)
{
    int ret;
    atiny_fota_state_e rpt_state;

    if (status != SENT_SUCCESS) {
        ATINY_LOG(LOG_ERR, "idle state notify fail %d", status);
        atiny_fota_manager_set_update_result(thi->manager, ATINY_FIRMWARE_UPDATE_FAIL);
        return atiny_fota_manager_set_state(thi->manager, ATINY_FOTA_IDLE);
    }

    rpt_state = atiny_fota_manager_get_rpt_state(thi->manager) ;

    // idle and downloaded rpt ack
    if ((rpt_state == ATINY_FOTA_IDLE) || (rpt_state == ATINY_FOTA_DOWNLOADED)) {
        return atiny_fota_manager_set_state(thi->manager, rpt_state);
    }

    // updating rpt ack
    if (rpt_state == ATINY_FOTA_UPDATING) {
        ATINY_LOG(LOG_ERR, "idle state recv updaing state ack");
        return ATINY_ERR;
    }

    // downloading rpt ack
    // should return proper result ?
    ret = start_firmware_download(atiny_fota_manager_get_lwm2m_context(thi->manager),
                                  atiny_fota_manager_get_pkg_uri(thi->manager),
                                  atiny_fota_manager_get_storage_device(thi->manager));
    if (ret  == ATINY_OK) {
        return atiny_fota_manager_set_state(thi->manager, ATINY_FOTA_DOWNLOADING);

    }
    ATINY_LOG(LOG_ERR, "start_firmware_download fail %d", ret);
    atiny_fota_manager_set_update_result(thi->manager, ATINY_FIRMWARE_UPDATE_FAIL);
    return atiny_fota_manager_rpt_state(thi->manager, ATINY_FOTA_IDLE);
}
