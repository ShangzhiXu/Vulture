static lv_design_res_t lv_imgbtn_design(lv_obj_t * imgbtn, const lv_area_t * clip_area, lv_design_mode_t mode)
{
    /*Return false if the object is not covers the mask_p area*/
    if(mode == LV_DESIGN_COVER_CHK) {
        lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
        lv_design_res_t cover = LV_DESIGN_RES_NOT_COVER;
        if(ext->act_cf == LV_IMG_CF_TRUE_COLOR || ext->act_cf == LV_IMG_CF_RAW) {
            cover = _lv_area_is_in(clip_area, &imgbtn->coords, 0) ? LV_DESIGN_RES_COVER : LV_DESIGN_RES_NOT_COVER;
        }

        return cover;
    }
    /*Draw the object*/
    else if(mode == LV_DESIGN_DRAW_MAIN) {
        ancestor_design(imgbtn, clip_area, mode);
        /*Just draw an image*/
        lv_imgbtn_ext_t * ext    = lv_obj_get_ext_attr(imgbtn);
        lv_btn_state_t state     = lv_imgbtn_get_state(imgbtn);

        /*Simply draw the middle src if no tiled*/
        if(!ext->tiled) {
            const void * src = ext->img_src_mid[state];
            if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
                lv_draw_label_dsc_t label_dsc;
                lv_draw_label_dsc_init(&label_dsc);
                lv_obj_init_draw_label_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &label_dsc);
                lv_draw_label(&imgbtn->coords, clip_area, &label_dsc, src, NULL);
            }
            else {
                lv_draw_img_dsc_t img_dsc;
                lv_draw_img_dsc_init(&img_dsc);
                lv_obj_init_draw_img_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &img_dsc);
                lv_draw_img(&imgbtn->coords, clip_area, src, &img_dsc);
            }
        }
        else {
#if LV_IMGBTN_TILED
            const void * src = ext->img_src_left[state];
            if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
                LV_LOG_WARN("lv_imgbtn_design: SYMBOLS are not supported in tiled mode")
                return LV_DESIGN_RES_OK;
            }

            lv_coord_t w = lv_obj_get_style_transform_width(imgbtn, LV_OBJ_PART_MAIN);
            lv_coord_t h = lv_obj_get_style_transform_height(imgbtn, LV_OBJ_PART_MAIN);
            lv_area_t coords;
            lv_area_copy(&coords, &imgbtn->coords);
            coords.x1 -= w;
            coords.x2 += w;
            coords.y1 -= h;
            coords.y2 += h;

            lv_draw_img_dsc_t img_dsc;
            lv_draw_img_dsc_init(&img_dsc);
            lv_obj_init_draw_img_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &img_dsc);

            lv_img_header_t header;
            lv_area_t coords_part;
            lv_coord_t left_w = 0;
            lv_coord_t right_w = 0;

            if(src) {
                lv_img_decoder_get_info(src, &header);
                left_w = header.w;
                coords_part.x1 = coords.x1;
                coords_part.y1 = coords.y1;
                coords_part.x2 = coords.x1 + header.w - 1;
                coords_part.y2 = coords.y1 + header.h - 1;
                lv_draw_img(&coords_part, clip_area, src, &img_dsc);
            }

            src = ext->img_src_right[state];
            if(src) {
                lv_img_decoder_get_info(src, &header);
                right_w = header.w;
                coords_part.x1 = coords.x2 - header.w + 1;
                coords_part.y1 = coords.y1;
                coords_part.x2 = coords.x2;
                coords_part.y2 = coords.y1 + header.h - 1;
                lv_draw_img(&coords_part, clip_area, src, &img_dsc);
            }

            src = ext->img_src_mid[state];
            if(src) {
                lv_area_t clip_center_area;
                clip_center_area.x1 = coords.x1 + left_w;
                clip_center_area.x2 = coords.x2 - right_w;
                clip_center_area.y1 = coords.y1;
                clip_center_area.y2 = coords.y2;

                bool comm_res;
                comm_res = lv_area_intersect(&clip_center_area, &clip_center_area, clip_area);
                if(comm_res) {
                    lv_coord_t obj_w = lv_obj_get_width(imgbtn);
                    lv_coord_t i;
                    lv_img_decoder_get_info(src, &header);

                    coords_part.x1 = coords.x1 + left_w;
                    coords_part.y1 = coords.y1;
                    coords_part.x2 = coords_part.x1 + header.w - 1;
                    coords_part.y2 = coords_part.y1 + header.h - 1;

                    for(i = 0; i < obj_w - right_w - left_w; i += header.w) {

                        lv_draw_img(&coords_part, &clip_center_area, src, &img_dsc);
                        coords_part.x1 = coords_part.x2 + 1;
                        coords_part.x2 += header.w;
                    }
                }
            }
#endif
        }
    }
    /*Post draw when the children are drawn*/
    else if(mode == LV_DESIGN_DRAW_POST) {
    }

    return LV_DESIGN_RES_OK;
}
