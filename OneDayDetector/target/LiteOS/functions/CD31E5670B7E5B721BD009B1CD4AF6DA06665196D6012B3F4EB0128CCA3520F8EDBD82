void HAL_USART_IRQHandler(USART_HandleTypeDef *husart)
{
  uint32_t tmp_flag = 0, tmp_it_source = 0;
  
  tmp_flag = __HAL_USART_GET_FLAG(husart, USART_FLAG_PE);
  tmp_it_source = __HAL_USART_GET_IT_SOURCE(husart, USART_IT_PE);
  /* USART parity error interrupt occurred -----------------------------------*/
  if((tmp_flag != RESET) && (tmp_it_source != RESET))
  {
    husart->ErrorCode |= HAL_USART_ERROR_PE;
  }

  tmp_flag = __HAL_USART_GET_FLAG(husart, USART_FLAG_FE);
  tmp_it_source = __HAL_USART_GET_IT_SOURCE(husart, USART_IT_ERR);
  /* USART frame error interrupt occurred ------------------------------------*/
  if((tmp_flag != RESET) && (tmp_it_source != RESET))
  {
    husart->ErrorCode |= HAL_USART_ERROR_FE;
  }

  tmp_flag = __HAL_USART_GET_FLAG(husart, USART_FLAG_NE);
  /* USART noise error interrupt occurred ------------------------------------*/
  if((tmp_flag != RESET) && (tmp_it_source != RESET))
  {
    husart->ErrorCode |= HAL_USART_ERROR_NE;
  }

  tmp_flag = __HAL_USART_GET_FLAG(husart, USART_FLAG_ORE);
  /* USART Over-Run interrupt occurred ---------------------------------------*/
  if((tmp_flag != RESET) && (tmp_it_source != RESET))
  {
    husart->ErrorCode |= HAL_USART_ERROR_ORE;
  }

  if(husart->ErrorCode != HAL_USART_ERROR_NONE)
  {
    /* Clear all the error flag at once */
    __HAL_USART_CLEAR_PEFLAG(husart);

    /* Set the USART state ready to be able to start again the process */
    husart->State = HAL_USART_STATE_READY;
    
    HAL_USART_ErrorCallback(husart);
  }

  tmp_flag = __HAL_USART_GET_FLAG(husart, USART_FLAG_RXNE);
  tmp_it_source = __HAL_USART_GET_IT_SOURCE(husart, USART_IT_RXNE);
  /* USART in mode Receiver --------------------------------------------------*/
  if((tmp_flag != RESET) && (tmp_it_source != RESET))
  {
    if(husart->State == HAL_USART_STATE_BUSY_RX)
    {
      USART_Receive_IT(husart);
    }
    else
    {
      USART_TransmitReceive_IT(husart);
    }
  }

  tmp_flag = __HAL_USART_GET_FLAG(husart, USART_FLAG_TXE);
  tmp_it_source = __HAL_USART_GET_IT_SOURCE(husart, USART_IT_TXE);
  /* USART in mode Transmitter -----------------------------------------------*/
  if((tmp_flag != RESET) && (tmp_it_source != RESET))
  {
    if(husart->State == HAL_USART_STATE_BUSY_TX)
    {
      USART_Transmit_IT(husart);
    }
    else
    {
      USART_TransmitReceive_IT(husart);
    }
  }
  
  tmp_flag = __HAL_USART_GET_FLAG(husart, USART_FLAG_TC);
  tmp_it_source = __HAL_USART_GET_IT_SOURCE(husart, USART_IT_TC);
  /* USART in mode Transmitter (transmission end) -----------------------------*/
  if((tmp_flag != RESET) && (tmp_it_source != RESET))
  {
    USART_EndTransmit_IT(husart);
  } 

}
