void lv_label_ins_text(lv_obj_t * label, uint32_t pos, const char * txt)
{
    LV_ASSERT_OBJ(label, LV_OBJX_NAME);
    LV_ASSERT_STR(txt);

    lv_label_ext_t * ext = lv_obj_get_ext_attr(label);

    /*Can not append to static text*/
    if(ext->static_txt != 0) return;

    lv_obj_invalidate(label);

    /*Allocate space for the new text*/
    size_t old_len = strlen(ext->text);
    size_t ins_len = strlen(txt);
    size_t new_len = ins_len + old_len;
    ext->text        = lv_mem_realloc(ext->text, new_len + 1);
    LV_ASSERT_MEM(ext->text);
    if(ext->text == NULL) return;

    if(pos == LV_LABEL_POS_LAST) {
        pos = _lv_txt_get_encoded_length(ext->text);
    }

#if LV_USE_BIDI
    char * bidi_buf = _lv_mem_buf_get(ins_len + 1);
    LV_ASSERT_MEM(bidi_buf);
    if(bidi_buf == NULL) return;

    _lv_bidi_process(txt, bidi_buf, lv_obj_get_base_dir(label));
    _lv_txt_ins(ext->text, pos, bidi_buf);

    _lv_mem_buf_release(bidi_buf);
#else
    _lv_txt_ins(ext->text, pos, txt);
#endif
    lv_label_refr_text(label);
}
