static void mbedtls_ssl_cf_memcpy_if_eq( unsigned char *dst,
                                         const unsigned char *src,
                                         size_t len,
                                         size_t c1, size_t c2 )
{
    /* diff = 0 if c1 == c2, non-zero otherwise */
    const size_t diff = c1 ^ c2;

    /* MSVC has a warning about unary minus on unsigned integer types,
     * but this is well-defined and precisely what we want to do here. */
#if defined(_MSC_VER)
#pragma warning( push )
#pragma warning( disable : 4146 )
#endif

    /* diff_msb's most significant bit is equal to c1 != c2 */
    const size_t diff_msb = ( diff | -diff );

    /* diff1 = c1 != c2 */
    const size_t diff1 = diff_msb >> ( sizeof( diff_msb ) * 8 - 1 );

    /* mask = c1 != c2 ? 0xff : 0x00 */
    const unsigned char mask = (unsigned char) -diff1;

#if defined(_MSC_VER)
#pragma warning( pop )
#endif

    /* dst[i] = c1 != c2 ? dst[i] : src[i] */
    size_t i;
    for( i = 0; i < len; i++ )
        dst[i] = ( dst[i] & mask ) | ( src[i] & ~mask );
}
