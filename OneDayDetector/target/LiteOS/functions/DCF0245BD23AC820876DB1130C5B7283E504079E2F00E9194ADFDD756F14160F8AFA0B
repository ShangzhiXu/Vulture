s32_t SPIFFS_fupdate_meta(spiffs *fs, spiffs_file fh, const void *meta)
{
#if SPIFFS_READ_ONLY
    (void)fs;
    (void)fh;
    (void)meta;
    return SPIFFS_ERR_RO_NOT_IMPL;
#else
    SPIFFS_API_CHECK_CFG(fs);
    SPIFFS_API_CHECK_MOUNT(fs);
    SPIFFS_LOCK(fs);

    s32_t res;
    spiffs_fd *fd;
    spiffs_page_ix pix_dummy;

    fh = SPIFFS_FH_UNOFFS(fs, fh);
    res = spiffs_fd_get(fs, fh, &fd);
    SPIFFS_API_CHECK_RES_UNLOCK(fs, res);

    if ((fd->flags & SPIFFS_O_WRONLY) == 0)
    {
        res = SPIFFS_ERR_NOT_WRITABLE;
        SPIFFS_API_CHECK_RES_UNLOCK(fs, res);
    }

    res = spiffs_object_update_index_hdr(fs, fd, fd->obj_id, fd->objix_hdr_pix, 0, 0, meta,
                                         0, &pix_dummy);

    SPIFFS_API_CHECK_RES_UNLOCK(fs, res);

    SPIFFS_UNLOCK(fs);

    return res;
#endif // SPIFFS_READ_ONLY
}
