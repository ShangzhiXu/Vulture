static void refr_indic_size(lv_obj_t * tabview)
{
    lv_tabview_ext_t * ext = lv_obj_get_ext_attr(tabview);
    lv_btnmatrix_ext_t * btnm_ext = lv_obj_get_ext_attr(ext->btns);

    lv_coord_t indic_size = lv_obj_get_style_size(tabview, LV_TABVIEW_PART_INDIC);

    /*Set the indicator width/height*/
    lv_coord_t indic_w;
    lv_coord_t indic_h;

    switch(ext->btns_pos) {
        default: /*default case is prevented in lv_tabview_set_btns_pos(), but here for safety*/
        case LV_TABVIEW_TAB_POS_NONE:
            lv_obj_set_hidden(ext->indic, true);
            indic_w = 0;
            indic_h = 0;
            break;
        case LV_TABVIEW_TAB_POS_TOP:
        case LV_TABVIEW_TAB_POS_BOTTOM:
            lv_obj_set_hidden(ext->indic, false);
            if(ext->tab_cnt) {
                indic_h = indic_size;
                indic_w = lv_area_get_width(&btnm_ext->button_areas[0]);
            }
            else {
                indic_w = 0;
                indic_h = 0;
            }
            break;
        case LV_TABVIEW_TAB_POS_LEFT:
        case LV_TABVIEW_TAB_POS_RIGHT:
            lv_obj_set_hidden(ext->indic, false);
            if(ext->tab_cnt) {
                indic_w = indic_size;
                indic_h = lv_area_get_height(&btnm_ext->button_areas[0]);
            }
            else {
                indic_w = 0;
                indic_h = 0;
            }
            break;
    }

    lv_obj_set_width(ext->indic, indic_w);
    lv_obj_set_height(ext->indic, indic_h);
}
