void lv_obj_set_state(lv_obj_t * obj, lv_state_t new_state)
{
    if(obj->state == new_state) return;

    LV_ASSERT_OBJ(obj, LV_OBJX_NAME);

#if LV_USE_ANIMATION == 0
    obj->state = new_state;
    lv_obj_refresh_style(obj, LV_STYLE_PROP_ALL);
#else
    lv_state_t prev_state = obj->state;
    obj->state = new_state;

    uint8_t part;
    for(part = 0; part < _LV_OBJ_PART_REAL_LAST; part++) {
        lv_style_list_t * style_list = lv_obj_get_style_list(obj, part);
        if(style_list == NULL) break;   /*No more style lists*/
        if(style_list->ignore_trans) continue;

        lv_style_int_t time = lv_obj_get_style_transition_time(obj, part);
        lv_style_property_t props[LV_STYLE_TRANS_NUM_MAX];
        lv_style_int_t delay = lv_obj_get_style_transition_delay(obj, part);
        lv_anim_path_t * path = lv_obj_get_style_transition_path(obj, part);
        props[0] = lv_obj_get_style_transition_prop_1(obj, part);
        props[1] = lv_obj_get_style_transition_prop_2(obj, part);
        props[2] = lv_obj_get_style_transition_prop_3(obj, part);
        props[3] = lv_obj_get_style_transition_prop_4(obj, part);
        props[4] = lv_obj_get_style_transition_prop_5(obj, part);
        props[5] = lv_obj_get_style_transition_prop_6(obj, part);

        uint8_t i;
        for(i = 0; i < LV_STYLE_TRANS_NUM_MAX; i++) {
            if(props[i] != 0) {
                _lv_style_list_add_trans_style(style_list);

                lv_style_trans_t * tr = trans_create(obj, props[i], part, prev_state, new_state);

                /*If there is a pending anim for this property remove it*/
                if(tr) {
                    tr->obj = obj;
                    tr->prop = props[i];
                    tr->part = part;

                    lv_anim_t a;
                    lv_anim_init(&a);
                    lv_anim_set_var(&a, tr);
                    lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)trans_anim_cb);
                    lv_anim_set_start_cb(&a, trans_anim_start_cb);
                    lv_anim_set_ready_cb(&a, trans_anim_ready_cb);
                    lv_anim_set_values(&a, 0x00, 0xFF);
                    lv_anim_set_time(&a, time);
                    lv_anim_set_delay(&a, delay);
                    lv_anim_set_path(&a, path);
                    a.early_apply = 0;
                    lv_anim_start(&a);
                }

            }
        }
    }
#endif

    lv_obj_refresh_style(obj, LV_STYLE_PROP_ALL);

}
