static lv_area_t get_knob_area(lv_obj_t * cpicker)
{
    lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);

    /*Get knob's radius*/
    uint16_t r = 0;
    if(ext->type == LV_CPICKER_TYPE_DISC) {
        r = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN) / 2;
    }
    else if(ext->type == LV_CPICKER_TYPE_RECT) {
        lv_coord_t h = lv_obj_get_height(cpicker);
        r = h / 2;
    }

    lv_style_int_t left = lv_obj_get_style_pad_left(cpicker, LV_CPICKER_PART_KNOB);
    lv_style_int_t right = lv_obj_get_style_pad_right(cpicker, LV_CPICKER_PART_KNOB);
    lv_style_int_t top = lv_obj_get_style_pad_top(cpicker, LV_CPICKER_PART_KNOB);
    lv_style_int_t bottom = lv_obj_get_style_pad_bottom(cpicker, LV_CPICKER_PART_KNOB);

    lv_area_t knob_area;
    knob_area.x1 = cpicker->coords.x1 + ext->knob.pos.x - r - left;
    knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
    knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
    knob_area.y2 = cpicker->coords.y1 + ext->knob.pos.y + r + bottom;

    return knob_area;
}
