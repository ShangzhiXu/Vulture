tcp_set_state(struct tcp_pcb* pcb, enum tcp_state state, const ip_addr_t* local_ip,
                   const ip_addr_t* remote_ip, u16_t local_port, u16_t remote_port)
{
  u32_t iss;

  /* @todo: are these all states? */
  /* @todo: remove from previous list */
  pcb->state = state;
  
  iss = tcp_next_iss(pcb);
  pcb->snd_wl2 = iss;
  pcb->snd_nxt = iss;
  pcb->lastack = iss;
  pcb->snd_lbb = iss;
  
  if (state == ESTABLISHED) {
    TCP_REG(&tcp_active_pcbs, pcb);
    ip_addr_copy(pcb->local_ip, *local_ip);
    pcb->local_port = local_port;
    ip_addr_copy(pcb->remote_ip, *remote_ip);
    pcb->remote_port = remote_port;
  } else if(state == LISTEN) {
    TCP_REG(&tcp_listen_pcbs.pcbs, pcb);
    ip_addr_copy(pcb->local_ip, *local_ip);
    pcb->local_port = local_port;
  } else if(state == TIME_WAIT) {
    TCP_REG(&tcp_tw_pcbs, pcb);
    ip_addr_copy(pcb->local_ip, *local_ip);
    pcb->local_port = local_port;
    ip_addr_copy(pcb->remote_ip, *remote_ip);
    pcb->remote_port = remote_port;
  } else {
    fail();
  }
}
