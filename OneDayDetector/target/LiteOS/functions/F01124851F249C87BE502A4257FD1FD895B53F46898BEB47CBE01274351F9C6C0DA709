static void DCMI_DMAXferCplt(DMA_HandleTypeDef *hdma)
{
  uint32_t loop_length       = 0;     /* transfer length  */
  uint32_t * tmpBuffer_Dest  = NULL;
  uint32_t * tmpBuffer_Orig  = NULL;  
 
  DCMI_HandleTypeDef* hdcmi = ( DCMI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;


  if(hdcmi->XferCount != 0)
  {
    /* Manage second half buffer copy in case of big transfer */  
    
    /* Decrement half-copies counter */
    hdcmi->XferCount--;       
    
    /* Point at DCMI final destination */
    tmpBuffer_Dest = (uint32_t *)hdcmi->pBuffPtr;  
    
    /* Point at DCMI circular buffer mid-location */
    tmpBuffer_Orig = (uint32_t *)hdcmi->pCircularBuffer;           
    tmpBuffer_Orig +=  hdcmi->HalfCopyLength; 
    
    /* copy half the buffer size */
    loop_length = hdcmi->HalfCopyLength;
    
    /* Save next entry to write at next half DMA transfer interruption */
    hdcmi->pBuffPtr += (uint32_t) loop_length*4;
    hdcmi->XferSize -= hdcmi->HalfCopyLength;    
    
    /* Data copy from work buffer to final destination buffer */
    /* Enable the DMA Channel */
    if (HAL_DMA_Start_IT(hdcmi->DMAM2M_Handle, (uint32_t) tmpBuffer_Orig, (uint32_t) tmpBuffer_Dest, loop_length) != HAL_OK)
    {
      /* Update error code */
      hdcmi->ErrorCode |= HAL_DCMI_ERROR_DMA;
            
      /* Change DCMI state */
      hdcmi->State = HAL_DCMI_STATE_READY;    
    
      /* Process Unlocked */
      __HAL_UNLOCK(hdcmi);

      /* Error Callback */
      HAL_DCMI_ErrorCallback(hdcmi);    
    }        
  }
  else
  {
    /* if End of frame IT is disabled */
    if((hdcmi->Instance->IER & DCMI_IT_FRAME) == RESET)
    {
      /* If End of Frame flag is set */
      if(__HAL_DCMI_GET_FLAG(hdcmi, DCMI_FLAG_FRAMERI) != RESET)
      {
        /* Clear the End of Frame flag */
        __HAL_DCMI_CLEAR_FLAG(hdcmi, DCMI_FLAG_FRAMERI);
              
        /* When snapshot mode, disable Vsync, Error and Overrun interrupts */
        if((hdcmi->Instance->CR & DCMI_CR_CM) == DCMI_MODE_SNAPSHOT)
        { 
          /* Disable the Vsync, Error and Overrun interrupts */
          __HAL_DCMI_DISABLE_IT(hdcmi, DCMI_IT_LINE | DCMI_IT_VSYNC | DCMI_IT_ERR | DCMI_IT_OVR);
          
          hdcmi->State = HAL_DCMI_STATE_READY;
          
          /* Process Unlocked */
          __HAL_UNLOCK(hdcmi);          
        }
    
        /* FRAME Callback */
        HAL_DCMI_FrameEventCallback(hdcmi);
      }    
    }
  }
}
