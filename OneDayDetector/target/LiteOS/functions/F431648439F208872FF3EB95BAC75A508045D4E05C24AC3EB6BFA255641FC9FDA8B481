HAL_StatusTypeDef HAL_DFSDM_Filter_UnRegisterCallback(DFSDM_Filter_HandleTypeDef        *hdfsdm_filter,
                                                      HAL_DFSDM_Filter_CallbackIDTypeDef CallbackID)
{
  HAL_StatusTypeDef status = HAL_OK;

  if(HAL_DFSDM_FILTER_STATE_READY == hdfsdm_filter->State)
  {
    switch (CallbackID)
    {
    case HAL_DFSDM_FILTER_REGCONV_COMPLETE_CB_ID :
      hdfsdm_filter->RegConvCpltCallback = HAL_DFSDM_FilterRegConvCpltCallback;
      break;
    case HAL_DFSDM_FILTER_REGCONV_HALFCOMPLETE_CB_ID :
      hdfsdm_filter->RegConvHalfCpltCallback = HAL_DFSDM_FilterRegConvHalfCpltCallback;
      break;
    case HAL_DFSDM_FILTER_INJCONV_COMPLETE_CB_ID :
      hdfsdm_filter->InjConvCpltCallback = HAL_DFSDM_FilterInjConvCpltCallback;
      break;
    case HAL_DFSDM_FILTER_INJCONV_HALFCOMPLETE_CB_ID :
      hdfsdm_filter->InjConvHalfCpltCallback = HAL_DFSDM_FilterInjConvHalfCpltCallback;
      break;
    case HAL_DFSDM_FILTER_ERROR_CB_ID :
      hdfsdm_filter->ErrorCallback = HAL_DFSDM_FilterErrorCallback;
      break;
    case HAL_DFSDM_FILTER_MSPINIT_CB_ID :
      hdfsdm_filter->MspInitCallback = HAL_DFSDM_FilterMspInit;
      break;
    case HAL_DFSDM_FILTER_MSPDEINIT_CB_ID :
      hdfsdm_filter->MspDeInitCallback = HAL_DFSDM_FilterMspDeInit;
      break;
    default :
      /* update the error code */
      hdfsdm_filter->ErrorCode = DFSDM_FILTER_ERROR_INVALID_CALLBACK;
      /* update return status */
      status = HAL_ERROR;
      break;
    }
  }
  else if(HAL_DFSDM_FILTER_STATE_RESET == hdfsdm_filter->State)
  {
    switch (CallbackID)
    {
    case HAL_DFSDM_FILTER_MSPINIT_CB_ID :
      hdfsdm_filter->MspInitCallback = HAL_DFSDM_FilterMspInit;
      break;
    case HAL_DFSDM_FILTER_MSPDEINIT_CB_ID :
      hdfsdm_filter->MspDeInitCallback = HAL_DFSDM_FilterMspDeInit;
      break;
    default :
      /* update the error code */
      hdfsdm_filter->ErrorCode = DFSDM_FILTER_ERROR_INVALID_CALLBACK;
      /* update return status */
      status = HAL_ERROR;
      break;
    }
  }
  else
  {
    /* update the error code */
    hdfsdm_filter->ErrorCode = DFSDM_FILTER_ERROR_INVALID_CALLBACK;
    /* update return status */
    status = HAL_ERROR;
  }
  return status;
}
