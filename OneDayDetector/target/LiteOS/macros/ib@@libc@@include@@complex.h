#define CMPLX(x, y) __CMPLX(x, y, double)
#define CMPLXF(x, y) __CMPLX(x, y, float)
#define CMPLXL(x, y) __CMPLX(x, y, long double)
#define __CIMAG(x, t) \
	(+(union { _Complex t __z; t __xy[2]; }){(_Complex t)(x)}.__xy[1])
#define __CMPLX(x, y, t) ((t)(x) + _Imaginary_I*(t)(y))
#define __CMPLX(x, y, t) (+(_Complex t){ (t)(x), (t)(y) })
#define __CMPLX(x, y, t) (__builtin_complex((t)(x), (t)(y)))
#define cimag(x) __CIMAG(x, double)
#define cimagf(x) __CIMAG(x, float)
#define cimagl(x) __CIMAG(x, long double)
#define creal(x) ((double)(x))
#define crealf(x) ((float)(x))
#define creall(x) ((long double)(x))
