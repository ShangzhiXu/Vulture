  #define __ALIGNED(x)                           __attribute__((aligned(x)))
#define __BKPT(value)     __ASM volatile ("bkpt "#value)
#define __CMSIS_GCC_OUT_REG(r) "=l" (r)
#define __CMSIS_GCC_OUT_REG(r) "=r" (r)
#define __CMSIS_GCC_RW_REG(r) "+l" (r)
#define __CMSIS_GCC_RW_REG(r) "+r" (r)
#define __CMSIS_GCC_USE_REG(r) "l" (r)
#define __CMSIS_GCC_USE_REG(r) "r" (r)
  #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
#define __DMB()        __builtin_arm_dmb(0xF)
#define __DSB()        __builtin_arm_dsb(0xF)
#define __ISB()        __builtin_arm_isb(0xF)
#define __PKHBT(ARG1,ARG2,ARG3)          ( ((((uint32_t)(ARG1))          ) & 0x0000FFFFUL) |  \
                                           ((((uint32_t)(ARG2)) << (ARG3)) & 0xFFFF0000UL)  )
#define __PKHTB(ARG1,ARG2,ARG3)          ( ((((uint32_t)(ARG1))          ) & 0xFFFF0000UL) |  \
                                           ((((uint32_t)(ARG2)) >> (ARG3)) & 0x0000FFFFUL)  )
#define __REV(value)   __builtin_bswap32(value)
#define __REV16(value) __ROR(__REV(value), 16)
#define __REVSH(value) (int16_t)__builtin_bswap16(value)
#define __SXTB16_RORn(ARG1, ARG2)        __SXTB16(__ROR(ARG1, ARG2))
  #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(addr))->v)
  #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))->v) = (val))
  #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(addr))->v)
  #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))->v) = (val))
#define __get_FPSCR()      ((uint32_t)0U)
#define __set_FPSCR(x)      ((void)(x))
