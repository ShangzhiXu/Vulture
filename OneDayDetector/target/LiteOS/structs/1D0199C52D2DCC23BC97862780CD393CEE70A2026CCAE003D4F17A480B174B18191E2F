typedef struct at_task {
    uint32_t  tsk_hdl;
    uint32_t recv_sem;
    uint32_t rid;
    bool     rid_flag;
    uint32_t resp_sem;
    uint32_t cmd_mux;
    uint32_t trx_mux;
    bool     trx_mux_flag;
    uint8_t  *recv_buf;
    uint8_t  *cmdresp; /* AT cmd response,default 512 bytes */
    uint8_t  *userdata; /* data form servers,default 512 bytes */
    uint8_t  *saveddata;
    uint32_t  mux_mode;
    at_link  *linkid;
    at_listener *head;
    uint32_t timeout; /* command respond timeout */

    void (*step_callback)(void);

    int32_t (*init)(at_config *config);
    int32_t (*cmd)(int8_t *cmd, int32_t len, const char *suffix, char *resp_buf, int *resp_len);
    int32_t (*write)(int8_t *cmd, int8_t *suffix, int8_t *buf, int32_t len);
    /* get unused linkid, use in multi connection mode */
    int32_t (*get_id)(void);
    /* register uset msg process to the listener list */
    int32_t (*oob_register)(char *featurestr, int cmdlen, oob_callback callback, oob_cmd_match cmd_match);
    void (*deinit)(void);
    int32_t (*cmd_multi_suffix)(const int8_t *cmd, int len, at_cmd_info_s *cmd_info);
} at_task;
