{
    "current_hash": "94df772485c92866ca417d92137747b2e3b0a917",
    "parent_hash": "3a7bd6924a67c301b8811f521de6ed07c7cf0c3c",
    "modified_file_0": {
        "mod_filename": "cJSON.c",
        "status": "modified",
        "add_lines": 14,
        "dele_lines": 3,
        "patch": "@@ -194,9 +194,20 @@ static const char *parse_string(cJSON *item,const char *str,const char **ep)\n {\n \tconst char *ptr=str+1,*end_ptr=str+1;char *ptr2;char *out;int len=0;unsigned uc,uc2;\n \tif (*str!='\\\"') {*ep=str;return 0;}\t/* not a string! */\n-\t\n-\twhile (*end_ptr!='\\\"' && *end_ptr && ++len) if (*end_ptr++ == '\\\\') end_ptr++;\t/* Skip escaped quotes. */\n-\t\n+\n+\twhile (*end_ptr!='\\\"' && *end_ptr && ++len)\n+\t{\n+\t    if (*end_ptr++ == '\\\\')\n+\t    {\n+\t\tif (*end_ptr == '\\0')\n+\t\t{\n+\t\t    /* prevent buffer overflow when last input character is a backslash */\n+\t\t    return 0;\n+\t\t}\n+\t\tend_ptr++;\t/* Skip escaped quotes. */\n+\t    }\n+\t}\n+\n \tout=(char*)cJSON_malloc(len+1);\t/* This is how long we need for the string, roughly. */\n \tif (!out) return 0;\n \titem->valuestring=out; /* assign here so out will be deleted during cJSON_Delete() later */"
    }
}