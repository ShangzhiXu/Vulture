{
    "current_hash": "01c658f8c45cb92a343be5f32aa6da70b2032168",
    "parent_hash": "dbc7d06b5bbf01652744423bd8825ea7b5e92f73",
    "modified_file_0": {
        "mod_filename": "doas.c",
        "status": "modified",
        "add_lines": 3,
        "dele_lines": 1,
        "patch": "@@ -449,6 +449,7 @@ main(int argc, char **argv)\n \n #ifdef HAVE_SETUSERCONTEXT\n \tif (setusercontext(NULL, targpw, target, LOGIN_SETGROUP |\n+\t    LOGIN_SETPATH |\n \t    LOGIN_SETPRIORITY | LOGIN_SETRESOURCES | LOGIN_SETUMASK |\n \t    LOGIN_SETUSER) != 0)\n \t\terrx(1, \"failed to set user context for target\");\n@@ -479,9 +480,10 @@ main(int argc, char **argv)\n \tsyslog(LOG_AUTHPRIV | LOG_INFO, \"%s ran command %s as %s from %s\",\n \t    mypw->pw_name, cmdline, targpw->pw_name, cwd);\n \n-\tenvp = prepenv(rule);\n+\tenvp = prepenv(rule, mypw, targpw);\n \n \tif (rule->cmd) {\n+\t\t/* do this again after setusercontext reset it */\n \t\tif (setenv(\"PATH\", safepath, 1) == -1)\n \t\t\terr(1, \"failed to set PATH '%s'\", safepath);\n \t}"
    },
    "modified_file_1": {
        "mod_filename": "doas.conf.5",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 8,
        "patch": "@@ -51,15 +51,9 @@ again for some time.\n .It Ic keepenv\n The user's environment is maintained.\n The default is to reset the environment, except for the variables\n-.Ev DISPLAY ,\n-.Ev HOME ,\n-.Ev LOGNAME ,\n-.Ev MAIL ,\n-.Ev PATH ,\n-.Ev TERM ,\n-.Ev USER\n+.Ev DISPLAY\n and\n-.Ev USERNAME .\n+.Ev TERM .\n .It Ic setenv { Oo Ar variable ... Oc Oo Ar variable=value ... Oc Ic }\n In addition to the variables mentioned above, keep the space-separated\n specified variables."
    },
    "modified_file_2": {
        "mod_filename": "doas.h",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 1,
        "patch": "@@ -29,7 +29,10 @@ extern struct rule **rules;\n extern int nrules;\n extern int parse_errors;\n \n-char **prepenv(const struct rule *);\n+struct passwd;\n+\n+char **prepenv(const struct rule *, const struct passwd *,\n+    const struct passwd *);\n \n #define PERMIT\t1\n #define DENY\t2"
    },
    "modified_file_3": {
        "mod_filename": "env.c",
        "status": "modified",
        "add_lines": 33,
        "dele_lines": 12,
        "patch": "@@ -24,6 +24,7 @@\n #include <err.h>\n #include <unistd.h>\n #include <errno.h>\n+#include <pwd.h>\n \n #include \"doas.h\"\n #include \"includes.h\"\n@@ -39,6 +40,8 @@ struct env {\n \tu_int count;\n };\n \n+static void fillenv(struct env *env, const char **envlist);\n+\n static int\n envcmp(struct envnode *a, struct envnode *b)\n {\n@@ -69,8 +72,19 @@ freenode(struct envnode *node)\n \tfree(node);\n }\n \n+static void\n+addnode(struct env *env, const char *key, const char *value)\n+{\n+\tstruct envnode *node;\n+\n+\tnode = createnode(key, value);\n+\tRB_INSERT(envtree, &env->root, node);\n+\tenv->count++;\n+}\n+\n static struct env *\n-createenv(const struct rule *rule)\n+createenv(const struct rule *rule, const struct passwd *mypw,\n+    const struct passwd *targpw)\n {\n \tstruct env *env;\n \tu_int i;\n@@ -81,6 +95,8 @@ createenv(const struct rule *rule)\n \tRB_INIT(&env->root);\n \tenv->count = 0;\n \n+\taddnode(env, \"DOAS_USER\", mypw->pw_name);\n+\n \tif (rule->options & KEEPENV) {\n \t\textern char **environ;\n \n@@ -109,6 +125,19 @@ createenv(const struct rule *rule)\n \t\t\t\tenv->count++;\n \t\t\t}\n \t\t}\n+\t} else {\n+\t\tstatic const char *copyset[] = {\n+\t\t\t\"DISPLAY\", \"TERM\",\n+\t\t\tNULL\n+\t\t};\n+\n+\t\taddnode(env, \"HOME\", targpw->pw_dir);\n+\t\taddnode(env, \"LOGNAME\", targpw->pw_name);\n+\t\taddnode(env, \"PATH\", getenv(\"PATH\"));\n+\t\taddnode(env, \"SHELL\", targpw->pw_shell);\n+\t\taddnode(env, \"USER\", targpw->pw_name);\n+\n+\t\tfillenv(env, copyset);\n \t}\n \n \treturn env;\n@@ -187,20 +216,12 @@ fillenv(struct env *env, const char **envlist)\n }\n \n char **\n-prepenv(const struct rule *rule)\n+prepenv(const struct rule *rule, const struct passwd *mypw,\n+    const struct passwd *targpw)\n {\n-\tstatic const char *safeset[] = {\n-\t\t\"DISPLAY\", \"HOME\", \"LOGNAME\", \"MAIL\",\n-\t\t\"PATH\", \"TERM\", \"USER\", \"USERNAME\",\n-\t\tNULL\n-\t};\n \tstruct env *env;\n \n-\tenv = createenv(rule);\n-\n-\t/* if we started with blank, fill some defaults then apply rules */\n-\tif (!(rule->options & KEEPENV))\n-\t\tfillenv(env, safeset);\n+\tenv = createenv(rule, mypw, targpw);\n \tif (rule->envlist)\n \t\tfillenv(env, rule->envlist);\n "
    }
}