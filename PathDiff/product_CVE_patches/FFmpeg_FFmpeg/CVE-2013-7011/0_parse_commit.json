{
    "current_hash": "547d690d676064069d44703a1917e0dab7e33445",
    "parent_hash": "20b965a1a43ae88b7ae95635d5a3570e7dc2bbd4",
    "modified_file_0": {
        "mod_filename": "libavcodec/ffv1dec.c",
        "status": "modified",
        "add_lines": 21,
        "dele_lines": 4,
        "patch": "@@ -580,6 +580,7 @@ static int read_header(FFV1Context *f)\n     memset(state, 128, sizeof(state));\n \n     if (f->version < 2) {\n+        int chroma_planes, chroma_h_shift, chroma_v_shift, transparency;\n         unsigned v= get_symbol(c, state, 0);\n         if (v >= 2) {\n             av_log(f->avctx, AV_LOG_ERROR, \"invalid version %d in ver01 header\\n\", v);\n@@ -597,10 +598,26 @@ static int read_header(FFV1Context *f)\n         if (f->version > 0)\n             f->avctx->bits_per_raw_sample = get_symbol(c, state, 0);\n \n-        f->chroma_planes  = get_rac(c, state);\n-        f->chroma_h_shift = get_symbol(c, state, 0);\n-        f->chroma_v_shift = get_symbol(c, state, 0);\n-        f->transparency   = get_rac(c, state);\n+        chroma_planes  = get_rac(c, state);\n+        chroma_h_shift = get_symbol(c, state, 0);\n+        chroma_v_shift = get_symbol(c, state, 0);\n+        transparency   = get_rac(c, state);\n+\n+        if (f->plane_count) {\n+            if (   chroma_planes != f->chroma_planes\n+                || chroma_h_shift!= f->chroma_h_shift\n+                || chroma_v_shift!= f->chroma_v_shift\n+                || transparency  != f->transparency) {\n+                av_log(f->avctx, AV_LOG_ERROR, \"Invalid change of global parameters\\n\");\n+                return AVERROR_INVALIDDATA;\n+            }\n+        }\n+\n+        f->chroma_planes  = chroma_planes;\n+        f->chroma_h_shift = chroma_h_shift;\n+        f->chroma_v_shift = chroma_v_shift;\n+        f->transparency   = transparency;\n+\n         f->plane_count    = 2 + f->transparency;\n     }\n "
    }
}