{
    "current_hash": "912ce9dd2080c5837285a471d750fa311e09b555",
    "parent_hash": "800ea20cadce7c5ec06e7821dc83dedb6e20209e",
    "modified_file_0": {
        "mod_filename": "libavcodec/jpeg2000.c",
        "status": "modified",
        "add_lines": 8,
        "dele_lines": 6,
        "patch": "@@ -272,7 +272,7 @@ int ff_jpeg2000_init_component(Jpeg2000Component *comp,\n                                         reslevel->log2_prec_height) -\n                 (reslevel->coord[1][0] >> reslevel->log2_prec_height);\n \n-        reslevel->band = av_malloc_array(reslevel->nbands, sizeof(*reslevel->band));\n+        reslevel->band = av_calloc(reslevel->nbands, sizeof(*reslevel->band));\n         if (!reslevel->band)\n             return AVERROR(ENOMEM);\n \n@@ -368,7 +368,7 @@ int ff_jpeg2000_init_component(Jpeg2000Component *comp,\n             for (j = 0; j < 2; j++)\n                 band->coord[1][j] = ff_jpeg2000_ceildiv(band->coord[1][j], dy);\n \n-            band->prec = av_malloc_array(reslevel->num_precincts_x *\n+            band->prec = av_calloc(reslevel->num_precincts_x *\n                                          (uint64_t)reslevel->num_precincts_y,\n                                          sizeof(*band->prec));\n             if (!band->prec)\n@@ -509,10 +509,12 @@ void ff_jpeg2000_cleanup(Jpeg2000Component *comp, Jpeg2000CodingStyle *codsty)\n         for (bandno = 0; bandno < reslevel->nbands; bandno++) {\n             Jpeg2000Band *band = reslevel->band + bandno;\n             for (precno = 0; precno < reslevel->num_precincts_x * reslevel->num_precincts_y; precno++) {\n-                Jpeg2000Prec *prec = band->prec + precno;\n-                av_freep(&prec->zerobits);\n-                av_freep(&prec->cblkincl);\n-                av_freep(&prec->cblk);\n+                if (band->prec) {\n+                    Jpeg2000Prec *prec = band->prec + precno;\n+                    av_freep(&prec->zerobits);\n+                    av_freep(&prec->cblkincl);\n+                    av_freep(&prec->cblk);\n+                }\n             }\n \n             av_freep(&band->prec);"
    }
}