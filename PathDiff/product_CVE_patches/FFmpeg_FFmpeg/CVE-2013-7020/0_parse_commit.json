{
    "current_hash": "b05cd1ea7e45a836f7f6071a716c38bb30326e0f",
    "parent_hash": "05507348afa1c3ec53ecc1ba9061213a5154badd",
    "modified_file_0": {
        "mod_filename": "libavcodec/ffv1dec.c",
        "status": "modified",
        "add_lines": 8,
        "dele_lines": 7,
        "patch": "@@ -580,7 +580,7 @@ static int read_header(FFV1Context *f)\n     memset(state, 128, sizeof(state));\n \n     if (f->version < 2) {\n-        int chroma_planes, chroma_h_shift, chroma_v_shift, transparency;\n+        int chroma_planes, chroma_h_shift, chroma_v_shift, transparency, colorspace, bits_per_raw_sample;\n         unsigned v= get_symbol(c, state, 0);\n         if (v >= 2) {\n             av_log(f->avctx, AV_LOG_ERROR, \"invalid version %d in ver01 header\\n\", v);\n@@ -593,18 +593,17 @@ static int read_header(FFV1Context *f)\n                 f->state_transition[i] = get_symbol(c, state, 1) + c->one_state[i];\n         }\n \n-        f->colorspace = get_symbol(c, state, 0); //YUV cs type\n-\n-        if (f->version > 0)\n-            f->avctx->bits_per_raw_sample = get_symbol(c, state, 0);\n-\n+        colorspace     = get_symbol(c, state, 0); //YUV cs type\n+        bits_per_raw_sample = f->version > 0 ? get_symbol(c, state, 0) : f->avctx->bits_per_raw_sample;\n         chroma_planes  = get_rac(c, state);\n         chroma_h_shift = get_symbol(c, state, 0);\n         chroma_v_shift = get_symbol(c, state, 0);\n         transparency   = get_rac(c, state);\n \n         if (f->plane_count) {\n-            if (   chroma_planes != f->chroma_planes\n+            if (   colorspace    != f->colorspace\n+                || bits_per_raw_sample != f->avctx->bits_per_raw_sample\n+                || chroma_planes != f->chroma_planes\n                 || chroma_h_shift!= f->chroma_h_shift\n                 || chroma_v_shift!= f->chroma_v_shift\n                 || transparency  != f->transparency) {\n@@ -613,6 +612,8 @@ static int read_header(FFV1Context *f)\n             }\n         }\n \n+        f->colorspace     = colorspace;\n+        f->avctx->bits_per_raw_sample = bits_per_raw_sample;\n         f->chroma_planes  = chroma_planes;\n         f->chroma_h_shift = chroma_h_shift;\n         f->chroma_v_shift = chroma_v_shift;"
    }
}