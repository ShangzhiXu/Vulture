{
    "current_hash": "ba4beaf6149f7241c8bd85fe853318c2f6837ad0",
    "parent_hash": "615479d51c6a76275c114888b5600b929309f4c4",
    "modified_file_0": {
        "mod_filename": "libavcodec/apedec.c",
        "status": "modified",
        "add_lines": 5,
        "dele_lines": 3,
        "patch": "@@ -1412,6 +1412,7 @@ static int ape_decode_frame(AVCodecContext *avctx, void *data,\n     int32_t *sample24;\n     int i, ch, ret;\n     int blockstodecode;\n+    uint64_t decoded_buffer_size;\n \n     /* this should never be negative, but bad things will happen if it is, so\n        check it just to make sure. */\n@@ -1467,7 +1468,7 @@ static int ape_decode_frame(AVCodecContext *avctx, void *data,\n                 skip_bits_long(&s->gb, offset);\n         }\n \n-        if (!nblocks || nblocks > INT_MAX) {\n+        if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8) {\n             av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",\n                    nblocks);\n             return AVERROR_INVALIDDATA;\n@@ -1493,8 +1494,9 @@ static int ape_decode_frame(AVCodecContext *avctx, void *data,\n         blockstodecode = s->samples;\n \n     /* reallocate decoded sample buffer if needed */\n-    av_fast_malloc(&s->decoded_buffer, &s->decoded_size,\n-                   2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));\n+    decoded_buffer_size = 2LL * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer);\n+    av_assert0(decoded_buffer_size <= INT_MAX);\n+    av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size);\n     if (!s->decoded_buffer)\n         return AVERROR(ENOMEM);\n     memset(s->decoded_buffer, 0, s->decoded_size);"
    }
}