{
    "current_hash": "189ff4219644532bdfa7bab28dfedaee4d6d4021",
    "parent_hash": "c0702ab8301844c1eb11dedb78a0bce79693dec7",
    "modified_file_0": {
        "mod_filename": "libavformat/hls.c",
        "status": "modified",
        "add_lines": 17,
        "dele_lines": 1,
        "patch": "@@ -204,6 +204,7 @@ typedef struct HLSContext {\n     char *http_proxy;                    ///< holds the address of the HTTP proxy server\n     AVDictionary *avio_opts;\n     int strict_std_compliance;\n+    char *allowed_extensions;\n } HLSContext;\n \n static int read_chomp_line(AVIOContext *s, char *buf, int maxlen)\n@@ -618,8 +619,19 @@ static int open_url(AVFormatContext *s, AVIOContext **pb, const char *url,\n         return AVERROR_INVALIDDATA;\n \n     // only http(s) & file are allowed\n-    if (!av_strstart(proto_name, \"http\", NULL) && !av_strstart(proto_name, \"file\", NULL))\n+    if (av_strstart(proto_name, \"file\", NULL)) {\n+        if (strcmp(c->allowed_extensions, \"ALL\") && !av_match_ext(url, c->allowed_extensions)) {\n+            av_log(s, AV_LOG_ERROR,\n+                \"Filename extension of \\'%s\\' is not a common multimedia extension, blocked for security reasons.\\n\"\n+                \"If you wish to override this adjust allowed_extensions, you can set it to \\'ALL\\' to allow all\\n\",\n+                url);\n+            return AVERROR_INVALIDDATA;\n+        }\n+    } else if (av_strstart(proto_name, \"http\", NULL)) {\n+        ;\n+    } else\n         return AVERROR_INVALIDDATA;\n+\n     if (!strncmp(proto_name, url, strlen(proto_name)) && url[strlen(proto_name)] == ':')\n         ;\n     else if (av_strstart(url, \"crypto\", NULL) && !strncmp(proto_name, url + 7, strlen(proto_name)) && url[7 + strlen(proto_name)] == ':')\n@@ -2134,6 +2146,10 @@ static int hls_probe(AVProbeData *p)\n static const AVOption hls_options[] = {\n     {\"live_start_index\", \"segment index to start live streams at (negative values are from the end)\",\n         OFFSET(live_start_index), AV_OPT_TYPE_INT, {.i64 = -3}, INT_MIN, INT_MAX, FLAGS},\n+    {\"allowed_extensions\", \"List of file extensions that hls is allowed to access\",\n+        OFFSET(allowed_extensions), AV_OPT_TYPE_STRING,\n+        {.str = \"3gp,aac,avi,flac,mkv,m3u8,m4a,m4s,m4v,mpg,mov,mp2,mp3,mp4,mpeg,mpegts,ogg,ogv,oga,ts,vob,wav\"},\n+        INT_MIN, INT_MAX, FLAGS},\n     {NULL}\n };\n "
    }
}