{
    "current_hash": "4565747056a11356210ed8edcecb920105e40b60",
    "parent_hash": "5c635b7d8c7c4a7fe0c93b5b3cefff3c72bff237",
    "modified_file_0": {
        "mod_filename": "libavcodec/evc_ps.c",
        "status": "modified",
        "add_lines": 17,
        "dele_lines": 5,
        "patch": "@@ -24,10 +24,14 @@\n #define EXTENDED_SAR 255\n \n // @see ISO_IEC_23094-1 (7.3.7 Reference picture list structure syntax)\n-static int ref_pic_list_struct(GetBitContext *gb, RefPicListStruct *rpl)\n+static int ref_pic_list_struct(EVCParserSPS *sps, GetBitContext *gb, RefPicListStruct *rpl)\n {\n     uint32_t delta_poc_st, strp_entry_sign_flag = 0;\n     rpl->ref_pic_num = get_ue_golomb_long(gb);\n+\n+    if ((unsigned)rpl->ref_pic_num  > sps->sps_max_dec_pic_buffering_minus1)\n+        return AVERROR_INVALIDDATA;\n+\n     if (rpl->ref_pic_num > 0) {\n         delta_poc_st = get_ue_golomb_long(gb);\n \n@@ -239,6 +243,8 @@ int ff_evc_parse_sps(GetBitContext *gb, EVCParamSets *ps)\n         sps->max_num_tid0_ref_pics = get_ue_golomb_31(gb);\n     else {\n         sps->sps_max_dec_pic_buffering_minus1 = get_ue_golomb_long(gb);\n+        if ((unsigned)sps->sps_max_dec_pic_buffering_minus1 > 16 - 1)\n+            return AVERROR_INVALIDDATA;\n         sps->long_term_ref_pic_flag = get_bits1(gb);\n         sps->rpl1_same_as_rpl0_flag = get_bits1(gb);\n         sps->num_ref_pic_list_in_sps[0] = get_ue_golomb(gb);\n@@ -248,17 +254,23 @@ int ff_evc_parse_sps(GetBitContext *gb, EVCParamSets *ps)\n             goto fail;\n         }\n \n-        for (int i = 0; i < sps->num_ref_pic_list_in_sps[0]; ++i)\n-            ref_pic_list_struct(gb, &sps->rpls[0][i]);\n+        for (int i = 0; i < sps->num_ref_pic_list_in_sps[0]; ++i) {\n+            ret = ref_pic_list_struct(sps, gb, &sps->rpls[0][i]);\n+            if (ret < 0)\n+                goto fail;\n+        }\n \n         if (!sps->rpl1_same_as_rpl0_flag) {\n             sps->num_ref_pic_list_in_sps[1] = get_ue_golomb(gb);\n             if ((unsigned)sps->num_ref_pic_list_in_sps[1] >= EVC_MAX_NUM_RPLS) {\n                 ret = AVERROR_INVALIDDATA;\n                 goto fail;\n             }\n-            for (int i = 0; i < sps->num_ref_pic_list_in_sps[1]; ++i)\n-                ref_pic_list_struct(gb, &sps->rpls[1][i]);\n+            for (int i = 0; i < sps->num_ref_pic_list_in_sps[1]; ++i) {\n+                ret = ref_pic_list_struct(sps, gb, &sps->rpls[1][i]);\n+                if (ret < 0)\n+                    goto fail;\n+            }\n         }\n     }\n "
    }
}