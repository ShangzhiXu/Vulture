{
    "current_hash": "0cf1400c61850065de590d403f6d49e32882fd76",
    "parent_hash": "3b3a5c478344d4f6faba47c9229f76423c87101d",
    "modified_file_0": {
        "mod_filename": "libvncserver/ws_decode.c",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 3,
        "patch": "@@ -327,7 +327,6 @@ hybiReadAndDecode(ws_ctx_t *wsctx, char *dst, int len, int *sockRet, int nInBuf)\n   int bufsize;\n   int nextRead;\n   unsigned char *data;\n-  uint32_t *data32;\n \n   /* if data was carried over, copy to start of buffer */\n   memcpy(wsctx->writePos, wsctx->carryBuf, wsctx->carrylen);\n@@ -383,10 +382,12 @@ hybiReadAndDecode(ws_ctx_t *wsctx, char *dst, int len, int *sockRet, int nInBuf)\n   /* for a possible base64 decoding, we decode multiples of 4 bytes until\n    * the whole frame is received and carry over any remaining bytes in the carry buf*/\n   data = (unsigned char *)(wsctx->writePos - toDecode);\n-  data32= (uint32_t *)data;\n \n   for (i = 0; i < (toDecode >> 2); i++) {\n-    data32[i] ^= wsctx->header.mask.u;\n+    uint32_t tmp;\n+    memcpy(&tmp, data + i * sizeof(tmp), sizeof(tmp));\n+    tmp ^= wsctx->header.mask.u;\n+    memcpy(data + i * sizeof(tmp), &tmp, sizeof(tmp));\n   }\n   ws_dbg(\"mask decoding; i=%d toDecode=%d\\n\", i, toDecode);\n "
    }
}