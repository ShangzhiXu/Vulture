{
    "current_hash": "57433015f856cc12753378254ce4f1c78f5d9c7b",
    "parent_hash": "323aa5eea294aeaadf214b5166e9af341fc9112c",
    "modified_file_0": {
        "mod_filename": "libvncclient/sockets.c",
        "status": "modified",
        "add_lines": 16,
        "dele_lines": 2,
        "patch": "@@ -62,6 +62,8 @@ rfbBool errorMessageOnReadFailure = TRUE;\n rfbBool\n ReadFromRFBServer(rfbClient* client, char *out, unsigned int n)\n {\n+  const int USECS_WAIT_PER_RETRY = 100000;\n+  int retries = 0;\n #undef DEBUG_READ_EXACT\n #ifdef DEBUG_READ_EXACT\n \tchar* oout=out;\n@@ -151,10 +153,16 @@ ReadFromRFBServer(rfbClient* client, char *out, unsigned int n)\n       if (i <= 0) {\n \tif (i < 0) {\n \t  if (errno == EWOULDBLOCK || errno == EAGAIN) {\n+\t    if (client->readTimeout > 0 &&\n+\t\t++retries > (client->readTimeout * 1000 * 1000 / USECS_WAIT_PER_RETRY))\n+\t    {\n+\t      rfbClientLog(\"Connection timed out\\n\");\n+\t      return FALSE;\n+\t    }\n \t    /* TODO:\n \t       ProcessXtEvents();\n \t    */\n-\t    WaitForMessage(client, 100000);\n+\t    WaitForMessage(client, USECS_WAIT_PER_RETRY);\n \t    i = 0;\n \t  } else {\n \t    rfbClientErr(\"read (%d: %s)\\n\",errno,strerror(errno));\n@@ -194,10 +202,16 @@ ReadFromRFBServer(rfbClient* client, char *out, unsigned int n)\n \t  errno=WSAGetLastError();\n #endif\n \t  if (errno == EWOULDBLOCK || errno == EAGAIN) {\n+\t    if (client->readTimeout > 0 &&\n+\t\t++retries > (client->readTimeout * 1000 * 1000 / USECS_WAIT_PER_RETRY))\n+\t    {\n+\t\trfbClientLog(\"Connection timed out\\n\");\n+\t\treturn FALSE;\n+\t    }\n \t    /* TODO:\n \t       ProcessXtEvents();\n \t    */\n-\t    WaitForMessage(client, 100000);\n+\t    WaitForMessage(client, USECS_WAIT_PER_RETRY);\n \t    i = 0;\n \t  } else {\n \t    rfbClientErr(\"read (%s)\\n\",strerror(errno));"
    },
    "modified_file_1": {
        "mod_filename": "libvncclient/vncviewer.c",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 0,
        "patch": "@@ -272,6 +272,7 @@ rfbClient* rfbGetClient(int bitsPerSample,int samplesPerPixel,\n   client->destPort = 5900;\n   \n   client->connectTimeout = DEFAULT_CONNECT_TIMEOUT;\n+  client->readTimeout = DEFAULT_READ_TIMEOUT;\n \n   client->CurrentKeyboardLedState = 0;\n   client->HandleKeyboardLedState = (HandleKeyboardLedStateProc)DummyPoint;"
    },
    "modified_file_2": {
        "mod_filename": "rfb/rfbclient.h",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 0,
        "patch": "@@ -85,6 +85,7 @@\n #define SERVER_PORT_OFFSET 5900\n \n #define DEFAULT_CONNECT_TIMEOUT 60\n+#define DEFAULT_READ_TIMEOUT 0\n \n #define DEFAULT_SSH_CMD \"/usr/bin/ssh\"\n #define DEFAULT_TUNNEL_CMD  \\\n@@ -454,6 +455,9 @@ typedef struct _rfbClient {\n #endif\n \t/* timeout in seconds for select() after connect() */\n \tunsigned int connectTimeout;\n+\t/* timeout in seconds when reading from half-open connections in\n+\t * ReadFromRFBServer() - keep at 0 to disable timeout detection and handling */\n+\tunsigned int readTimeout;\n } rfbClient;\n \n /* cursor.c */"
    }
}