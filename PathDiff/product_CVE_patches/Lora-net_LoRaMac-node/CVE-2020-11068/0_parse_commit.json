{
    "current_hash": "e3063a91daa7ad8a687223efa63079f0c24568e4",
    "parent_hash": "830a0f9de4471bfb0dca9e9bbb737eb3f5e6adca",
    "modified_file_0": {
        "mod_filename": "src/mac/LoRaMac.c",
        "status": "modified",
        "add_lines": 9,
        "dele_lines": 1,
        "patch": "@@ -997,6 +997,13 @@ static void ProcessRadioRxDone( void )\n     switch( macHdr.Bits.MType )\r\n     {\r\n         case FRAME_TYPE_JOIN_ACCEPT:\r\n+            // Check if the received frame size is valid\r\n+            if( size < LORAMAC_JOIN_ACCEPT_FRAME_MIN_SIZE )\r\n+            {\r\n+                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;\r\n+                PrepareRxDoneAbort( );\r\n+                return;\r\n+            }\r\n             macMsgJoinAccept.Buffer = payload;\r\n             macMsgJoinAccept.BufSize = size;\r\n \r\n@@ -1068,7 +1075,8 @@ static void ProcessRadioRxDone( void )\n             getPhy.Datarate = MacCtx.McpsIndication.RxDatarate;\r\n             getPhy.Attribute = PHY_MAX_PAYLOAD;\r\n             phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );\r\n-            if( MAX( 0, ( int16_t )( ( int16_t ) size - ( int16_t ) LORA_MAC_FRMPAYLOAD_OVERHEAD ) ) > ( int16_t )phyParam.Value )\r\n+            if( ( MAX( 0, ( int16_t )( ( int16_t ) size - ( int16_t ) LORAMAC_FRAME_PAYLOAD_OVERHEAD_SIZE ) ) > ( int16_t )phyParam.Value ) ||\r\n+                ( size < LORAMAC_FRAME_PAYLOAD_MIN_SIZE ) )\r\n             {\r\n                 MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;\r\n                 PrepareRxDoneAbort( );\r"
    },
    "modified_file_1": {
        "mod_filename": "src/peripherals/atecc608a-tnglora-se/atecc608a-tnglora-se.c",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 0,
        "patch": "@@ -499,6 +499,12 @@ SecureElementStatus_t SecureElementProcessJoinAccept( JoinReqIdentifier_t joinRe\n         return SECURE_ELEMENT_ERROR_NPE;\n     }\n \n+    // Check that frame size isn't bigger than a JoinAccept with CFList size\n+    if( encJoinAcceptSize > LORAMAC_JOIN_ACCEPT_FRAME_MAX_SIZE )\n+    {\n+        return SECURE_ELEMENT_ERROR_BUF_SIZE;\n+    }\n+\n     // Determine decryption key\n     KeyIdentifier_t encKeyID = NWK_KEY;\n "
    },
    "modified_file_2": {
        "mod_filename": "src/peripherals/lr1110-se/lr1110-se.c",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 0,
        "patch": "@@ -290,6 +290,12 @@ SecureElementStatus_t SecureElementProcessJoinAccept( JoinReqIdentifier_t joinRe\n         return SECURE_ELEMENT_ERROR_NPE;\n     }\n \n+    // Check that frame size isn't bigger than a JoinAccept with CFList size\n+    if( encJoinAcceptSize > LORAMAC_JOIN_ACCEPT_FRAME_MAX_SIZE )\n+    {\n+        return SECURE_ELEMENT_ERROR_BUF_SIZE;\n+    }\n+\n     // Determine decryption key\n     KeyIdentifier_t encKeyID = NWK_KEY;\n "
    },
    "modified_file_3": {
        "mod_filename": "src/peripherals/soft-se/soft-se.c",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 0,
        "patch": "@@ -395,6 +395,12 @@ SecureElementStatus_t SecureElementProcessJoinAccept( JoinReqIdentifier_t joinRe\n         return SECURE_ELEMENT_ERROR_NPE;\n     }\n \n+    // Check that frame size isn't bigger than a JoinAccept with CFList size\n+    if( encJoinAcceptSize > LORAMAC_JOIN_ACCEPT_FRAME_MAX_SIZE )\n+    {\n+        return SECURE_ELEMENT_ERROR_BUF_SIZE;\n+    }\n+\n     // Determine decryption key\n     KeyIdentifier_t encKeyID = NWK_KEY;\n "
    }
}