{
    "current_hash": "1db88374bb7706a115d5c3617c6f16115c33bf27",
    "parent_hash": "ba85ae75e31d5503ff98fc2085038c0db8fd399e",
    "modified_file_0": {
        "mod_filename": "src/libopensc/pkcs15-oberthur.c",
        "status": "modified",
        "add_lines": 7,
        "dele_lines": 6,
        "patch": "@@ -304,7 +304,7 @@ sc_oberthur_read_file(struct sc_pkcs15_card *p15card, const char *in_path,\n \tif (verify_pin && rv == SC_ERROR_SECURITY_STATUS_NOT_SATISFIED)   {\n \t\tstruct sc_pkcs15_object *objs[0x10], *pin_obj = NULL;\n \t\tconst struct sc_acl_entry *acl = sc_file_get_acl_entry(file, SC_AC_OP_READ);\n-\t\tint ii;\n+\t\tint ii, nobjs;\n \n \t\tif (acl == NULL) {\n \t\t\tsc_file_free(file);\n@@ -313,18 +313,19 @@ sc_oberthur_read_file(struct sc_pkcs15_card *p15card, const char *in_path,\n \t\t\tLOG_FUNC_RETURN(ctx, SC_ERROR_INVALID_DATA);\n \t\t}\n \n-\t\trv = sc_pkcs15_get_objects(p15card, SC_PKCS15_TYPE_AUTH_PIN, objs, 0x10);\n-\t\tif (rv != SC_SUCCESS) {\n+\t\tnobjs = sc_pkcs15_get_objects(p15card, SC_PKCS15_TYPE_AUTH_PIN, objs, 0x10);\n+\t\tif (nobjs < 1) {\n \t\t\tsc_file_free(file);\n \t\t\tfree(*out);\n \t\t\t*out = NULL;\n-\t\t\tLOG_TEST_RET(ctx, rv, \"Cannot read oberthur file: get AUTH objects error\");\n+\t\t\tLOG_TEST_RET(ctx, SC_ERROR_DATA_OBJECT_NOT_FOUND,\n+\t\t\t\t\"Cannot read oberthur file: get AUTH objects error\");\n \t\t}\n \n-\t\tfor (ii=0; ii<rv; ii++)   {\n+\t\tfor (ii = 0; ii < nobjs; ii++) {\n \t\t\tstruct sc_pkcs15_auth_info *auth_info = (struct sc_pkcs15_auth_info *) objs[ii]->data;\n \t\t\tsc_log(ctx, \"compare PIN/ACL refs:%i/%i, method:%i/%i\",\n-\t\t\t\t\tauth_info->attrs.pin.reference, acl->key_ref, auth_info->auth_method, acl->method);\n+\t\t\t\tauth_info->attrs.pin.reference, acl->key_ref, auth_info->auth_method, acl->method);\n \t\t\tif (auth_info->attrs.pin.reference == (int)acl->key_ref && auth_info->auth_method == (unsigned)acl->method)   {\n \t\t\t\tpin_obj = objs[ii];\n \t\t\t\tbreak;"
    }
}