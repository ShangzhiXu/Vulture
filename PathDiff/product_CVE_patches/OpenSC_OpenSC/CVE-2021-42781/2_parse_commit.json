{
    "current_hash": "40c50a3a4219308aae90f6efd7b10213794a8d86",
    "parent_hash": "4512676795e094ad68f41e32e9b553cc30c5f87b",
    "modified_file_0": {
        "mod_filename": "src/libopensc/pkcs15-oberthur.c",
        "status": "modified",
        "add_lines": 66,
        "dele_lines": 17,
        "patch": "@@ -659,7 +659,7 @@ sc_pkcs15emu_oberthur_add_cert(struct sc_pkcs15_card *p15card, unsigned int file\n \tstruct sc_context *ctx = p15card->card->ctx;\n \tstruct sc_pkcs15_cert_info cinfo;\n \tstruct sc_pkcs15_object cobj;\n-\tunsigned char *info_blob, *cert_blob;\n+\tunsigned char *info_blob = NULL, *cert_blob = NULL;\n \tsize_t info_len, cert_len, len, offs;\n \tunsigned flags;\n \tint rv;\n@@ -675,31 +675,47 @@ sc_pkcs15emu_oberthur_add_cert(struct sc_pkcs15_card *p15card, unsigned int file\n \trv = sc_oberthur_read_file(p15card, ch_tmp, &info_blob, &info_len, 1);\n \tLOG_TEST_RET(ctx, rv, \"Failed to add certificate: read oberthur file error\");\n \n-\tif (info_len < 2)\n+\tif (info_len < 2) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add certificate: no 'tag'\");\n+\t}\n \tflags = *(info_blob + 0) * 0x100 + *(info_blob + 1);\n \toffs = 2;\n \n \t/* Label */\n-\tif (offs + 2 > info_len)\n+\tif (offs + 2 > info_len) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add certificate: no 'CN'\");\n+\t}\n \tlen = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;\n-\tif (len)   {\n+\tif (len + offs + 2 > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid 'CN' length\");\n+\t} else if (len) {\n \t\tif (len > sizeof(cobj.label) - 1)\n \t\t\tlen = sizeof(cobj.label) - 1;\n \t\tmemcpy(cobj.label, info_blob + offs + 2, len);\n \t}\n \toffs += 2 + len;\n \n \t/* ID */\n-\tif (offs > info_len)\n+\tif (offs + 2 > info_len) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add certificate: no 'ID'\");\n+\t}\n \tlen = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;\n-\tif (len > sizeof(cinfo.id.value))\n+\tif (len + offs + 2 > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid 'ID' length\");\n+\t} else if (len > sizeof(cinfo.id.value)) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_INVALID_DATA, \"Failed to add certificate: invalid 'ID' length\");\n+\t}\n \tmemcpy(cinfo.id.value, info_blob + offs + 2, len);\n \tcinfo.id.len = len;\n \n+\tfree(info_blob);\n+\n \t/* Ignore subject, issuer and serial */\n \n \tsnprintf(ch_tmp, sizeof(ch_tmp), \"%s%04X\", AWP_OBJECTS_DF_PUB, file_id);\n@@ -784,15 +800,23 @@ sc_pkcs15emu_oberthur_add_prvkey(struct sc_pkcs15_card *p15card,\n \trv = sc_oberthur_read_file(p15card, ch_tmp, &info_blob, &info_len, 1);\n \tLOG_TEST_RET(ctx, rv, \"Failed to add private key: read oberthur file error\");\n \n-\tif (info_len < 2)\n+\tif (info_len < 2) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add private key: no 'tag'\");\n+\t}\n \tflags = *(info_blob + 0) * 0x100 + *(info_blob + 1);\n \toffs = 2;\n \n \t/* CN */\n-\tif (offs > info_len)\n+\tif (offs + 2 > info_len) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add private key: no 'CN'\");\n+\t}\n \tlen = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;\n+\tif (len + offs + 2 > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid 'CN' length\");\n+\t}\n \tif (len && !strlen(kobj.label))   {\n \t\tif (len > sizeof(kobj.label) - 1)\n \t\t\tlen = sizeof(kobj.label) - 1;\n@@ -801,13 +825,21 @@ sc_pkcs15emu_oberthur_add_prvkey(struct sc_pkcs15_card *p15card,\n \toffs += 2 + len;\n \n \t/* ID */\n-\tif (offs > info_len)\n+\tif (offs + 2 > info_len) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add private key: no 'ID'\");\n+\t}\n \tlen = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;\n-\tif (!len)\n+\tif (!len) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add private key: zero length ID\");\n-\telse if (len > sizeof(kinfo.id.value))\n+\t} else if (len + offs + 2 > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid 'ID' length\");\n+\t} else if (len > sizeof(kinfo.id.value)) {\n+\t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_INVALID_DATA, \"Failed to add private key: invalid ID length\");\n+\t}\n \tmemcpy(kinfo.id.value, info_blob + offs + 2, len);\n \tkinfo.id.len = len;\n \toffs += 2 + len;\n@@ -816,19 +848,28 @@ sc_pkcs15emu_oberthur_add_prvkey(struct sc_pkcs15_card *p15card,\n \toffs += 16;\n \n \t/* Subject encoded in ASN1 */\n-\tif (offs > info_len)\n-\t\treturn SC_ERROR_UNKNOWN_DATA_RECEIVED;\n+\tif (offs + 2 > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add private key: no 'subject'\");\n+\t}\n \tlen = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;\n-\tif (len)   {\n+\tif (len + offs + 2 > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid 'subject' length\");\n+\t} else if (len) {\n \t\tkinfo.subject.value = malloc(len);\n-\t\tif (!kinfo.subject.value)\n+\t\tif (!kinfo.subject.value) {\n+\t\t\tfree(info_blob);\n \t\t\tLOG_TEST_RET(ctx, SC_ERROR_OUT_OF_MEMORY, \"Failed to add private key: memory allocation error\");\n+\t\t}\n \t\tkinfo.subject.len = len;\n \t\tmemcpy(kinfo.subject.value, info_blob + offs + 2, len);\n \t}\n \n \t/* Modulus and exponent are ignored */\n \n+\tfree(info_blob);\n+\n \tsnprintf(ch_tmp, sizeof(ch_tmp), \"%s%04X\", AWP_OBJECTS_DF_PRV, file_id);\n \tsc_format_path(ch_tmp, &kinfo.path);\n \tsc_log(ctx, \"Private key info path %s\", ch_tmp);\n@@ -899,22 +940,30 @@ sc_pkcs15emu_oberthur_add_data(struct sc_pkcs15_card *p15card,\n \toffs += 2 + *(info_blob + offs + 1);\n \n \t/* Application */\n-\tif (offs > info_len) {\n+\tif (offs + 2 > info_len) {\n \t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add data: no 'application'\");\n \t}\n \tapp = info_blob + offs + 2;\n \tapp_len = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;\n+\tif (offs + 2 + app_len > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid length of 'application' received\");\n+\t}\n \tif (app_len > sizeof(dinfo.app_label) - 1)\n \t\tapp_len = sizeof(dinfo.app_label) - 1;\n \toffs += 2 + app_len;\n \n \t/* OID encode like DER(ASN.1(oid)) */\n-\tif (offs + 1 > info_len) {\n+\tif (offs + 2 > info_len) {\n \t\tfree(info_blob);\n \t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add data: no 'OID'\");\n \t}\n \toid_len = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;\n+\tif (offs + 2 + oid_len > info_len) {\n+\t\tfree(info_blob);\n+\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid length of 'oid' received\");\n+\t}\n \tif (oid_len)   {\n \t\toid = info_blob + offs + 2;\n \t\tif (*oid != 0x06 || (*(oid + 1) != oid_len - 2)) {"
    }
}