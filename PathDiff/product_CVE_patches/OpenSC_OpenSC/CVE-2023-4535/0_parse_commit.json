{
    "current_hash": "f1993dc4e0b33050b8f72a3558ee88b24c4063b2",
    "parent_hash": "232265dadfad61501478b2dda58cf72ca4379259",
    "modified_file_0": {
        "mod_filename": "src/libopensc/card-myeid.c",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 4,
        "patch": "@@ -1986,18 +1986,20 @@ myeid_enc_dec_sym(struct sc_card *card, const u8 *data, size_t datalen,\n \t\t\t\tsc_log(ctx, \"Found padding byte %02x\", pad_byte);\n \t\t\t\tif (pad_byte == 0 || pad_byte > block_size)\n \t\t\t\t\tLOG_FUNC_RETURN(ctx, SC_ERROR_WRONG_PADDING);\n-\t\t\t\tsdata = priv->sym_plain_buffer + block_size - pad_byte;\n+\t\t\t\tsdata = priv->sym_plain_buffer + block_size;\n \t\t\t\tfor (i = 0; i < pad_byte; i++)\n-\t\t\t\t\tif (sdata[i] != pad_byte)\n+\t\t\t\t\tif (*(--sdata) != pad_byte)\n \t\t\t\t\t\tLOG_FUNC_RETURN(ctx, SC_ERROR_WRONG_PADDING);\n \t\t\t\treturn_len = block_size - pad_byte;\n \t\t\t}\n-\t\t\t*outlen = return_len;\n \t\t\t/* application can request buffer size or actual buffer size is too small */\n-\t\t\tif (out == NULL)\n+\t\t\tif (out == NULL) {\n+\t\t\t\t*outlen = return_len;\n \t\t\t\tLOG_FUNC_RETURN(ctx, SC_SUCCESS);\n+\t\t\t}\n \t\t\tif (return_len > *outlen)\n \t\t\t\tLOG_FUNC_RETURN(ctx, SC_ERROR_BUFFER_TOO_SMALL);\n+\t\t\t*outlen = return_len;\n \t\t\tmemcpy(out, priv->sym_plain_buffer, return_len);\n \t\t\tsc_log(ctx, \"C_DecryptFinal %zu bytes\", *outlen);\n \t\t\treturn SC_SUCCESS;"
    }
}