{
    "current_hash": "07f1254d8537497552e7dce80364aaead9266bbe",
    "parent_hash": "89922e8d546feadcbd888ec6e7e3c0b77f458f9c",
    "modified_file_0": {
        "mod_filename": "sys/uri_parser/uri_parser.c",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 1,
        "patch": "@@ -55,7 +55,7 @@ static char *_consume_scheme(uri_parser_result_t *result, char *uri,\n     result->scheme_len = p - uri;\n \n     /* check if authority part exists '://' */\n-    if ((p[1] != '\\0') && (p[2] != '\\0') && (p[1] == '/') && (p[2] == '/')) {\n+    if (((uri_end - p) > 2) && (p[1] == '/') && (p[2] == '/')) {\n         *has_authority = true;\n         /* skip '://' */\n         return p + 3;"
    },
    "modified_file_1": {
        "mod_filename": "tests/unittests/tests-uri_parser/tests-uri_parser.c",
        "status": "modified",
        "add_lines": 11,
        "dele_lines": 0,
        "patch": "@@ -401,6 +401,17 @@ static const validate_t validate_uris[] = {\n         \"./this:that\",\n         \"\",\n         0),\n+    VEC(\"pP://\",\n+        true,\n+        \"pP\",\n+        \"\",\n+        \"\",\n+        \"\",\n+        \"\",\n+        \"\",\n+        \"\",\n+        \"\",\n+        0),\n };\n \n static char _failure_msg[VEC_MSG_LEN];"
    }
}