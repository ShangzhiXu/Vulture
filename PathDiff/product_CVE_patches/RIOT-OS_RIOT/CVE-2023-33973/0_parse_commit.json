{
    "current_hash": "c9d7863e5664a169035038628029bb07e090c5ff",
    "parent_hash": "e690ef4c1298d90bc323b765c000bb090544fb9f",
    "modified_file_0": {
        "mod_filename": "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
        "status": "modified",
        "add_lines": 15,
        "dele_lines": 1,
        "patch": "@@ -1074,12 +1074,18 @@ static size_t _iphc_ipv6_encode(gnrc_pktsnip_t *pkt,\n                                 uint8_t *iphc_hdr)\n {\n     gnrc_sixlowpan_ctx_t *src_ctx = NULL, *dst_ctx = NULL;\n-    ipv6_hdr_t *ipv6_hdr = pkt->next->data;\n+    ipv6_hdr_t *ipv6_hdr;\n     bool addr_comp = false;\n     uint16_t inline_pos = SIXLOWPAN_IPHC_HDR_LEN;\n \n     assert(iface != NULL);\n \n+    if (pkt->next == NULL) {\n+        DEBUG(\"6lo iphc: packet missing header\\n\");\n+        return 0;\n+    }\n+    ipv6_hdr = pkt->next->data;\n+\n     /* set initial dispatch value*/\n     iphc_hdr[IPHC1_IDX] = SIXLOWPAN_IPHC1_DISP;\n     iphc_hdr[IPHC2_IDX] = 0;\n@@ -1742,6 +1748,14 @@ void gnrc_sixlowpan_iphc_send(gnrc_pktsnip_t *pkt, void *ctx, unsigned page)\n         gnrc_sixlowpan_multiplex_by_size(tmp, orig_datagram_size, netif, page);\n     }\n     else {\n+        if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_MINFWD)) {\n+            gnrc_sixlowpan_frag_fb_t *fb = ctx;\n+\n+            if (fb->pkt == pkt) {\n+                /* free provided fragmentation buffer */\n+                fb->pkt = NULL;\n+            }\n+        }\n         gnrc_pktbuf_release(pkt);\n     }\n }"
    }
}