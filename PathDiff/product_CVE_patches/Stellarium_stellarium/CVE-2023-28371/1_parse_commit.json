{
    "current_hash": "787a894897b7872ae96e6f5804a182210edd5c78",
    "parent_hash": "eba61df3b38605befcb43687a4c0a159dbc0c5cb",
    "modified_file_0": {
        "mod_filename": "guide/app_config_ini.tex",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 0,
        "patch": "@@ -736,6 +736,8 @@ \\subsection{\\big[scripts\\big]}\n \\begin{tabularx}{\\textwidth}{l|l|l|X}\\toprule\n \\emph{ID}                  & \\emph{Type} & \\emph{Default} & \\emph{Description}\\\\\\midrule\n startup\\_script                            & string & startup.ssc & name of script executed on program start\\\\\n+flag\\_script\\_allow\\_absolute\\_path        & bool   & false       & set true to allow scripts from absolute pathnames.\n+                                                                    This may pose a security risk if you run arbitrary scripts.\\\\\n flag\\_script\\_allow\\_write\\_absolute\\_path & bool   & false       & set true to let scripts store files to absolute pathnames.\n                                                                     This may pose a security risk if you run scripts from other authors\n                                                                     without checking what they are doing.\\\\\\bottomrule "
    },
    "modified_file_1": {
        "mod_filename": "src/scripting/StelScriptMgr.cpp",
        "status": "modified",
        "add_lines": 16,
        "dele_lines": 3,
        "patch": "@@ -794,8 +794,10 @@ bool StelScriptMgr::runPreprocessedScript(const QString &preprocessedScript, con\n bool StelScriptMgr::runScript(const QString& fileName, const QString& includePath)\n {\n \tQString preprocessedScript;\n-\tprepareScript(preprocessedScript,fileName,includePath);\n-\treturn runPreprocessedScript(preprocessedScript,fileName);\n+\tif (prepareScript(preprocessedScript,fileName,includePath))\n+\t\treturn runPreprocessedScript(preprocessedScript,fileName);\n+\telse\n+\t\treturn false;\n }\n \n bool StelScriptMgr::runScriptDirect(const QString scriptId, const QString &scriptCode, int &errLoc, const QString& includePath)\n@@ -820,9 +822,20 @@ bool StelScriptMgr::runScriptDirect(const QString& scriptCode, const QString &in\n bool StelScriptMgr::prepareScript( QString &script, const QString &fileName, const QString &includePath)\n {\n \tQString absPath;\n+\tconst bool okToRunScriptFromAbsolutePath=StelApp::getInstance().getSettings()->value(\"scripts/flag_script_allow_absolute_path\", false).toBool();\n \n \tif (QFileInfo(fileName).isAbsolute())\n-\t\tabsPath = fileName;\n+\t{\n+\t\t// Absolute paths may bear a security risk. We need a flag to allow them!\n+\t\tif (okToRunScriptFromAbsolutePath)\n+\t\t\tabsPath = fileName;\n+\t\telse\n+\t\t{\n+\t\t\tqWarning() << \"SCRIPTING CONFIGURATION ISSUE: You are trying to run a script from absolute pathname.\";\n+\t\t\tqWarning() << \"  To enable this, edit config.ini and set [scripts]/flag_script_allow_absolute_path=true\";\n+\t\t\treturn false;\n+\t\t}\n+\t}\n \telse\n \t\tabsPath = StelFileMgr::findFile(\"scripts/\" + fileName);\n "
    }
}