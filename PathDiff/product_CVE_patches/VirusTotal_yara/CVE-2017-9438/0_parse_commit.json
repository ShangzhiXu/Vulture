{
    "current_hash": "10e8bd3071677dd1fa76beeef4bc2fc427cea5e7",
    "parent_hash": "5e2d2798048dbba3aa8428aa563c0ebfbae37027",
    "modified_file_0": {
        "mod_filename": "libyara/hex_grammar.c",
        "status": "modified",
        "add_lines": 75,
        "dele_lines": 61,
        "patch": "@@ -93,6 +93,13 @@\n #define mark_as_not_fast_regexp() \\\n     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP\n \n+#define incr_ast_levels() \\\n+    if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\\n+    { \\\n+      lex_env->last_error_code = ERROR_INVALID_HEX_STRING; \\\n+      YYABORT; \\\n+    }\n+\n #define ERROR_IF(x, error) \\\n     if (x) \\\n     { \\\n@@ -107,7 +114,7 @@\n     } \\\n \n \n-#line 111 \"hex_grammar.c\" /* yacc.c:339  */\n+#line 118 \"hex_grammar.c\" /* yacc.c:339  */\n \n # ifndef YY_NULLPTR\n #  if defined __cplusplus && 201103L <= __cplusplus\n@@ -157,12 +164,12 @@ extern int hex_yydebug;\n \n union YYSTYPE\n {\n-#line 78 \"hex_grammar.y\" /* yacc.c:355  */\n+#line 85 \"hex_grammar.y\" /* yacc.c:355  */\n \n   int64_t integer;\n   RE_NODE *re_node;\n \n-#line 166 \"hex_grammar.c\" /* yacc.c:355  */\n+#line 173 \"hex_grammar.c\" /* yacc.c:355  */\n };\n \n typedef union YYSTYPE YYSTYPE;\n@@ -178,7 +185,7 @@ int hex_yyparse (void *yyscanner, HEX_LEX_ENVIRONMENT *lex_env);\n \n /* Copy the second part of user declarations.  */\n \n-#line 182 \"hex_grammar.c\" /* yacc.c:358  */\n+#line 189 \"hex_grammar.c\" /* yacc.c:358  */\n \n #ifdef short\n # undef short\n@@ -476,9 +483,9 @@ static const yytype_uint8 yytranslate[] =\n   /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */\n static const yytype_uint16 yyrline[] =\n {\n-       0,   105,   105,   114,   118,   127,   189,   193,   206,   210,\n-     219,   233,   232,   245,   268,   300,   322,   342,   346,   360,\n-     368\n+       0,   112,   112,   121,   125,   136,   200,   204,   219,   223,\n+     232,   246,   245,   258,   281,   313,   335,   355,   359,   374,\n+     382\n };\n #endif\n \n@@ -1017,45 +1024,45 @@ yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, void *yyscanner, H\n   switch (yytype)\n     {\n           case 16: /* tokens  */\n-#line 94 \"hex_grammar.y\" /* yacc.c:1257  */\n+#line 101 \"hex_grammar.y\" /* yacc.c:1257  */\n       { yr_re_node_destroy(((*yyvaluep).re_node)); }\n-#line 1023 \"hex_grammar.c\" /* yacc.c:1257  */\n+#line 1030 \"hex_grammar.c\" /* yacc.c:1257  */\n         break;\n \n     case 17: /* token_sequence  */\n-#line 95 \"hex_grammar.y\" /* yacc.c:1257  */\n+#line 102 \"hex_grammar.y\" /* yacc.c:1257  */\n       { yr_re_node_destroy(((*yyvaluep).re_node)); }\n-#line 1029 \"hex_grammar.c\" /* yacc.c:1257  */\n+#line 1036 \"hex_grammar.c\" /* yacc.c:1257  */\n         break;\n \n     case 18: /* token_or_range  */\n-#line 96 \"hex_grammar.y\" /* yacc.c:1257  */\n+#line 103 \"hex_grammar.y\" /* yacc.c:1257  */\n       { yr_re_node_destroy(((*yyvaluep).re_node)); }\n-#line 1035 \"hex_grammar.c\" /* yacc.c:1257  */\n+#line 1042 \"hex_grammar.c\" /* yacc.c:1257  */\n         break;\n \n     case 19: /* token  */\n-#line 97 \"hex_grammar.y\" /* yacc.c:1257  */\n+#line 104 \"hex_grammar.y\" /* yacc.c:1257  */\n       { yr_re_node_destroy(((*yyvaluep).re_node)); }\n-#line 1041 \"hex_grammar.c\" /* yacc.c:1257  */\n+#line 1048 \"hex_grammar.c\" /* yacc.c:1257  */\n         break;\n \n     case 21: /* range  */\n-#line 100 \"hex_grammar.y\" /* yacc.c:1257  */\n+#line 107 \"hex_grammar.y\" /* yacc.c:1257  */\n       { yr_re_node_destroy(((*yyvaluep).re_node)); }\n-#line 1047 \"hex_grammar.c\" /* yacc.c:1257  */\n+#line 1054 \"hex_grammar.c\" /* yacc.c:1257  */\n         break;\n \n     case 22: /* alternatives  */\n-#line 99 \"hex_grammar.y\" /* yacc.c:1257  */\n+#line 106 \"hex_grammar.y\" /* yacc.c:1257  */\n       { yr_re_node_destroy(((*yyvaluep).re_node)); }\n-#line 1053 \"hex_grammar.c\" /* yacc.c:1257  */\n+#line 1060 \"hex_grammar.c\" /* yacc.c:1257  */\n         break;\n \n     case 23: /* byte  */\n-#line 98 \"hex_grammar.y\" /* yacc.c:1257  */\n+#line 105 \"hex_grammar.y\" /* yacc.c:1257  */\n       { yr_re_node_destroy(((*yyvaluep).re_node)); }\n-#line 1059 \"hex_grammar.c\" /* yacc.c:1257  */\n+#line 1066 \"hex_grammar.c\" /* yacc.c:1257  */\n         break;\n \n \n@@ -1321,42 +1328,46 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n   switch (yyn)\n     {\n         case 2:\n-#line 106 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 113 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         RE_AST* re_ast = yyget_extra(yyscanner);\n         re_ast->root_node = (yyvsp[-1].re_node);\n       }\n-#line 1330 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1337 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 3:\n-#line 115 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 122 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         (yyval.re_node) = (yyvsp[0].re_node);\n       }\n-#line 1338 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1345 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 4:\n-#line 119 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 126 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n+        incr_ast_levels();\n+\n         (yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));\n \n         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));\n         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));\n \n         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);\n       }\n-#line 1351 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1360 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 5:\n-#line 128 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 137 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         RE_NODE* new_concat;\n         RE_NODE* leftmost_concat = NULL;\n         RE_NODE* leftmost_node = (yyvsp[-1].re_node);\n \n+        incr_ast_levels();\n+\n         (yyval.re_node) = NULL;\n \n         /*\n@@ -1409,49 +1420,51 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n \n         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);\n       }\n-#line 1413 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1424 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 6:\n-#line 190 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 201 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         (yyval.re_node) = (yyvsp[0].re_node);\n       }\n-#line 1421 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1432 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 7:\n-#line 194 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 205 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n+        incr_ast_levels();\n+\n         (yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));\n \n         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));\n         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));\n \n         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);\n       }\n-#line 1434 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1447 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 8:\n-#line 207 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 220 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         (yyval.re_node) = (yyvsp[0].re_node);\n       }\n-#line 1442 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1455 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 9:\n-#line 211 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 224 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         (yyval.re_node) = (yyvsp[0].re_node);\n         (yyval.re_node)->greedy = FALSE;\n       }\n-#line 1451 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1464 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 10:\n-#line 220 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 233 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         lex_env->token_count++;\n \n@@ -1464,28 +1477,28 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n \n         (yyval.re_node) = (yyvsp[0].re_node);\n       }\n-#line 1468 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1481 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 11:\n-#line 233 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 246 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         lex_env->inside_or++;\n       }\n-#line 1476 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1489 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 12:\n-#line 237 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 250 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         (yyval.re_node) = (yyvsp[-1].re_node);\n         lex_env->inside_or--;\n       }\n-#line 1485 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1498 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 13:\n-#line 246 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 259 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         if ((yyvsp[-1].integer) <= 0)\n         {\n@@ -1508,11 +1521,11 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n         (yyval.re_node)->start = (int) (yyvsp[-1].integer);\n         (yyval.re_node)->end = (int) (yyvsp[-1].integer);\n       }\n-#line 1512 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1525 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 14:\n-#line 269 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 282 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         if (lex_env->inside_or &&\n             ((yyvsp[-3].integer) > STRING_CHAINING_THRESHOLD ||\n@@ -1544,11 +1557,11 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n         (yyval.re_node)->start = (int) (yyvsp[-3].integer);\n         (yyval.re_node)->end = (int) (yyvsp[-1].integer);\n       }\n-#line 1548 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1561 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 15:\n-#line 301 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 314 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         if (lex_env->inside_or)\n         {\n@@ -1570,11 +1583,11 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n         (yyval.re_node)->start = (int) (yyvsp[-2].integer);\n         (yyval.re_node)->end = INT_MAX;\n       }\n-#line 1574 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1587 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 16:\n-#line 323 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 336 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         if (lex_env->inside_or)\n         {\n@@ -1590,21 +1603,22 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n         (yyval.re_node)->start = 0;\n         (yyval.re_node)->end = INT_MAX;\n       }\n-#line 1594 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1607 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 17:\n-#line 343 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 356 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n           (yyval.re_node) = (yyvsp[0].re_node);\n       }\n-#line 1602 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1615 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 18:\n-#line 347 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 360 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         mark_as_not_fast_regexp();\n+        incr_ast_levels();\n \n         (yyval.re_node) = yr_re_node_create(RE_NODE_ALT, (yyvsp[-2].re_node), (yyvsp[0].re_node));\n \n@@ -1613,23 +1627,23 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n \n         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);\n       }\n-#line 1617 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1631 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 19:\n-#line 361 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 375 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         (yyval.re_node) = yr_re_node_create(RE_NODE_LITERAL, NULL, NULL);\n \n         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);\n \n         (yyval.re_node)->value = (int) (yyvsp[0].integer);\n       }\n-#line 1629 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1643 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n   case 20:\n-#line 369 \"hex_grammar.y\" /* yacc.c:1646  */\n+#line 383 \"hex_grammar.y\" /* yacc.c:1661  */\n     {\n         uint8_t mask = (uint8_t) ((yyvsp[0].integer) >> 8);\n \n@@ -1649,11 +1663,11 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n           (yyval.re_node)->mask = mask;\n         }\n       }\n-#line 1653 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1667 \"hex_grammar.c\" /* yacc.c:1661  */\n     break;\n \n \n-#line 1657 \"hex_grammar.c\" /* yacc.c:1646  */\n+#line 1671 \"hex_grammar.c\" /* yacc.c:1661  */\n       default: break;\n     }\n   /* User semantic actions sometimes alter yychar, and that requires\n@@ -1881,5 +1895,5 @@ YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);\n #endif\n   return yyresult;\n }\n-#line 390 \"hex_grammar.y\" /* yacc.c:1906  */\n+#line 404 \"hex_grammar.y\" /* yacc.c:1906  */\n "
    },
    "modified_file_1": {
        "mod_filename": "libyara/hex_grammar.h",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 2,
        "patch": "@@ -60,12 +60,12 @@ extern int hex_yydebug;\n \n union YYSTYPE\n {\n-#line 78 \"hex_grammar.y\" /* yacc.c:1909  */\n+#line 85 \"hex_grammar.y\" /* yacc.c:1915  */\n \n   int64_t integer;\n   RE_NODE *re_node;\n \n-#line 69 \"hex_grammar.h\" /* yacc.c:1909  */\n+#line 69 \"hex_grammar.h\" /* yacc.c:1915  */\n };\n \n typedef union YYSTYPE YYSTYPE;"
    },
    "modified_file_2": {
        "mod_filename": "libyara/hex_grammar.y",
        "status": "modified",
        "add_lines": 14,
        "dele_lines": 0,
        "patch": "@@ -51,6 +51,13 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n #define mark_as_not_fast_regexp() \\\n     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP\n \n+#define incr_ast_levels() \\\n+    if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\\n+    { \\\n+      lex_env->last_error_code = ERROR_INVALID_HEX_STRING; \\\n+      YYABORT; \\\n+    }\n+\n #define ERROR_IF(x, error) \\\n     if (x) \\\n     { \\\n@@ -117,6 +124,8 @@ tokens\n       }\n     | token token\n       {\n+        incr_ast_levels();\n+\n         $$ = yr_re_node_create(RE_NODE_CONCAT, $1, $2);\n \n         DESTROY_NODE_IF($$ == NULL, $1);\n@@ -130,6 +139,8 @@ tokens\n         RE_NODE* leftmost_concat = NULL;\n         RE_NODE* leftmost_node = $2;\n \n+        incr_ast_levels();\n+\n         $$ = NULL;\n \n         /*\n@@ -192,6 +203,8 @@ token_sequence\n       }\n     | token_sequence token_or_range\n       {\n+        incr_ast_levels();\n+\n         $$ = yr_re_node_create(RE_NODE_CONCAT, $1, $2);\n \n         DESTROY_NODE_IF($$ == NULL, $1);\n@@ -346,6 +359,7 @@ alternatives\n     | alternatives '|' tokens\n       {\n         mark_as_not_fast_regexp();\n+        incr_ast_levels();\n \n         $$ = yr_re_node_create(RE_NODE_ALT, $1, $3);\n "
    }
}