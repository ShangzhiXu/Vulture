{
    "current_hash": "7168bd79b888900aa94523301126f968a93eb3a6",
    "parent_hash": "d5572cb6db18f46c368d8d1cd4485704cd8015d1",
    "modified_file_0": {
        "mod_filename": "ext/yajl/api/yajl_gen.h",
        "status": "modified",
        "add_lines": 3,
        "dele_lines": 1,
        "patch": "@@ -63,7 +63,9 @@ extern \"C\" {\n         yajl_gen_invalid_number,\n         /** A print callback was passed in, so there is no internal\n          * buffer to get from */\n-        yajl_gen_no_buf\n+        yajl_gen_no_buf,\n+        /** Tried to decrement at depth 0 */\n+        yajl_depth_underflow\n     } yajl_gen_status;\n \n     /** an opaque handle to a generator */"
    },
    "modified_file_1": {
        "mod_filename": "ext/yajl/yajl_gen.c",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 1,
        "patch": "@@ -178,7 +178,7 @@ yajl_gen_free(yajl_gen g)\n     if (++(g->depth) >= YAJL_MAX_DEPTH) return yajl_max_depth_exceeded;\n \n #define DECREMENT_DEPTH \\\n-    if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_gen_error;\n+    if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_depth_underflow;\n \n #define APPENDED_ATOM \\\n     switch (g->state[g->depth]) {                   \\"
    },
    "modified_file_2": {
        "mod_filename": "ext/yajl/yajl_lex.c",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 0,
        "patch": "@@ -43,6 +43,7 @@ const char *yajl_tok_name(yajl_tok tok) {\n         case yajl_tok_bool: return \"bool\";\n         case yajl_tok_colon: return \"colon\";\n         case yajl_tok_comma: return \"comma\";\n+        case yajl_tok_comment: return \"comment\";\n         case yajl_tok_eof: return \"eof\";\n         case yajl_tok_error: return \"error\";\n         case yajl_tok_left_brace: return \"open_array\";"
    }
}