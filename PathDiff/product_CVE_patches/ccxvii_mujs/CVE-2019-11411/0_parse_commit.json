{
    "current_hash": "da632ca08f240590d2dec786722ed08486ce1be6",
    "parent_hash": "0c03f9c05745d13fec4c9c6b2d947c5be8a8b4de",
    "modified_file_0": {
        "mod_filename": "jsnumber.c",
        "status": "modified",
        "add_lines": 3,
        "dele_lines": 3,
        "patch": "@@ -27,7 +27,7 @@ static void Np_valueOf(js_State *J)\n \n static void Np_toString(js_State *J)\n {\n-\tchar buf[32];\n+\tchar buf[100];\n \tjs_Object *self = js_toobject(J, 0);\n \tint radix = js_isundefined(J, 1) ? 10 : js_tointeger(J, 1);\n \tif (self->type != JS_CNUMBER)\n@@ -42,7 +42,6 @@ static void Np_toString(js_State *J)\n \t/* lame number to string conversion for any radix from 2 to 36 */\n \t{\n \t\tstatic const char digits[] = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n-\t\tchar buf[100];\n \t\tdouble number = self->u.number;\n \t\tint sign = self->u.number < 0;\n \t\tjs_Buffer *sb = NULL;\n@@ -115,7 +114,8 @@ static void Np_toString(js_State *J)\n /* Customized ToString() on a number */\n static void numtostr(js_State *J, const char *fmt, int w, double n)\n {\n-\tchar buf[32], *e;\n+\t/* buf needs to fit printf(\"%.20f\", 1e20) */\n+\tchar buf[50], *e;\n \tsprintf(buf, fmt, w, n);\n \te = strchr(buf, 'e');\n \tif (e) {"
    }
}