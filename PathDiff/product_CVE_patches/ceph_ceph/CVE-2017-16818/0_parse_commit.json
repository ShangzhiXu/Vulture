{
    "current_hash": "b3118cabb8060a8cc6a01c4e8264cb18e7b1745a",
    "parent_hash": "65b7543390c8ee2a797bc559a64c61e35dd77cf6",
    "modified_file_0": {
        "mod_filename": "src/rgw/rgw_basic_types.h",
        "status": "modified",
        "add_lines": 0,
        "dele_lines": 2,
        "patch": "@@ -160,12 +160,10 @@ class Principal {\n   }\n \n   const std::string& get_tenant() const {\n-    ceph_assert(t != Wildcard);\n     return u.tenant;\n   }\n \n   const std::string& get_id() const {\n-    ceph_assert(t != Wildcard && t != Tenant);\n     return u.id;\n   }\n "
    },
    "modified_file_1": {
        "mod_filename": "src/rgw/rgw_iam_policy.cc",
        "status": "modified",
        "add_lines": 9,
        "dele_lines": 3,
        "patch": "@@ -221,7 +221,9 @@ optional<ARN> ARN::parse(const string& s, bool wildcards) {\n   if ((s == \"*\") && wildcards) {\n     return ARN(Partition::wildcard, Service::wildcard, \"*\", \"*\", \"*\");\n   } else if (regex_match(s, match, wildcards ? rx_wild : rx_no_wild)) {\n-    ceph_assert(match.size() == 6);\n+    if (match.size() != 6) {\n+      return boost::none;\n+    }\n \n     ARN a;\n     {\n@@ -771,7 +773,9 @@ static optional<Principal> parse_principal(CephContext* cct, TokenID t,\n \t\t\t  ECMAScript | optimize);\n     smatch match;\n     if (regex_match(a->resource, match, rx)) {\n-      ceph_assert(match.size() == 3);\n+      if (match.size() != 3) {\n+\treturn boost::none;\n+      }\n \n       if (match[1] == \"user\") {\n \treturn Principal::user(std::move(a->account),\n@@ -843,7 +847,9 @@ bool ParseState::do_string(CephContext* cct, const char* s, size_t l) {\n     // Principals\n \n   } else if (w->kind == TokenKind::princ_type) {\n-    ceph_assert(pp->s.size() > 1);\n+    if (pp->s.size() <= 1) {\n+      return false;\n+    }\n     auto& pri = pp->s[pp->s.size() - 2].w->id == TokenID::Principal ?\n       t->princ : t->noprinc;\n "
    },
    "modified_file_2": {
        "mod_filename": "src/rgw/rgw_iam_policy.h",
        "status": "modified",
        "add_lines": 0,
        "dele_lines": 3,
        "patch": "@@ -29,8 +29,6 @@\n #include \"rgw_iam_policy_keywords.h\"\n #include \"rgw_string.h\"\n \n-#include \"include/assert.h\" // razzin' frazzin' ...grrr.\n-\n class RGWRados;\n namespace rgw {\n namespace auth {\n@@ -254,7 +252,6 @@ string to_string(const MaskedIP& m);\n inline bool operator ==(const MaskedIP& l, const MaskedIP& r) {\n   auto shift = std::max((l.v6 ? 128 : 32) - l.prefix,\n \t\t\t(r.v6 ? 128 : 32) - r.prefix);\n-  ceph_assert(shift > 0);\n   return (l.addr >> shift) == (r.addr >> shift);\n }\n "
    }
}