{
    "current_hash": "abfe1fd08d78baa0947d17dac0f7411c3d948e4d",
    "parent_hash": "104ab83f090c49021e704502c1944b2a1826b8f7",
    "modified_file_0": {
        "mod_filename": "src/client/ns_turn_ioaddr.c",
        "status": "modified",
        "add_lines": 27,
        "dele_lines": 2,
        "patch": "@@ -483,9 +483,9 @@ int ioa_addr_is_loopback(ioa_addr *addr)\n \t\t\treturn (u[0] == 127);\n \t\t} else if(addr->ss.sa_family == AF_INET6) {\n \t\t\tconst uint8_t *u = ((const uint8_t*)&(addr->s6.sin6_addr));\n-\t\t\tif(u[7] == 1) {\n+\t\t\tif(u[15] == 1) {\n \t\t\t\tint i;\n-\t\t\t\tfor(i=0;i<7;++i) {\n+\t\t\t\tfor(i=0;i<15;++i) {\n \t\t\t\t\tif(u[i])\n \t\t\t\t\t\treturn 0;\n \t\t\t\t}\n@@ -496,6 +496,31 @@ int ioa_addr_is_loopback(ioa_addr *addr)\n \treturn 0;\n }\n \n+/*\n+To avoid a vulnerability this function checks whether the addr is in 0.0.0.0/8 or ::/128.\n+Source from (INADDR_ANY) 0.0.0.0/32 and (in6addr_any) ::/128 routed to loopback on Linux systems for old BSD backward compatibility.\n+https://github.com/torvalds/linux/blob/a2f5ea9e314ba6778f885c805c921e9362ec0420/net/ipv6/tcp_ipv6.c#L182\n+To avoid any trouble we match the whole 0.0.0.0/8 that defined in RFC6890 as local network \"this\".\n+*/\n+int ioa_addr_is_zero(ioa_addr *addr)\n+{\n+\tif(addr) {\n+\t\tif(addr->ss.sa_family == AF_INET) {\n+\t\t\tconst uint8_t *u = ((const uint8_t*)&(addr->s4.sin_addr));\n+\t\t\treturn (u[0] == 0);\n+\t\t} else if(addr->ss.sa_family == AF_INET6) {\n+\t\t\tconst uint8_t *u = ((const uint8_t*)&(addr->s6.sin6_addr));\n+\t\t\tint i;\n+\t\t\tfor(i=0;i<=15;++i) {\n+\t\t\t\tif(u[i])\n+\t\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t\treturn 1;\n+\t\t}\n+\t}\n+\treturn 0;\n+}\n+\n /////// Map \"public\" address to \"private\" address //////////////\n \n // Must be called only in a single-threaded context,"
    },
    "modified_file_1": {
        "mod_filename": "src/client/ns_turn_ioaddr.h",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 0,
        "patch": "@@ -89,6 +89,7 @@ void ioa_addr_range_cpy(ioa_addr_range* dest, const ioa_addr_range* src);\n \n int ioa_addr_is_multicast(ioa_addr *a);\n int ioa_addr_is_loopback(ioa_addr *addr);\n+int ioa_addr_is_zero(ioa_addr *addr);\n \n /////// Map \"public\" address to \"private\" address //////////////\n "
    },
    "modified_file_2": {
        "mod_filename": "src/server/ns_turn_server.c",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 0,
        "patch": "@@ -273,6 +273,8 @@ static int good_peer_addr(turn_turnserver *server, const char* realm, ioa_addr *\n \t\t\treturn 0;\n \t\tif( !*(server->allow_loopback_peers) && ioa_addr_is_loopback(peer_addr))\n \t\t\treturn 0;\n+\t\tif (ioa_addr_is_zero(peer_addr))\n+\t\t\treturn 0;\n \n \t\t{\n \t\t\tint i;"
    }
}