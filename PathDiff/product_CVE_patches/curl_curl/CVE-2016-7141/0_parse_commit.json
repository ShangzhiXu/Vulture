{
    "current_hash": "7700fcba64bf5806de28f6c1c7da3b4f0b38567d",
    "parent_hash": "822082d8327a41aafa4c6b7696bfcb8b56037cbf",
    "modified_file_0": {
        "mod_filename": "RELEASE-NOTES",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 0,
        "patch": "@@ -37,6 +37,7 @@ This release includes the following bugfixes:\n  o SOCKS: display the hostname returned by the SOCKS5 proxy server\n  o sasl: Don't use GSSAPI authentication when domain name not specified [16]\n  o win: Basic support for Universal Windows Platform apps [17]\n+ o nss: fix incorrect use of a previously loaded certificate from file\n \n This release includes the following known bugs:\n "
    },
    "modified_file_1": {
        "mod_filename": "lib/vtls/nss.c",
        "status": "modified",
        "add_lines": 7,
        "dele_lines": 1,
        "patch": "@@ -1002,10 +1002,10 @@ static SECStatus SelectClientCert(void *arg, PRFileDesc *sock,\n   struct ssl_connect_data *connssl = (struct ssl_connect_data *)arg;\n   struct Curl_easy *data = connssl->data;\n   const char *nickname = connssl->client_nickname;\n+  static const char pem_slotname[] = \"PEM Token #1\";\n \n   if(connssl->obj_clicert) {\n     /* use the cert/key provided by PEM reader */\n-    static const char pem_slotname[] = \"PEM Token #1\";\n     SECItem cert_der = { 0, NULL, 0 };\n     void *proto_win = SSL_RevealPinArg(sock);\n     struct CERTCertificateStr *cert;\n@@ -1067,6 +1067,12 @@ static SECStatus SelectClientCert(void *arg, PRFileDesc *sock,\n   if(NULL == nickname)\n     nickname = \"[unknown]\";\n \n+  if(!strncmp(nickname, pem_slotname, sizeof(pem_slotname) - 1U)) {\n+    failf(data, \"NSS: refusing previously loaded certificate from file: %s\",\n+          nickname);\n+    return SECFailure;\n+  }\n+\n   if(NULL == *pRetKey) {\n     failf(data, \"NSS: private key not found for certificate: %s\", nickname);\n     return SECFailure;"
    }
}