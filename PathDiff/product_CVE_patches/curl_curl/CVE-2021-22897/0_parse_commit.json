{
    "current_hash": "bbb71507b7bab52002f9b1e0880bed6a32834511",
    "parent_hash": "b03b82a85fdbd6e6a20263f6e16c589633d5d7cc",
    "modified_file_0": {
        "mod_filename": "lib/vtls/schannel.c",
        "status": "modified",
        "add_lines": 5,
        "dele_lines": 4,
        "patch": "@@ -328,12 +328,12 @@ get_alg_id_by_name(char *name)\n }\n \n static CURLcode\n-set_ssl_ciphers(SCHANNEL_CRED *schannel_cred, char *ciphers)\n+set_ssl_ciphers(SCHANNEL_CRED *schannel_cred, char *ciphers,\n+                int *algIds)\n {\n   char *startCur = ciphers;\n   int algCount = 0;\n-  static ALG_ID algIds[45]; /*There are 45 listed in the MS headers*/\n-  while(startCur && (0 != *startCur) && (algCount < 45)) {\n+  while(startCur && (0 != *startCur) && (algCount < NUMOF_CIPHERS)) {\n     long alg = strtol(startCur, 0, 0);\n     if(!alg)\n       alg = get_alg_id_by_name(startCur);\n@@ -593,7 +593,8 @@ schannel_connect_step1(struct Curl_easy *data, struct connectdata *conn,\n     }\n \n     if(SSL_CONN_CONFIG(cipher_list)) {\n-      result = set_ssl_ciphers(&schannel_cred, SSL_CONN_CONFIG(cipher_list));\n+      result = set_ssl_ciphers(&schannel_cred, SSL_CONN_CONFIG(cipher_list),\n+                               BACKEND->algIds);\n       if(CURLE_OK != result) {\n         failf(data, \"Unable to set ciphers to passed via SSL_CONN_CONFIG\");\n         return result;"
    },
    "modified_file_1": {
        "mod_filename": "lib/vtls/schannel.h",
        "status": "modified",
        "add_lines": 3,
        "dele_lines": 0,
        "patch": "@@ -71,6 +71,8 @@ CURLcode Curl_verify_certificate(struct Curl_easy *data,\n #endif\n #endif\n \n+#define NUMOF_CIPHERS 45 /* There are 45 listed in the MS headers */\n+\n struct Curl_schannel_cred {\n   CredHandle cred_handle;\n   TimeStamp time_stamp;\n@@ -102,6 +104,7 @@ struct ssl_backend_data {\n #ifdef HAS_MANUAL_VERIFY_API\n   bool use_manual_cred_validation; /* true if manual cred validation is used */\n #endif\n+  ALG_ID algIds[NUMOF_CIPHERS];\n };\n #endif /* EXPOSE_SCHANNEL_INTERNAL_STRUCTS */\n "
    }
}