{
    "current_hash": "8cf30aa2be256eba07bb1cefb998c52326e846e7",
    "parent_hash": "0555cea5fc0bf890afe0071a558e44625a34ba85",
    "modified_file_0": {
        "mod_filename": "fmt/format.h",
        "status": "modified",
        "add_lines": 3,
        "dele_lines": 3,
        "patch": "@@ -3000,13 +3000,13 @@ typename BasicWriter<Char>::CharPtr\n       CharPtr p = grow_buffer(fill_size);\n       std::uninitialized_fill(p, p + fill_size, fill);\n     }\n-    CharPtr result = prepare_int_buffer(\n-        num_digits, subspec, prefix, prefix_size);\n+    std::ptrdiff_t offset = get(prepare_int_buffer(\n+        num_digits, subspec, prefix, prefix_size)) - &buffer_[0];\n     if (align == ALIGN_LEFT) {\n       CharPtr p = grow_buffer(fill_size);\n       std::uninitialized_fill(p, p + fill_size, fill);\n     }\n-    return result;\n+    return internal::make_ptr(&buffer_[0], buffer_.size()) + offset;\n   }\n   unsigned size = prefix_size + num_digits;\n   if (width <= size) {"
    },
    "modified_file_1": {
        "mod_filename": "test/format-test.cc",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 0,
        "patch": "@@ -1761,3 +1761,7 @@ void convert(int);\n TEST(FormatTest, ConvertCollision) {\n   fmt::format(\"{}\", 42);\n }\n+\n+TEST(FormatTest, Regression) {\n+  fmt::format(\"...........{:<77777.7p}\", \"foo\");\n+}"
    }
}