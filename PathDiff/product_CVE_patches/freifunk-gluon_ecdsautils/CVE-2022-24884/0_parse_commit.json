{
    "current_hash": "1d4b091abdf15ad7b2312535b5b95ad70f6dbd08",
    "parent_hash": "07538893fb6c2a9539678c45f9dbbf1e4f222b46",
    "modified_file_0": {
        "mod_filename": "src/lib/ecdsa.c",
        "status": "modified",
        "add_lines": 10,
        "dele_lines": 0,
        "patch": "@@ -135,6 +135,12 @@ void ecdsa_sign_legacy(ecdsa_signature_t *signature, const ecc_int256_t *hash, c\n void ecdsa_verify_prepare_legacy(ecdsa_verify_context_t *ctx, const ecc_int256_t *hash, const ecdsa_signature_t *signature) {\n   ecc_int256_t w, u1, tmp;\n \n+  if (ecc_25519_gf_is_zero(&signature->s) || ecc_25519_gf_is_zero(&signature->r)) {\n+    // Signature is invalid, mark by setting ctx->r to an invalid value\n+    memset(&ctx->r, 0, sizeof(ctx->r));\n+    return;\n+  }\n+\n   ctx->r = signature->r;\n \n   ecc_25519_gf_recip(&w, &signature->s);\n@@ -149,6 +155,10 @@ bool ecdsa_verify_legacy(const ecdsa_verify_context_t *ctx, const ecc_25519_work\n   ecc_25519_work_t s2, work;\n   ecc_int256_t w, tmp;\n \n+  // Signature was detected as invalid in prepare step\n+  if (ecc_25519_gf_is_zero(&ctx->r))\n+    return false;\n+\n   ecc_25519_scalarmult(&s2, &ctx->u2, pubkey);\n   ecc_25519_add(&work, &ctx->s1, &s2);\n   ecc_25519_store_xy_legacy(&w, NULL, &work);"
    }
}