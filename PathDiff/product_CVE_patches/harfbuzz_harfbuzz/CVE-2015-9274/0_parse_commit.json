{
    "current_hash": "c917965b9e6fe2b21ed6c51559673288fa3af4b7",
    "parent_hash": "f3159ba5141c2ab0e430e64742972df140f91c43",
    "modified_file_0": {
        "mod_filename": "src/hb-ot-layout-gpos-table.hh",
        "status": "modified",
        "add_lines": 7,
        "dele_lines": 7,
        "patch": "@@ -548,7 +548,7 @@ struct SinglePos\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     case 2: return TRACE_RETURN (c->dispatch (u.format2));\n@@ -843,7 +843,7 @@ struct PairPos\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     case 2: return TRACE_RETURN (c->dispatch (u.format2));\n@@ -1024,7 +1024,7 @@ struct CursivePos\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -1117,7 +1117,7 @@ struct MarkBasePos\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -1232,7 +1232,7 @@ struct MarkLigPos\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -1345,7 +1345,7 @@ struct MarkMarkPos\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -1397,7 +1397,7 @@ struct PosLookupSubTable\n   {\n     TRACE_DISPATCH (this, lookup_type);\n     /* The sub_format passed to may_dispatch is unnecessary but harmless. */\n-    if (unlikely (!c->may_dispatch (this, &u.sub_format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.sub_format))) return TRACE_RETURN (c->default_return_value ());\n     switch (lookup_type) {\n     case Single:\t\treturn TRACE_RETURN (u.single.dispatch (c));\n     case Pair:\t\t\treturn TRACE_RETURN (u.pair.dispatch (c));"
    },
    "modified_file_1": {
        "mod_filename": "src/hb-ot-layout-gsub-table.hh",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 6,
        "patch": "@@ -225,7 +225,7 @@ struct SingleSubst\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     case 2: return TRACE_RETURN (c->dispatch (u.format2));\n@@ -418,7 +418,7 @@ struct MultipleSubst\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -562,7 +562,7 @@ struct AlternateSubst\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -873,7 +873,7 @@ struct LigatureSubst\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -1030,7 +1030,7 @@ struct ReverseChainSingleSubst\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     default:return TRACE_RETURN (c->default_return_value ());\n@@ -1070,7 +1070,7 @@ struct SubstLookupSubTable\n   {\n     TRACE_DISPATCH (this, lookup_type);\n     /* The sub_format passed to may_dispatch is unnecessary but harmless. */\n-    if (unlikely (!c->may_dispatch (this, &u.sub_format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.sub_format))) return TRACE_RETURN (c->default_return_value ());\n     switch (lookup_type) {\n     case Single:\t\treturn TRACE_RETURN (u.single.dispatch (c));\n     case Multiple:\t\treturn TRACE_RETURN (u.multiple.dispatch (c));"
    },
    "modified_file_2": {
        "mod_filename": "src/hb-ot-layout-gsubgpos-private.hh",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 4,
        "patch": "@@ -1517,7 +1517,7 @@ struct Context\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     case 2: return TRACE_RETURN (c->dispatch (u.format2));\n@@ -2130,7 +2130,7 @@ struct ChainContext\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (c->dispatch (u.format1));\n     case 2: return TRACE_RETURN (c->dispatch (u.format2));\n@@ -2166,7 +2166,7 @@ struct ExtensionFormat1\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, format);\n-    if (unlikely (!c->may_dispatch (this, this))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, this))) return TRACE_RETURN (c->default_return_value ());\n     return TRACE_RETURN (get_subtable<typename T::LookupSubTable> ().dispatch (c, get_type ()));\n   }\n \n@@ -2211,7 +2211,7 @@ struct Extension\n   inline typename context_t::return_t dispatch (context_t *c) const\n   {\n     TRACE_DISPATCH (this, u.format);\n-    if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value ());\n+    if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value ());\n     switch (u.format) {\n     case 1: return TRACE_RETURN (u.format1.dispatch (c));\n     default:return TRACE_RETURN (c->default_return_value ());"
    }
}