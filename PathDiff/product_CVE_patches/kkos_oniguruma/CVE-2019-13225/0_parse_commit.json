{
    "current_hash": "c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c",
    "parent_hash": "4cf9f4795cb88ba639d6fd68890950ae737f89d7",
    "modified_file_0": {
        "mod_filename": "src/regcomp.c",
        "status": "modified",
        "add_lines": 17,
        "dele_lines": 8,
        "patch": "@@ -1307,8 +1307,9 @@ compile_length_bag_node(BagNode* node, regex_t* reg)\n         len += tlen;\n       }\n \n+      len += SIZE_OP_JUMP + SIZE_OP_ATOMIC_END;\n+\n       if (IS_NOT_NULL(Else)) {\n-        len += SIZE_OP_JUMP;\n         tlen = compile_length_tree(Else, reg);\n         if (tlen < 0) return tlen;\n         len += tlen;\n@@ -1455,7 +1456,7 @@ compile_bag_node(BagNode* node, regex_t* reg, ScanEnv* env)\n \n   case BAG_IF_ELSE:\n     {\n-      int cond_len, then_len, jump_len;\n+      int cond_len, then_len, else_len, jump_len;\n       Node* cond = NODE_BAG_BODY(node);\n       Node* Then = node->te.Then;\n       Node* Else = node->te.Else;\n@@ -1472,8 +1473,7 @@ compile_bag_node(BagNode* node, regex_t* reg, ScanEnv* env)\n       else\n         then_len = 0;\n \n-      jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END;\n-      if (IS_NOT_NULL(Else)) jump_len += SIZE_OP_JUMP;\n+      jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END + SIZE_OP_JUMP;\n \n       r = add_op(reg, OP_PUSH);\n       if (r != 0) return r;\n@@ -1490,11 +1490,20 @@ compile_bag_node(BagNode* node, regex_t* reg, ScanEnv* env)\n       }\n \n       if (IS_NOT_NULL(Else)) {\n-        int else_len = compile_length_tree(Else, reg);\n-        r = add_op(reg, OP_JUMP);\n-        if (r != 0) return r;\n-        COP(reg)->jump.addr = else_len + SIZE_INC_OP;\n+        else_len = compile_length_tree(Else, reg);\n+        if (else_len < 0) return else_len;\n+      }\n+      else\n+        else_len = 0;\n \n+      r = add_op(reg, OP_JUMP);\n+      if (r != 0) return r;\n+      COP(reg)->jump.addr = SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP;\n+\n+      r = add_op(reg, OP_ATOMIC_END);\n+      if (r != 0) return r;\n+\n+      if (IS_NOT_NULL(Else)) {\n         r = compile_tree(Else, reg, env);\n       }\n     }"
    }
}