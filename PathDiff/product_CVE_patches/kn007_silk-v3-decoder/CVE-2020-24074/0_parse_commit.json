{
    "current_hash": "d216599502662db01c07cc0dfd95ff1f1eaaea02",
    "parent_hash": "21feb28669f992b16a9c3407c55bebd35db630da",
    "modified_file_0": {
        "mod_filename": "silk/test/Decoder.c",
        "status": "modified",
        "add_lines": 15,
        "dele_lines": 0,
        "patch": "@@ -361,6 +361,12 @@ int main( int argc, char* argv[] )\n         for( i = 0; i < MAX_LBRR_DELAY; i++ ) {\n             totBytes += nBytesPerPacket[ i + 1 ];\n         }\n+        /* Check if the received totBytes is valid */\n+        if (totBytes < 0 || totBytes > sizeof(payload))\n+        {\n+            fprintf( stderr, \"\\rPackets decoded:             %d\", totPackets );\n+            return -1;\n+        }\n         SKP_memmove( payload, &payload[ nBytesPerPacket[ 0 ] ], totBytes * sizeof( SKP_uint8 ) );\n         payloadEnd -= nBytesPerPacket[ 0 ];\n         SKP_memmove( nBytesPerPacket, &nBytesPerPacket[ 1 ], MAX_LBRR_DELAY * sizeof( SKP_int16 ) );\n@@ -453,6 +459,15 @@ int main( int argc, char* argv[] )\n         for( i = 0; i < MAX_LBRR_DELAY; i++ ) {\n             totBytes += nBytesPerPacket[ i + 1 ];\n         }\n+\n+        /* Check if the received totBytes is valid */\n+        if (totBytes < 0 || totBytes > sizeof(payload))\n+        {\n+            \n+            fprintf( stderr, \"\\rPackets decoded:              %d\", totPackets );\n+            return -1;\n+        }\n+        \n         SKP_memmove( payload, &payload[ nBytesPerPacket[ 0 ] ], totBytes * sizeof( SKP_uint8 ) );\n         payloadEnd -= nBytesPerPacket[ 0 ];\n         SKP_memmove( nBytesPerPacket, &nBytesPerPacket[ 1 ], MAX_LBRR_DELAY * sizeof( SKP_int16 ) );"
    }
}