{
    "current_hash": "bfa5bf82b53715dfedf048e5859a46cf248668ff",
    "parent_hash": "3bf1483853b7d3371b4a6beb186cbddcaf45d25e",
    "modified_file_0": {
        "mod_filename": "include/common.h",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 0,
        "patch": "@@ -22,6 +22,7 @@\n \n #define KiB(x) ((x)*1024)\n #define MiB(x) ((x)*1024 * 1024)\n+#define BWT_BOUND(x) ((x) + 128)\n \n #include <inttypes.h>\n #include <stdint.h>"
    },
    "modified_file_1": {
        "mod_filename": "src/libbz3.c",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 2,
        "patch": "@@ -502,8 +502,8 @@ BZIP3_API struct bz3_state * bz3_new(s32 block_size) {\n     bz3_state->cm_state = malloc(sizeof(state));\n \n     bz3_state->swap_buffer = malloc(bz3_bound(block_size));\n-    bz3_state->sais_array = malloc((block_size + 128) * sizeof(s32));\n-    memset(bz3_state->sais_array, 0, sizeof(s32) * (block_size + 128));\n+    bz3_state->sais_array = malloc(BWT_BOUND(block_size) * sizeof(s32));\n+    memset(bz3_state->sais_array, 0, sizeof(s32) * BWT_BOUND(block_size));\n \n     bz3_state->lzp_lut = calloc(1 << LZP_DICTIONARY, sizeof(s32));\n \n@@ -682,6 +682,8 @@ BZIP3_API s32 bz3_decode_block(struct bz3_state * state, u8 * buffer, s32 data_s\n     }\n \n     // Undo BWT\n+    memset(state->sais_array, 0, sizeof(s32) * BWT_BOUND(state->block_size));\n+    memset(b2, 0, size_src);\n     if (libsais_unbwt(b1, b2, state->sais_array, size_src, NULL, bwt_idx) < 0) {\n         state->last_error = BZ3_ERR_BWT;\n         return -1;"
    }
}