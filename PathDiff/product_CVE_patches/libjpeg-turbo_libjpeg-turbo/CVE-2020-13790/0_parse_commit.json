{
    "current_hash": "3de15e0c344d11d4b90f4a47136467053eb2d09a",
    "parent_hash": "a2291b252de1413a13db61b21863ae7aea0946f3",
    "modified_file_0": {
        "mod_filename": "ChangeLog.md",
        "status": "modified",
        "add_lines": 10,
        "dele_lines": 4,
        "patch": "@@ -13,6 +13,12 @@ TurboJPEG Java API that caused an error (\"java.lang.IllegalStateException: No\n source image is associated with this instance\") when attempting to use that\n method to compress a YUV image.\n \n+3. Fixed an issue in the PPM reader that caused a buffer overrun in cjpeg,\n+TJBench, or the `tjLoadImage()` function if one of the values in a binary\n+PPM/PGM input file exceeded the maximum value defined in the file's header and\n+that maximum value was less than 255.  libjpeg-turbo 1.5.0 already included a\n+similar fix for binary PPM/PGM files with maximum values greater than 255.\n+\n \n 2.0.4\n =====\n@@ -578,10 +584,10 @@ application was linked against.\n \n 3. Fixed a couple of issues in the PPM reader that would cause buffer overruns\n in cjpeg if one of the values in a binary PPM/PGM input file exceeded the\n-maximum value defined in the file's header.  libjpeg-turbo 1.4.2 already\n-included a similar fix for ASCII PPM/PGM files.  Note that these issues were\n-not security bugs, since they were confined to the cjpeg program and did not\n-affect any of the libjpeg-turbo libraries.\n+maximum value defined in the file's header and that maximum value was greater\n+than 255.  libjpeg-turbo 1.4.2 already included a similar fix for ASCII PPM/PGM\n+files.  Note that these issues were not security bugs, since they were confined\n+to the cjpeg program and did not affect any of the libjpeg-turbo libraries.\n \n 4. Fixed an issue whereby attempting to decompress a JPEG file with a corrupt\n header using the `tjDecompressToYUV2()` function would cause the function to"
    },
    "modified_file_1": {
        "mod_filename": "rdppm.c",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 2,
        "patch": "@@ -5,7 +5,7 @@\n  * Copyright (C) 1991-1997, Thomas G. Lane.\n  * Modified 2009 by Bill Allombert, Guido Vollbeding.\n  * libjpeg-turbo Modifications:\n- * Copyright (C) 2015-2017, D. R. Commander.\n+ * Copyright (C) 2015-2017, 2020, D. R. Commander.\n  * For conditions of distribution and use, see the accompanying README.ijg\n  * file.\n  *\n@@ -720,7 +720,7 @@ start_input_ppm(j_compress_ptr cinfo, cjpeg_source_ptr sinfo)\n     /* On 16-bit-int machines we have to be careful of maxval = 65535 */\n     source->rescale = (JSAMPLE *)\n       (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n-                                  (size_t)(((long)maxval + 1L) *\n+                                  (size_t)(((long)MAX(maxval, 255) + 1L) *\n                                            sizeof(JSAMPLE)));\n     half_maxval = maxval / 2;\n     for (val = 0; val <= (long)maxval; val++) {"
    }
}