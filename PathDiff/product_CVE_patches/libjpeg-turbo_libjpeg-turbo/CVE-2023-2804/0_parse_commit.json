{
    "current_hash": "9f756bc67a84d4566bf74a0c2432aa55da404021",
    "parent_hash": "3f43c6a31080847876cbbca347e9be9df215dba9",
    "modified_file_0": {
        "mod_filename": "ChangeLog.md",
        "status": "modified",
        "add_lines": 7,
        "dele_lines": 0,
        "patch": "@@ -8,6 +8,13 @@ subsampling, which allows losslessly transposed or rotated 4:1:1 JPEG images to\n be losslessly cropped, partially decompressed, or decompressed to planar YUV\n images.\n \n+2. Fixed various segfaults and buffer overruns that occurred when attempting to\n+decompress various specially-crafted malformed 12-bit-per-component lossless\n+JPEG images.  These issues were caused by out-of-range sample values that were\n+not range-limited before being used as array indices.  The issues were specific\n+to 12-bit data precision, since that is the only data precision for which the\n+range of the sample data type exceeds the valid sample range.\n+\n \n 2.1.91 (3.0 beta2)\n =================="
    },
    "modified_file_1": {
        "mod_filename": "jdlossls.c",
        "status": "modified",
        "add_lines": 13,
        "dele_lines": 1,
        "patch": "@@ -6,7 +6,7 @@\n  * Lossless JPEG Modifications:\n  * Copyright (C) 1999, Ken Murchison.\n  * libjpeg-turbo Modifications:\n- * Copyright (C) 2022, D. R. Commander.\n+ * Copyright (C) 2022-2023, D. R. Commander.\n  * For conditions of distribution and use, see the accompanying README.ijg\n  * file.\n  *\n@@ -217,7 +217,15 @@ simple_upscale(j_decompress_ptr cinfo,\n                JDIFFROW diff_buf, _JSAMPROW output_buf, JDIMENSION width)\n {\n   do {\n+#if BITS_IN_JSAMPLE == 12\n+    /* 12-bit is the only data precision for which the range of the sample data\n+     * type exceeds the valid sample range.  Thus, we need to range-limit the\n+     * samples, because other algorithms may try to use them as array indices.\n+     */\n+    *output_buf++ = (_JSAMPLE)((*diff_buf++ << cinfo->Al) & 0xFFF);\n+#else\n     *output_buf++ = (_JSAMPLE)(*diff_buf++ << cinfo->Al);\n+#endif\n   } while (--width);\n }\n \n@@ -226,7 +234,11 @@ noscale(j_decompress_ptr cinfo,\n         JDIFFROW diff_buf, _JSAMPROW output_buf, JDIMENSION width)\n {\n   do {\n+#if BITS_IN_JSAMPLE == 12\n+    *output_buf++ = (_JSAMPLE)((*diff_buf++) & 0xFFF);\n+#else\n     *output_buf++ = (_JSAMPLE)(*diff_buf++);\n+#endif\n   } while (--width);\n }\n "
    }
}