{
    "current_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "parent_hash": "3901ec49767a5b66bebe0a46cf851579f5f040c0",
    "modified_file_0": {
        "mod_filename": "src/unix/process.c",
        "status": "modified",
        "add_lines": 11,
        "dele_lines": 0,
        "patch": "@@ -330,6 +330,17 @@ static void uv__process_child_init(const uv_process_options_t* options,\n     _exit(127);\n   }\n \n+  if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {\n+    /* When dropping privileges from root, the `setgroups` call will\n+     * remove any extraneous groups. If we don't call this, then\n+     * even though our uid has dropped, we may still have groups\n+     * that enable us to do super-user things. This will fail if we\n+     * aren't root, so don't bother checking the return value, this\n+     * is just done as an optimistic privilege dropping function.\n+     */\n+    SAVE_ERRNO(setgroups(0, NULL));\n+  }\n+\n   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {\n     uv__write_int(error_fd, -errno);\n     perror(\"setgid()\");"
    }
}