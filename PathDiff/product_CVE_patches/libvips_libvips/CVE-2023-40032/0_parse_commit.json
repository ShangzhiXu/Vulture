{
    "current_hash": "e091d65835966ef56d53a4105a7362cafdb1582b",
    "parent_hash": "b91ebf2989dcbd3c263e4568656277de5469f283",
    "modified_file_0": {
        "mod_filename": "ChangeLog",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 0,
        "patch": "@@ -1,3 +1,7 @@\n+TBD 8.14.4\n+\n+- fix null-pointer dereference during svgload [kleisauke]\n+\n 20/7/23 8.14.3\n \n - fix ICC handling of greyscale images with a incompatible profile [kleisauke]"
    },
    "modified_file_1": {
        "mod_filename": "libvips/foreign/svgload.c",
        "status": "modified",
        "add_lines": 15,
        "dele_lines": 3,
        "patch": "@@ -145,7 +145,7 @@ vips_foreign_load_svg_zfree( void *opaque, void *ptr )\n /* Find a utf-8 substring within the first len_bytes (not characters). \n  *\n  *   - case-insensitive\n- *   - needle must be zero-terminated, but hackstack need not be\n+ *   - needle must be zero-terminated, but haystack need not be\n  *   - haystack can be null-terminated\n  *   - if haystack is shorter than len bytes, that'll end the search \n  *   - if we hit invalid utf-8, we return NULL\n@@ -191,11 +191,14 @@ vips_utf8_strcasestr( const char *haystack_start, const char *needle_start,\n \t\t\t\tb == (gunichar) -2 )\n                                 return( NULL );\n \n-                        /* End of haystack. There can't be a complete needle\n-                         * anywhere.\n+                        /* Disallow codepoint U+0000 as it's a nul byte.\n+                         * This is redundant with GLib >= 2.63.0, see:\n+                         * https://gitlab.gnome.org/GNOME/glib/-/merge_requests/967\n                          */\n+#if !GLIB_CHECK_VERSION( 2, 63, 0 )\n                         if( a == (gunichar) 0 )\n                                 return( NULL );\n+#endif\n \n                         /* Mismatch.\n                          */\n@@ -205,6 +208,15 @@ vips_utf8_strcasestr( const char *haystack_start, const char *needle_start,\n                         haystack_char = \n \t\t\t\tg_utf8_find_next_char( haystack_char, \n \t\t\t\t\thaystack_start + len_bytes );\n+\n+                        /* End of haystack. There can't be a complete needle\n+                         * anywhere.\n+                         */\n+                        if( haystack_char == NULL )\n+                                return( NULL );\n+\n+                        /* needle_char will never be NULL.\n+                         */\n                         needle_char = \n \t\t\t\tg_utf8_find_next_char( needle_char, NULL );\n                 }"
    }
}