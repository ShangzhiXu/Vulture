{
    "current_hash": "6298903e35217ab69c279056f925fb72900ce0b7",
    "parent_hash": "b57574d6fb9071b2f8f261b32c9378ed72db7023",
    "modified_file_0": {
        "mod_filename": "ldo.c",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 3,
        "patch": "@@ -245,13 +245,12 @@ static int stackinuse (lua_State *L) {\n \n void luaD_shrinkstack (lua_State *L) {\n   int inuse = stackinuse(L);\n-  int goodsize = inuse + (inuse / 8) + 2*EXTRA_STACK;\n+  int goodsize = inuse + BASIC_STACK_SIZE;\n   if (goodsize > LUAI_MAXSTACK)\n     goodsize = LUAI_MAXSTACK;  /* respect stack limit */\n   /* if thread is currently not handling a stack overflow and its\n      good size is smaller than current size, shrink its stack */\n-  if (inuse <= (LUAI_MAXSTACK - EXTRA_STACK) &&\n-      goodsize < L->stacksize)\n+  if (inuse <= (LUAI_MAXSTACK - EXTRA_STACK) && goodsize < L->stacksize)\n     luaD_reallocstack(L, goodsize, 0);  /* ok if that fails */\n   else  /* don't change stack */\n     condmovestack(L,{},{});  /* (change only for debugging) */"
    }
}