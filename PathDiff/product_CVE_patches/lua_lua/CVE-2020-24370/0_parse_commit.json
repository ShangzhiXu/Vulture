{
    "current_hash": "a585eae6e7ada1ca9271607a4f48dfb17868ab7b",
    "parent_hash": "d2c2e32e8a0f649099de0e9d04b5a72037b7b138",
    "modified_file_0": {
        "mod_filename": "ldebug.c",
        "status": "modified",
        "add_lines": 3,
        "dele_lines": 3,
        "patch": "@@ -188,8 +188,8 @@ static const char *upvalname (const Proto *p, int uv) {\n static const char *findvararg (CallInfo *ci, int n, StkId *pos) {\n   if (clLvalue(s2v(ci->func))->p->is_vararg) {\n     int nextra = ci->u.l.nextraargs;\n-    if (n <= nextra) {\n-      *pos = ci->func - nextra + (n - 1);\n+    if (n >= -nextra) {  /* 'n' is negative */\n+      *pos = ci->func - nextra - (n + 1);\n       return \"(vararg)\";  /* generic name for any vararg */\n     }\n   }\n@@ -202,7 +202,7 @@ const char *luaG_findlocal (lua_State *L, CallInfo *ci, int n, StkId *pos) {\n   const char *name = NULL;\n   if (isLua(ci)) {\n     if (n < 0)  /* access to vararg values? */\n-      return findvararg(ci, -n, pos);\n+      return findvararg(ci, n, pos);\n     else\n       name = luaF_getlocalname(ci_func(ci)->p, n, currentpc(ci));\n   }"
    }
}