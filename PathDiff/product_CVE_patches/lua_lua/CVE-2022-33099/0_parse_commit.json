{
    "current_hash": "42d40581dd919fb134c07027ca1ce0844c670daf",
    "parent_hash": "e435aaabef8e717e0812a16a82b56acd11fb34c1",
    "modified_file_0": {
        "mod_filename": "ldebug.c",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 1,
        "patch": "@@ -824,8 +824,11 @@ l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {\n   va_start(argp, fmt);\n   msg = luaO_pushvfstring(L, fmt, argp);  /* format message */\n   va_end(argp);\n-  if (isLua(ci))  /* if Lua function, add source:line information */\n+  if (isLua(ci)) {  /* if Lua function, add source:line information */\n     luaG_addinfo(L, msg, ci_func(ci)->p->source, getcurrentline(ci));\n+    setobjs2s(L, L->top - 2, L->top - 1);  /* remove 'msg' from the stack */\n+    L->top--;\n+  }\n   luaG_errormsg(L);\n }\n "
    },
    "modified_file_1": {
        "mod_filename": "lvm.c",
        "status": "modified",
        "add_lines": 4,
        "dele_lines": 2,
        "patch": "@@ -656,8 +656,10 @@ void luaV_concat (lua_State *L, int total) {\n       /* collect total length and number of strings */\n       for (n = 1; n < total && tostring(L, s2v(top - n - 1)); n++) {\n         size_t l = vslen(s2v(top - n - 1));\n-        if (l_unlikely(l >= (MAX_SIZE/sizeof(char)) - tl))\n+        if (l_unlikely(l >= (MAX_SIZE/sizeof(char)) - tl)) {\n+          L->top = top - total;  /* pop strings to avoid wasting stack */\n           luaG_runerror(L, \"string length overflow\");\n+        }\n         tl += l;\n       }\n       if (tl <= LUAI_MAXSHORTLEN) {  /* is result a short string? */\n@@ -672,7 +674,7 @@ void luaV_concat (lua_State *L, int total) {\n       setsvalue2s(L, top - n, ts);  /* create result */\n     }\n     total -= n-1;  /* got 'n' strings to create 1 new */\n-    L->top -= n-1;  /* popped 'n' strings and pushed one */\n+    L->top = top - (n - 1);  /* popped 'n' strings and pushed one */\n   } while (total > 1);  /* repeat until only 1 result left */\n }\n "
    }
}