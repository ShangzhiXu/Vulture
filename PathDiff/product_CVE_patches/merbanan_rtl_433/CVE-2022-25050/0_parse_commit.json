{
    "current_hash": "2dad7b9fc67a1d0bfbe520fbd821678b8f8cc7a8",
    "parent_hash": "29b14b4dc6fcd0980cf0adf8bac8bebd55b6bbab",
    "modified_file_0": {
        "mod_filename": "src/devices/cmr113.c",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 2,
        "patch": "@@ -42,8 +42,8 @@ Kudos to Jon Oxer for decoding this stream and putting it here:\n \n */\n \n-#define COMPARE_BITS 83\n-#define COMPARE_BYTES (COMPARE_BITS/8)\n+#define COMPARE_BITS  83\n+#define COMPARE_BYTES ((COMPARE_BITS + 7) / 8)\n \n static int cmr113_decode(r_device *decoder, bitbuffer_t *bitbuffer)\n {"
    },
    "modified_file_1": {
        "mod_filename": "src/devices/somfy_iohc.c",
        "status": "modified",
        "add_lines": 5,
        "dele_lines": 4,
        "patch": "@@ -100,11 +100,12 @@ static int somfy_iohc_decode(r_device *decoder, bitbuffer_t *bitbuffer)\n     if (bitbuffer->num_rows != 1)\n         return DECODE_ABORT_EARLY;\n \n-    int offset = bitbuffer_search(bitbuffer, 0, 0, preamble_pattern, 24) + 24;\n-    if (offset >= bitbuffer->bits_per_row[0] - 19 * 10)\n+    unsigned offset = bitbuffer_search(bitbuffer, 0, 0, preamble_pattern, 24) + 24;\n+    if (offset + 19 * 10 >= bitbuffer->bits_per_row[0])\n         return DECODE_ABORT_EARLY;\n \n-    int num_bits = bitbuffer->bits_per_row[0] - offset;\n+    unsigned num_bits = bitbuffer->bits_per_row[0] - offset;\n+    num_bits = MIN(num_bits, sizeof (b) * 8);\n \n     int len = extract_bytes_uart(bitbuffer->bb[0], offset, num_bits, b);\n     if (len < 19)\n@@ -120,7 +121,7 @@ static int somfy_iohc_decode(r_device *decoder, bitbuffer_t *bitbuffer)\n     // calculate and verify checksum\n     if (crc16lsb(b, len, 0x8408, 0x0000) != 0) // unreflected poly 0x1021\n         return DECODE_FAIL_MIC;\n-    bitrow_printf(b, len * 8, \"%s: offset %d, num_bits %d, len %d, msg_len %d\\n\", __func__, offset, num_bits, len, msg_len);\n+    bitrow_printf(b, len * 8, \"%s: offset %u, num_bits %u, len %d, msg_len %d\\n\", __func__, offset, num_bits, len, msg_len);\n \n     int msg_type = (b[0]);\n     int dst_id   = ((unsigned)b[4] << 24) | (b[3] << 16) | (b[2] << 8) | (b[1]); // assume Little-Endian"
    }
}