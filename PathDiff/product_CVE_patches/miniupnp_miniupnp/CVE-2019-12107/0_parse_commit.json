{
    "current_hash": "bec6ccec63cadc95655721bc0e1dd49dac759d94",
    "parent_hash": "cd506a67e174a45c6a202eff182a712955ed6d6f",
    "modified_file_0": {
        "mod_filename": "miniupnpd/upnpevents.c",
        "status": "modified",
        "add_lines": 26,
        "dele_lines": 11,
        "patch": "@@ -443,19 +443,34 @@ static void upnp_event_prepare(struct upnp_event_notify * obj)\n \t\tl = 0;\n \t}\n \tobj->buffersize = 1024;\n-\tobj->buffer = malloc(obj->buffersize);\n-\tif(!obj->buffer) {\n-\t\tsyslog(LOG_ERR, \"%s: malloc returned NULL\", \"upnp_event_prepare\");\n-\t\tif(xml) {\n-\t\t\tfree(xml);\n+\tfor (;;) {\n+\t\tobj->buffer = malloc(obj->buffersize);\n+\t\tif(!obj->buffer) {\n+\t\t\tsyslog(LOG_ERR, \"%s: malloc returned NULL\", \"upnp_event_prepare\");\n+\t\t\tif(xml) {\n+\t\t\t\tfree(xml);\n+\t\t\t}\n+\t\t\tobj->state = EError;\n+\t\t\treturn;\n \t\t}\n-\t\tobj->state = EError;\n-\t\treturn;\n+\t\tobj->tosend = snprintf(obj->buffer, obj->buffersize, notifymsg,\n+\t\t                       obj->path, obj->addrstr, obj->portstr, l+2,\n+\t\t                       obj->sub->uuid, obj->sub->seq,\n+\t\t                       l, xml);\n+\t\tif (obj->tosend < 0) {\n+\t\t\tsyslog(LOG_ERR, \"%s: snprintf() failed\", \"upnp_event_prepare\");\n+\t\t\tif(xml) {\n+\t\t\t\tfree(xml);\n+\t\t\t}\n+\t\t\tobj->state = EError;\n+\t\t\treturn;\n+\t\t} else if (obj->tosend < obj->buffersize) {\n+\t\t\tbreak; /* the buffer was large enough */\n+\t\t}\n+\t\t/* Try again with a buffer big enough */\n+\t\tfree(obj->buffer);\n+\t\tobj->buffersize = obj->tosend + 1;\t/* reserve space for the final 0 */\n \t}\n-\tobj->tosend = snprintf(obj->buffer, obj->buffersize, notifymsg,\n-\t                       obj->path, obj->addrstr, obj->portstr, l+2,\n-\t                       obj->sub->uuid, obj->sub->seq,\n-\t                       l, xml);\n \tif(xml) {\n \t\tfree(xml);\n \t\txml = NULL;"
    }
}