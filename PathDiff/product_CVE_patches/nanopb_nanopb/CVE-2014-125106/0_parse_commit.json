{
    "current_hash": "d2099cc8f1adb33d427a44a5e32ed27b647c7168",
    "parent_hash": "d0466bdf439a190f4a17c502d8aeb40ef823b53e",
    "modified_file_0": {
        "mod_filename": "pb_decode.c",
        "status": "modified",
        "add_lines": 13,
        "dele_lines": 7,
        "patch": "@@ -1072,32 +1072,35 @@ static bool checkreturn pb_dec_fixed64(pb_istream_t *stream, const pb_field_t *f\n static bool checkreturn pb_dec_bytes(pb_istream_t *stream, const pb_field_t *field, void *dest)\n {\n     uint32_t size;\n+    size_t alloc_size;\n     pb_bytes_array_t *bdest;\n     \n     if (!pb_decode_varint32(stream, &size))\n         return false;\n     \n+    if (size > PB_SIZE_MAX)\n+        PB_RETURN_ERROR(stream, \"bytes overflow\");\n+    \n+    alloc_size = PB_BYTES_ARRAY_T_ALLOCSIZE(size);\n+    if (size > alloc_size)\n+        PB_RETURN_ERROR(stream, \"size too large\");\n+    \n     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)\n     {\n #ifndef PB_ENABLE_MALLOC\n         PB_RETURN_ERROR(stream, \"no malloc support\");\n #else\n-        if (!allocate_field(stream, dest, PB_BYTES_ARRAY_T_ALLOCSIZE(size), 1))\n+        if (!allocate_field(stream, dest, alloc_size, 1))\n             return false;\n         bdest = *(pb_bytes_array_t**)dest;\n #endif\n     }\n     else\n     {\n-        if (PB_BYTES_ARRAY_T_ALLOCSIZE(size) > field->data_size)\n+        if (alloc_size > field->data_size)\n             PB_RETURN_ERROR(stream, \"bytes overflow\");\n         bdest = (pb_bytes_array_t*)dest;\n     }\n-    \n-    if (size > PB_SIZE_MAX)\n-    {\n-        PB_RETURN_ERROR(stream, \"bytes overflow\");\n-    }\n \n     bdest->size = (pb_size_t)size;\n     return pb_read(stream, bdest->bytes, size);\n@@ -1114,6 +1117,9 @@ static bool checkreturn pb_dec_string(pb_istream_t *stream, const pb_field_t *fi\n     /* Space for null terminator */\n     alloc_size = size + 1;\n     \n+    if (alloc_size < size)\n+        PB_RETURN_ERROR(stream, \"size too large\");\n+    \n     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)\n     {\n #ifndef PB_ENABLE_MALLOC"
    }
}