{
    "current_hash": "92327c9ec211bd1616315abcb255861b130b97ca",
    "parent_hash": "a35bd00fbf8f2578ec0c660b532e925911191b43",
    "modified_file_0": {
        "mod_filename": "libnetdata/url/url.c",
        "status": "modified",
        "add_lines": 3,
        "dele_lines": 1,
        "patch": "@@ -60,7 +60,9 @@ char *url_decode_r(char *to, char *url, size_t size) {\n     while(*s && d < e) {\n         if(unlikely(*s == '%')) {\n             if(likely(s[1] && s[2])) {\n-                *d++ = from_hex(s[1]) << 4 | from_hex(s[2]);\n+                char t = from_hex(s[1]) << 4 | from_hex(s[2]);\n+                // avoid HTTP header injection\n+                *d++ = (char)((isprint(t))? t : ' ');\n                 s += 2;\n             }\n         }"
    },
    "modified_file_1": {
        "mod_filename": "web/api/web_api_v1.c",
        "status": "modified",
        "add_lines": 17,
        "dele_lines": 0,
        "patch": "@@ -233,6 +233,15 @@ inline int web_client_api_request_v1_chart(RRDHOST *host, struct web_client *w,\n     return web_client_api_request_single_chart(host, w, url, rrd_stats_api_v1_chart);\n }\n \n+void fix_google_param(char *s) {\n+    if(unlikely(!s)) return;\n+\n+    for( ; *s ;s++) {\n+        if(!isalnum(*s) && *s != '.' && *s != '_' && *s != '-')\n+            *s = '_';\n+    }\n+}\n+\n // returns the HTTP code\n inline int web_client_api_request_v1_data(RRDHOST *host, struct web_client *w, char *url) {\n     debug(D_WEB_CLIENT, \"%llu: API v1 data with URL '%s'\", w->id, url);\n@@ -332,6 +341,14 @@ inline int web_client_api_request_v1_data(RRDHOST *host, struct web_client *w, c\n         }\n     }\n \n+    // validate the google parameters given\n+    fix_google_param(google_out);\n+    fix_google_param(google_sig);\n+    fix_google_param(google_reqId);\n+    fix_google_param(google_version);\n+    fix_google_param(responseHandler);\n+    fix_google_param(outFileName);\n+\n     if(!chart || !*chart) {\n         buffer_sprintf(w->response.data, \"No chart id is given at the request.\");\n         goto cleanup;"
    }
}