{
    "current_hash": "4def30ab8ea445cdc06832a44c3ec40a506a0ffa",
    "parent_hash": "934a91fc29c048acff74db911aed60ba67f9ff79",
    "modified_file_0": {
        "mod_filename": "sesman/sesman.c",
        "status": "modified",
        "add_lines": 5,
        "dele_lines": 3,
        "patch": "@@ -276,16 +276,17 @@ sesman_close_all(void)\n static int\n sesman_data_in(struct trans *self)\n {\n+#define HEADER_SIZE 8\n     int version;\n     int size;\n \n     if (self->extra_flags == 0)\n     {\n         in_uint32_be(self->in_s, version);\n         in_uint32_be(self->in_s, size);\n-        if (size > self->in_s->size)\n+        if (size < HEADER_SIZE || size > self->in_s->size)\n         {\n-            LOG(LOG_LEVEL_ERROR, \"sesman_data_in: bad message size\");\n+            LOG(LOG_LEVEL_ERROR, \"sesman_data_in: bad message size %d\", size);\n             return 1;\n         }\n         self->header_size = size;\n@@ -302,11 +303,12 @@ sesman_data_in(struct trans *self)\n             return 1;\n         }\n         /* reset for next message */\n-        self->header_size = 8;\n+        self->header_size = HEADER_SIZE;\n         self->extra_flags = 0;\n         init_stream(self->in_s, 0); /* Reset input stream pointers */\n     }\n     return 0;\n+#undef HEADER_SIZE\n }\n \n /******************************************************************************/"
    }
}