{
    "current_hash": "1ebc60b20fbe9a02436d5cbbf8951714e749ddb1",
    "parent_hash": "d06875591ec9cc76f2a9f87a99c4262eea8e0dc9",
    "modified_file_0": {
        "mod_filename": "Makefile",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 2,
        "patch": "@@ -33,12 +33,12 @@ CPPFLAGS += -DSEND_RECEIVE_HISTFILE=\\\"$(SEND_RECEIVE_HISTFILE)\\\" \\\n picocom : linenoise-1.0/linenoise.o\n linenoise-1.0/linenoise.o : linenoise-1.0/linenoise.c linenoise-1.0/linenoise.h\n \n-\n-picocom : picocom.o term.o\n+picocom : picocom.o term.o split.o\n #\t$(LD) $(LDFLAGS) -o $@ $+ $(LDLIBS)\n \n picocom.o : picocom.c term.h\n term.o : term.c term.h\n+split.o : split.c split.h\n \n \n doc : picocom.8 picocom.8.html picocom.8.ps"
    },
    "modified_file_1": {
        "mod_filename": "picocom.c",
        "status": "modified",
        "add_lines": 33,
        "dele_lines": 30,
        "patch": "@@ -48,6 +48,7 @@\n #define _GNU_SOURCE\n #include <getopt.h>\n \n+#include \"split.h\"\n #include \"term.h\"\n #ifdef LINENOISE\n #include \"linenoise-1.0/linenoise.h\"\n@@ -721,6 +722,9 @@ show_status (int dtr_up)\n \n /**********************************************************************/\n \n+#define RUNCMD_ARGS_MAX 32\n+#define RUNCMD_EXEC_FAIL 126\n+\n void\n establish_child_signal_handlers (void)\n {\n@@ -735,10 +739,8 @@ establish_child_signal_handlers (void)\n \tsigaction (SIGTERM, &dfl_action, NULL);\n }\n \n-#define EXEC \"exec \"\n-\n int\n-run_cmd(int fd, ...)\n+run_cmd(int fd, const char *cmd, const char *args_extra)\n {\n \tpid_t pid;\n \tsigset_t sigm, sigm_old;\n@@ -781,8 +783,10 @@ run_cmd(int fd, ...)\n \t} else {\n \t\t/* child: external program */\n \t\tlong fl;\n-\t\tchar cmd[512];\n-\n+\t\tint argc;\n+\t\tchar *argv[RUNCMD_ARGS_MAX + 1];\n+\t\tint r;\n+\t\t\t\n \t\t/* unmanage terminal, and reset it to canonical mode */\n \t\tterm_remove(STI);\n \t\t/* unmanage serial port fd, without reset */\n@@ -796,37 +800,36 @@ run_cmd(int fd, ...)\n \t\tclose(STO);\n \t\tdup2(fd, STI);\n \t\tdup2(fd, STO);\n-\t\t{\n-\t\t\t/* build command-line */\n-\t\t\tchar *c, *ce;\n-\t\t\tconst char *s;\n-\t\t\tint n;\n-\t\t\tva_list vls;\n-\t\t\t\n-\t\t\tstrcpy(cmd, EXEC);\n-\t\t\tc = &cmd[sizeof(EXEC)- 1];\n-\t\t\tce = cmd + sizeof(cmd) - 1;\n-\t\t\tva_start(vls, fd);\n-\t\t\twhile ( (s = va_arg(vls, const char *)) ) {\n-\t\t\t\tn = strlen(s);\n-\t\t\t\tif ( c + n + 1 >= ce ) break;\n-\t\t\t\tmemcpy(c, s, n); c += n;\n-\t\t\t\t*c++ = ' ';\n-\t\t\t}\n-\t\t\tva_end(vls);\n-\t\t\t*c = '\\0';\n+\t\t\n+\t\t/* build command arguments vector */\n+\t\targc = 0;\n+\t\tr = split_quoted(cmd, &argc, argv, RUNCMD_ARGS_MAX);\n+\t\tif ( r < 0 ) {\n+\t\t\tfd_printf(STDERR_FILENO, \"Cannot parse command\\n\");\n+\t\t\texit(RUNCMD_EXEC_FAIL);\n+\t\t}\n+\t\tr = split_quoted(args_extra, &argc, argv, RUNCMD_ARGS_MAX);\n+\t\tif ( r < 0 ) {\n+\t\t\tfd_printf(STDERR_FILENO, \"Cannot parse extra args\\n\");\n+\t\t\texit(RUNCMD_EXEC_FAIL);\n \t\t}\n+\t\tif ( argc < 1 ) {\n+\t\t\tfd_printf(STDERR_FILENO, \"No command given\\n\");\n+\t\t\texit(RUNCMD_EXEC_FAIL);\n+\t\t}\t\n+\t\targv[argc] = NULL;\n+\t\t\t\n \t\t/* run extenral command */\n-\t\tfd_printf(STDERR_FILENO, \"%s\\n\", &cmd[sizeof(EXEC) - 1]);\n+\t\tfd_printf(STDERR_FILENO, \"$ %s %s\\n\", cmd, args_extra);\n \t\testablish_child_signal_handlers();\n \t\tsigprocmask(SIG_SETMASK, &sigm_old, NULL);\n-\t\texecl(\"/bin/sh\", \"sh\", \"-c\", cmd, NULL);\n-\t\texit(42);\n+\t\texecvp(argv[0], argv);\n+\n+\t\tfd_printf(STDERR_FILENO, \"exec: %s\\n\", strerror(errno));\n+\t\texit(RUNCMD_EXEC_FAIL);\n \t}\n }\n \n-#undef EXEC\n-\n /**********************************************************************/\n \n /* Process command key. Returns non-zero if command results in picocom\n@@ -944,7 +947,7 @@ do_command (unsigned char c)\n \t\t\tfd_printf(STO, \"*** cannot read filename ***\\r\\n\");\n \t\t\tbreak;\n \t\t}\n-\t\trun_cmd(tty_fd, xfr_cmd, fname, NULL);\n+\t\trun_cmd(tty_fd, xfr_cmd, fname);\n \t\tfree(fname);\n \t\tbreak;\n \tcase KEY_BREAK:"
    }
}