{
    "current_hash": "3bbb0cd3296023f6f922c71d21a1c374d2b0a435",
    "parent_hash": "56ca71bda9870e78ba0ee70fe226c4a4fcc36a04",
    "modified_file_0": {
        "mod_filename": "src/lib/protocols/ssh.c",
        "status": "modified",
        "add_lines": 12,
        "dele_lines": 0,
        "patch": "@@ -110,10 +110,14 @@ static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,\n   buf[buf_out_len++] = ';';\n   offset += len;\n \n+  if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)\n+    goto invalid_payload;\n   /* ssh.server_host_key_algorithms [None] */\n   len = ntohl(*(u_int32_t*)&packet->payload[offset]);\n   offset += 4 + len;\n \n+  if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)\n+    goto invalid_payload;\n   /* ssh.encryption_algorithms_client_to_server [C] */\n   len = ntohl(*(u_int32_t*)&packet->payload[offset]);\n \n@@ -130,6 +134,8 @@ static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,\n   } else\n     offset += 4 + len;\n \n+  if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)\n+    goto invalid_payload;\n   /* ssh.encryption_algorithms_server_to_client [S] */\n   len = ntohl(*(u_int32_t*)&packet->payload[offset]);\n \n@@ -146,6 +152,8 @@ static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,\n   } else\n     offset += 4 + len;\n \n+  if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)\n+    goto invalid_payload;\n   /* ssh.mac_algorithms_client_to_server [C] */\n   len = ntohl(*(u_int32_t*)&packet->payload[offset]);\n \n@@ -162,6 +170,8 @@ static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,\n   } else\n     offset += 4 + len;\n \n+  if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)\n+    goto invalid_payload;\n   /* ssh.mac_algorithms_server_to_client [S] */\n   len = ntohl(*(u_int32_t*)&packet->payload[offset]);\n \n@@ -195,6 +205,8 @@ static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,\n   } else\n     offset += 4 + len;\n \n+  if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)\n+    goto invalid_payload;\n   /* ssh.compression_algorithms_server_to_client [S] */\n   len = ntohl(*(u_int32_t*)&packet->payload[offset]);\n "
    }
}