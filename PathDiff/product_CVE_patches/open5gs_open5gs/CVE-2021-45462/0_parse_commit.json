{
    "current_hash": "a0f2535cb5a29bba6dbbccdb90c74ccd770cc700",
    "parent_hash": "6f62839ad366f0e1738f5b9351a764463a5693ed",
    "modified_file_0": {
        "mod_filename": "src/sgwu/gtp-path.c",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 0,
        "patch": "@@ -124,6 +124,12 @@ static void _gtpv1_u_recv_cb(short when, ogs_socket_t fd, void *data)\n         ogs_log_hexdump(OGS_LOG_ERROR, pkbuf->data, pkbuf->len);\n         goto cleanup;\n     }\n+    if (gtp_h->type != OGS_GTPU_MSGTYPE_END_MARKER &&\n+        pkbuf->len <= len) {\n+        ogs_error(\"[DROP] Small GTPU packet(type:%d len:%d)\", gtp_h->type, len);\n+        ogs_log_hexdump(OGS_LOG_ERROR, pkbuf->data, pkbuf->len);\n+        goto cleanup;\n+    }\n     ogs_assert(ogs_pkbuf_pull(pkbuf, len));\n \n     if (gtp_h->type == OGS_GTPU_MSGTYPE_END_MARKER) {"
    },
    "modified_file_1": {
        "mod_filename": "src/smf/gtp-path.c",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 0,
        "patch": "@@ -186,6 +186,12 @@ static void _gtpv1_u_recv_cb(short when, ogs_socket_t fd, void *data)\n         ogs_log_hexdump(OGS_LOG_ERROR, pkbuf->data, pkbuf->len);\n         goto cleanup;\n     }\n+    if (gtp_h->type != OGS_GTPU_MSGTYPE_END_MARKER &&\n+        pkbuf->len <= len) {\n+        ogs_error(\"[DROP] Small GTPU packet(type:%d len:%d)\", gtp_h->type, len);\n+        ogs_log_hexdump(OGS_LOG_ERROR, pkbuf->data, pkbuf->len);\n+        goto cleanup;\n+    }\n     ogs_assert(ogs_pkbuf_pull(pkbuf, len));\n \n     if (gtp_h->type == OGS_GTPU_MSGTYPE_GPDU) {"
    },
    "modified_file_2": {
        "mod_filename": "src/upf/gtp-path.c",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 0,
        "patch": "@@ -304,6 +304,12 @@ static void _gtpv1_u_recv_cb(short when, ogs_socket_t fd, void *data)\n         ogs_log_hexdump(OGS_LOG_ERROR, pkbuf->data, pkbuf->len);\n         goto cleanup;\n     }\n+    if (gtp_h->type != OGS_GTPU_MSGTYPE_END_MARKER &&\n+        pkbuf->len <= len) {\n+        ogs_error(\"[DROP] Small GTPU packet(type:%d len:%d)\", gtp_h->type, len);\n+        ogs_log_hexdump(OGS_LOG_ERROR, pkbuf->data, pkbuf->len);\n+        goto cleanup;\n+    }\n     ogs_assert(ogs_pkbuf_pull(pkbuf, len));\n \n     if (gtp_h->type == OGS_GTPU_MSGTYPE_END_MARKER) {"
    }
}