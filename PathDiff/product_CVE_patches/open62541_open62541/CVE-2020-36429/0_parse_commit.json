{
    "current_hash": "c800e2987b10bb3af6ef644b515b5d6392f8861d",
    "parent_hash": "36c440147e0adbd1c7254d98851c8a856e77cbfe",
    "modified_file_0": {
        "mod_filename": "src/ua_types_encoding_json.c",
        "status": "modified",
        "add_lines": 9,
        "dele_lines": 4,
        "patch": "@@ -108,6 +108,8 @@ static WRITE_JSON_ELEMENT(Quote) {\n \n WRITE_JSON_ELEMENT(ObjStart) {\n     /* increase depth, save: before first key-value no comma needed. */\n+    if(ctx->depth >= UA_JSON_ENCODING_MAX_RECURSION)\n+        return UA_STATUSCODE_BADENCODINGERROR;\n     ctx->depth++;\n     ctx->commaNeeded[ctx->depth] = false;\n     return writeChar(ctx, '{');\n@@ -121,7 +123,10 @@ WRITE_JSON_ELEMENT(ObjEnd) {\n \n WRITE_JSON_ELEMENT(ArrStart) {\n     /* increase depth, save: before first array entry no comma needed. */\n-    ctx->commaNeeded[++ctx->depth] = false;\n+    if(ctx->depth >= UA_JSON_ENCODING_MAX_RECURSION)\n+        return UA_STATUSCODE_BADENCODINGERROR;\n+    ctx->depth++;\n+    ctx->commaNeeded[ctx->depth] = false;\n     return writeChar(ctx, '[');\n }\n \n@@ -1124,7 +1129,7 @@ addMultiArrayContentJSON(CtxJson *ctx, void* array, const UA_DataType *type,\n                          size_t *index, UA_UInt32 *arrayDimensions, size_t dimensionIndex, \n                          size_t dimensionSize) {\n     /* Check the recursion limit */\n-    if(ctx->depth > UA_JSON_ENCODING_MAX_RECURSION)\n+    if(ctx->depth >= UA_JSON_ENCODING_MAX_RECURSION)\n         return UA_STATUSCODE_BADENCODINGERROR;\n     \n     /* Stop recursion: The inner Arrays are written */\n@@ -1382,7 +1387,7 @@ ENCODE_JSON(DiagnosticInfo) {\n static status\n encodeJsonStructure(const void *src, const UA_DataType *type, CtxJson *ctx) {\n     /* Check the recursion limit */\n-    if(ctx->depth > UA_JSON_ENCODING_MAX_RECURSION)\n+    if(ctx->depth >= UA_JSON_ENCODING_MAX_RECURSION)\n         return UA_STATUSCODE_BADENCODINGERROR;\n     ctx->depth++;\n \n@@ -3153,7 +3158,7 @@ decodeJsonStructure(void *dst, const UA_DataType *type, CtxJson *ctx,\n                     ParseCtx *parseCtx, UA_Boolean moveToken) {\n     (void) moveToken;\n     /* Check the recursion limit */\n-    if(ctx->depth > UA_JSON_ENCODING_MAX_RECURSION)\n+    if(ctx->depth >= UA_JSON_ENCODING_MAX_RECURSION)\n         return UA_STATUSCODE_BADENCODINGERROR;\n     ctx->depth++;\n "
    }
}