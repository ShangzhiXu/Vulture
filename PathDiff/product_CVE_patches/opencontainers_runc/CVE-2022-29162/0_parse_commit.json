{
    "current_hash": "d04de3a9b72d7a2455c1885fc75eb36d02cd17b5",
    "parent_hash": "94105ca31d7c2e42ad3eba56b0a5edfb4fe6bb68",
    "modified_file_0": {
        "mod_filename": "exec.go",
        "status": "modified",
        "add_lines": 0,
        "dele_lines": 1,
        "patch": "@@ -227,7 +227,6 @@ func getProcess(context *cli.Context, bundle string) (*specs.Process, error) {\n \tif caps := context.StringSlice(\"cap\"); len(caps) > 0 {\n \t\tfor _, c := range caps {\n \t\t\tp.Capabilities.Bounding = append(p.Capabilities.Bounding, c)\n-\t\t\tp.Capabilities.Inheritable = append(p.Capabilities.Inheritable, c)\n \t\t\tp.Capabilities.Effective = append(p.Capabilities.Effective, c)\n \t\t\tp.Capabilities.Permitted = append(p.Capabilities.Permitted, c)\n \t\t\tp.Capabilities.Ambient = append(p.Capabilities.Ambient, c)"
    },
    "modified_file_1": {
        "mod_filename": "libcontainer/README.md",
        "status": "modified",
        "add_lines": 0,
        "dele_lines": 16,
        "patch": "@@ -84,22 +84,6 @@ config := &configs.Config{\n \t\t\t\"CAP_KILL\",\n \t\t\t\"CAP_AUDIT_WRITE\",\n \t\t},\n-\t\tInheritable: []string{\n-\t\t\t\"CAP_CHOWN\",\n-\t\t\t\"CAP_DAC_OVERRIDE\",\n-\t\t\t\"CAP_FSETID\",\n-\t\t\t\"CAP_FOWNER\",\n-\t\t\t\"CAP_MKNOD\",\n-\t\t\t\"CAP_NET_RAW\",\n-\t\t\t\"CAP_SETGID\",\n-\t\t\t\"CAP_SETUID\",\n-\t\t\t\"CAP_SETFCAP\",\n-\t\t\t\"CAP_SETPCAP\",\n-\t\t\t\"CAP_NET_BIND_SERVICE\",\n-\t\t\t\"CAP_SYS_CHROOT\",\n-\t\t\t\"CAP_KILL\",\n-\t\t\t\"CAP_AUDIT_WRITE\",\n-\t\t},\n \t\tPermitted: []string{\n \t\t\t\"CAP_CHOWN\",\n \t\t\t\"CAP_DAC_OVERRIDE\","
    },
    "modified_file_2": {
        "mod_filename": "libcontainer/integration/exec_test.go",
        "status": "modified",
        "add_lines": 0,
        "dele_lines": 2,
        "patch": "@@ -364,7 +364,6 @@ func TestProcessCaps(t *testing.T) {\n \tpconfig.Capabilities.Bounding = append(config.Capabilities.Bounding, \"CAP_NET_ADMIN\")\n \tpconfig.Capabilities.Permitted = append(config.Capabilities.Permitted, \"CAP_NET_ADMIN\")\n \tpconfig.Capabilities.Effective = append(config.Capabilities.Effective, \"CAP_NET_ADMIN\")\n-\tpconfig.Capabilities.Inheritable = append(config.Capabilities.Inheritable, \"CAP_NET_ADMIN\")\n \terr = container.Run(&pconfig)\n \tok(t, err)\n \n@@ -1360,7 +1359,6 @@ func TestRootfsPropagationSharedMount(t *testing.T) {\n \tpconfig2.Capabilities.Bounding = append(config.Capabilities.Bounding, \"CAP_SYS_ADMIN\")\n \tpconfig2.Capabilities.Permitted = append(config.Capabilities.Permitted, \"CAP_SYS_ADMIN\")\n \tpconfig2.Capabilities.Effective = append(config.Capabilities.Effective, \"CAP_SYS_ADMIN\")\n-\tpconfig2.Capabilities.Inheritable = append(config.Capabilities.Inheritable, \"CAP_SYS_ADMIN\")\n \n \terr = container.Run(pconfig2)\n \t_ = stdinR2.Close()"
    },
    "modified_file_3": {
        "mod_filename": "libcontainer/integration/template_test.go",
        "status": "modified",
        "add_lines": 0,
        "dele_lines": 16,
        "patch": "@@ -75,22 +75,6 @@ func newTemplateConfig(t *testing.T, p *tParam) *configs.Config {\n \t\t\t\t\"CAP_KILL\",\n \t\t\t\t\"CAP_AUDIT_WRITE\",\n \t\t\t},\n-\t\t\tInheritable: []string{\n-\t\t\t\t\"CAP_CHOWN\",\n-\t\t\t\t\"CAP_DAC_OVERRIDE\",\n-\t\t\t\t\"CAP_FSETID\",\n-\t\t\t\t\"CAP_FOWNER\",\n-\t\t\t\t\"CAP_MKNOD\",\n-\t\t\t\t\"CAP_NET_RAW\",\n-\t\t\t\t\"CAP_SETGID\",\n-\t\t\t\t\"CAP_SETUID\",\n-\t\t\t\t\"CAP_SETFCAP\",\n-\t\t\t\t\"CAP_SETPCAP\",\n-\t\t\t\t\"CAP_NET_BIND_SERVICE\",\n-\t\t\t\t\"CAP_SYS_CHROOT\",\n-\t\t\t\t\"CAP_KILL\",\n-\t\t\t\t\"CAP_AUDIT_WRITE\",\n-\t\t\t},\n \t\t\tAmbient: []string{\n \t\t\t\t\"CAP_CHOWN\",\n \t\t\t\t\"CAP_DAC_OVERRIDE\","
    },
    "modified_file_4": {
        "mod_filename": "libcontainer/specconv/example.go",
        "status": "modified",
        "add_lines": 0,
        "dele_lines": 5,
        "patch": "@@ -41,11 +41,6 @@ func Example() *specs.Spec {\n \t\t\t\t\t\"CAP_KILL\",\n \t\t\t\t\t\"CAP_NET_BIND_SERVICE\",\n \t\t\t\t},\n-\t\t\t\tInheritable: []string{\n-\t\t\t\t\t\"CAP_AUDIT_WRITE\",\n-\t\t\t\t\t\"CAP_KILL\",\n-\t\t\t\t\t\"CAP_NET_BIND_SERVICE\",\n-\t\t\t\t},\n \t\t\t\tAmbient: []string{\n \t\t\t\t\t\"CAP_AUDIT_WRITE\",\n \t\t\t\t\t\"CAP_KILL\","
    }
}