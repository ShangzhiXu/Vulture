{
    "current_hash": "9725f1a10f80f5e0ae7d9b60547458622aeb322f",
    "parent_hash": "a32a00831ca8226bf25a9686ddb58326f4b756cd",
    "modified_file_0": {
        "mod_filename": "src/basic/terminal-util.c",
        "status": "modified",
        "add_lines": 25,
        "dele_lines": 1,
        "patch": "@@ -1249,12 +1249,36 @@ int vt_default_utf8(void) {\n         return parse_boolean(b);\n }\n \n+int vt_verify_kbmode(int fd) {\n+        int curr_mode;\n+\n+        /*\n+         * Make sure we only adjust consoles in K_XLATE or K_UNICODE mode.\n+         * Otherwise we would (likely) interfere with X11's processing of the\n+         * key events.\n+         *\n+         * http://lists.freedesktop.org/archives/systemd-devel/2013-February/008573.html\n+         */\n+\n+        if (ioctl(fd, KDGKBMODE, &curr_mode) < 0)\n+                return -errno;\n+\n+        return IN_SET(curr_mode, K_XLATE, K_UNICODE) ? 0 : -EBUSY;\n+}\n+\n int vt_reset_keyboard(int fd) {\n-        int kb;\n+        int kb, r;\n \n         /* If we can't read the default, then default to unicode. It's 2017 after all. */\n         kb = vt_default_utf8() != 0 ? K_UNICODE : K_XLATE;\n \n+        r = vt_verify_kbmode(fd);\n+        if (r == -EBUSY) {\n+                log_debug_errno(r, \"Keyboard is not in XLATE or UNICODE mode, not resetting: %m\");\n+                return 0;\n+        } else if (r < 0)\n+                return r;\n+\n         if (ioctl(fd, KDSKBMODE, kb) < 0)\n                 return -errno;\n "
    },
    "modified_file_1": {
        "mod_filename": "src/basic/terminal-util.h",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 0,
        "patch": "@@ -156,6 +156,7 @@ int openpt_in_namespace(pid_t pid, int flags);\n int open_terminal_in_namespace(pid_t pid, const char *name, int mode);\n \n int vt_default_utf8(void);\n+int vt_verify_kbmode(int fd);\n int vt_reset_keyboard(int fd);\n int vt_restore(int fd);\n int vt_release(int fd, bool restore_vt);"
    },
    "modified_file_2": {
        "mod_filename": "src/vconsole/vconsole-setup.c",
        "status": "modified",
        "add_lines": 10,
        "dele_lines": 20,
        "patch": "@@ -70,29 +70,19 @@ static int verify_vc_allocation_byfd(int fd) {\n         return verify_vc_allocation(vcs.v_active);\n }\n \n-static int verify_vc_kbmode(int fd) {\n-        int curr_mode;\n-\n-        /*\n-         * Make sure we only adjust consoles in K_XLATE or K_UNICODE mode.\n-         * Otherwise we would (likely) interfere with X11's processing of the\n-         * key events.\n-         *\n-         * http://lists.freedesktop.org/archives/systemd-devel/2013-February/008573.html\n-         */\n-\n-        if (ioctl(fd, KDGKBMODE, &curr_mode) < 0)\n-                return -errno;\n-\n-        return IN_SET(curr_mode, K_XLATE, K_UNICODE) ? 0 : -EBUSY;\n-}\n-\n static int toggle_utf8(const char *name, int fd, bool utf8) {\n         int r;\n         struct termios tc = {};\n \n         assert(name);\n \n+        r = vt_verify_kbmode(fd);\n+        if (r == -EBUSY) {\n+                log_warning_errno(r, \"Virtual console %s is not in K_XLATE or K_UNICODE: %m\", name);\n+                return 0;\n+        } else if (r < 0)\n+                return log_warning_errno(r, \"Failed to verify kbdmode on %s: %m\", name);\n+\n         r = ioctl(fd, KDSKBMODE, utf8 ? K_UNICODE : K_XLATE);\n         if (r < 0)\n                 return log_warning_errno(errno, \"Failed to %s UTF-8 kbdmode on %s: %m\", enable_disable(utf8), name);\n@@ -290,7 +280,7 @@ static void setup_remaining_vcs(int src_fd, unsigned src_idx, bool utf8) {\n                         continue;\n                 }\n \n-                if (verify_vc_kbmode(fd_d) < 0)\n+                if (vt_verify_kbmode(fd_d) < 0)\n                         continue;\n \n                 toggle_utf8(ttyname, fd_d, utf8);\n@@ -365,7 +355,7 @@ static int find_source_vc(char **ret_path, unsigned *ret_idx) {\n                                 err = -fd;\n                         continue;\n                 }\n-                r = verify_vc_kbmode(fd);\n+                r = vt_verify_kbmode(fd);\n                 if (r < 0) {\n                         if (!err)\n                                 err = -r;\n@@ -398,7 +388,7 @@ static int verify_source_vc(char **ret_path, const char *src_vc) {\n         if (r < 0)\n                 return log_error_errno(r, \"Virtual console %s is not allocated: %m\", src_vc);\n \n-        r = verify_vc_kbmode(fd);\n+        r = vt_verify_kbmode(fd);\n         if (r < 0)\n                 return log_error_errno(r, \"Virtual console %s is not in K_XLATE or K_UNICODE: %m\", src_vc);\n "
    }
}