{
    "current_hash": "da8558533d925694483d2c136a9220d6d49d843c",
    "parent_hash": "22e07fb204386768e5bcbea563641ea11f96ceb8",
    "modified_file_0": {
        "mod_filename": "tensorflow/core/common_runtime/eager/kernel_and_device.cc",
        "status": "modified",
        "add_lines": 6,
        "dele_lines": 1,
        "patch": "@@ -308,7 +308,12 @@ Status KernelAndDeviceOp::Run(\n   if (outputs != nullptr) {\n     outputs->clear();\n     for (int i = 0; i < context.num_outputs(); ++i) {\n-      outputs->push_back(Tensor(*context.mutable_output(i)));\n+      const auto* output_tensor = context.mutable_output(i);\n+      if (output_tensor != nullptr) {\n+        outputs->push_back(Tensor(*output_tensor));\n+      } else {\n+        outputs->push_back(Tensor());\n+      }\n     }\n   }\n   return Status::OK();"
    },
    "modified_file_1": {
        "mod_filename": "tensorflow/python/kernel_tests/control_flow_ops_py_test.py",
        "status": "modified",
        "add_lines": 8,
        "dele_lines": 0,
        "patch": "@@ -4579,6 +4579,14 @@ def testUInt64SwitchMerge(self):\n       result = control_flow_ops.merge([v_f, v_t])\n       self.evaluate(result)\n \n+  def testSwitchEagerMode(self):\n+    if not context.executing_eagerly():\n+      return\n+    input_data = [1, 2, 3, 4]\n+    vf, vt = control_flow_ops.switch(input_data, False)\n+    self.assertAllEqual(vf, input_data)\n+    self.assertAllEqual(vt, [])\n+\n   @test_util.run_deprecated_v1\n   def testQIntArgAndRet(self):\n "
    }
}