{
    "current_hash": "0462de5b544ed4731aa2fb23946ac22c01856b80",
    "parent_hash": "57f0a5e0b67720f0bc94e4decefc09fbff2f2416",
    "modified_file_0": {
        "mod_filename": "tensorflow/core/kernels/string_ngrams_op.cc",
        "status": "modified",
        "add_lines": 13,
        "dele_lines": 0,
        "patch": "@@ -19,6 +19,7 @@ limitations under the License.\n #include \"absl/strings/ascii.h\"\n #include \"absl/strings/str_cat.h\"\n #include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/platform/errors.h\"\n \n namespace tensorflow {\n namespace text {\n@@ -60,6 +61,18 @@ class StringNGramsOp : public tensorflow::OpKernel {\n     OP_REQUIRES_OK(context, context->input(\"data_splits\", &splits));\n     const auto& splits_vec = splits->flat<SPLITS_TYPE>();\n \n+    // Validate that the splits are valid indices into data\n+    const int input_data_size = data->flat<tstring>().size();\n+    const int splits_vec_size = splits_vec.size();\n+    for (int i = 0; i < splits_vec_size; ++i) {\n+      bool valid_splits = splits_vec(i) >= 0;\n+      valid_splits = valid_splits && (splits_vec(i) <= input_data_size);\n+      OP_REQUIRES(\n+          context, valid_splits,\n+          errors::InvalidArgument(\"Invalid split value \", splits_vec(i),\n+                                  \", must be in [0,\", input_data_size, \"]\"));\n+    }\n+\n     int num_batch_items = splits_vec.size() - 1;\n     tensorflow::Tensor* ngrams_splits;\n     OP_REQUIRES_OK("
    },
    "modified_file_1": {
        "mod_filename": "tensorflow/python/ops/raw_ops_test.py",
        "status": "modified",
        "add_lines": 22,
        "dele_lines": 1,
        "patch": "@@ -18,16 +18,21 @@\n from __future__ import division\n from __future__ import print_function\n \n+from absl.testing import parameterized\n+\n from tensorflow.python.eager import context\n from tensorflow.python.framework import constant_op\n+from tensorflow.python.framework import errors\n from tensorflow.python.framework import ops\n from tensorflow.python.framework import test_util\n from tensorflow.python.ops import gen_math_ops\n+from tensorflow.python.ops import gen_string_ops\n from tensorflow.python.platform import test\n \n \n @test_util.run_all_in_graph_and_eager_modes\n-class RawOpsTest(test.TestCase):\n+@test_util.disable_tfrt\n+class RawOpsTest(test.TestCase, parameterized.TestCase):\n \n   def testSimple(self):\n     x = constant_op.constant(1)\n@@ -58,6 +63,22 @@ def testDefaults(self):\n         gen_math_ops.Any(input=x, axis=0),\n         gen_math_ops.Any(input=x, axis=0, keep_dims=False))\n \n+  @parameterized.parameters([[0, 8]], [[-1, 6]])\n+  def testStringNGramsBadDataSplits(self, splits):\n+    data = [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\", \"ff\"]\n+    with self.assertRaisesRegex(errors.InvalidArgumentError,\n+                                \"Invalid split value\"):\n+      self.evaluate(\n+          gen_string_ops.string_n_grams(\n+              data=data,\n+              data_splits=splits,\n+              separator=\"\",\n+              ngram_widths=[2],\n+              left_pad=\"\",\n+              right_pad=\"\",\n+              pad_width=0,\n+              preserve_short_sequences=False))\n+\n \n if __name__ == \"__main__\":\n   ops.enable_eager_execution()"
    }
}