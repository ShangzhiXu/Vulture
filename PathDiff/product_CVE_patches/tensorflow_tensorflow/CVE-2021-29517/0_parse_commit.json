{
    "current_hash": "799f835a3dfa00a4d852defa29b15841eea9d64f",
    "parent_hash": "42033603003965bffac51ae171b51801565e002d",
    "modified_file_0": {
        "mod_filename": "tensorflow/core/kernels/conv_ops_3d.cc",
        "status": "modified",
        "add_lines": 7,
        "dele_lines": 0,
        "patch": "@@ -69,6 +69,11 @@ struct LaunchConvOp<CPUDevice, T> {\n                 errors::InvalidArgument(\"CPU implementation of Conv3D \"\n                                         \"currently only supports dilated rates \"\n                                         \"of 1.\"));\n+    OP_REQUIRES(context, filter.dim_size(3) == input.dim_size(input.dims() - 1),\n+                errors::InvalidArgument(\n+                    \"Number of channels in filter (\", filter.dim_size(3),\n+                    \") must match last dimension of input (\",\n+                    input.dim_size(input.dims() - 1), \")\"));\n     functor::CuboidConvolution<CPUDevice, T>()(\n         context->eigen_device<CPUDevice>(), output->tensor<T, 5>(),\n         input.tensor<T, 5>(), filter.tensor<T, 5>(), strides[2], strides[1],\n@@ -142,6 +147,8 @@ class Conv3DOp : public BinaryOp<T> {\n     const int64 filter_depth = filter.dim_size(3);\n     const int64 out_depth = filter.dim_size(4);\n \n+    OP_REQUIRES(context, filter_depth != 0,\n+                errors::InvalidArgument(\"filter_depth must be non-zero\"));\n     OP_REQUIRES(context, in_depth % filter_depth == 0,\n                 errors::InvalidArgument(\n                     \"Input depth must be evenly divisible by filter depth: \","
    }
}