{
    "current_hash": "ff70c47a396ef1e3cb73c90513da4f5cb71bebba",
    "parent_hash": "eebb96c2830d48597d055d247c0e9aebaea94cd5",
    "modified_file_0": {
        "mod_filename": "tensorflow/core/kernels/session_ops.cc",
        "status": "modified",
        "add_lines": 10,
        "dele_lines": 4,
        "patch": "@@ -91,7 +91,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\n REGISTER_GPU_KERNEL(bool);\n #undef REGISTER_GPU_KERNEL\n \n-\n class GetSessionTensorOp : public OpKernel {\n  public:\n   explicit GetSessionTensorOp(OpKernelConstruction* context)\n@@ -101,7 +100,11 @@ class GetSessionTensorOp : public OpKernel {\n     const Tensor& handle = ctx->input(0);\n     const string& name = handle.scalar<tstring>()();\n     Tensor val;\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\n+    auto session_state = ctx->session_state();\n+    OP_REQUIRES(ctx, session_state != nullptr,\n+                errors::FailedPrecondition(\n+                    \"GetSessionTensor called on null session state\"));\n+    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));\n     ctx->set_output(0, val);\n   }\n \n@@ -122,7 +125,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\n REGISTER_GPU_KERNEL(bool);\n #undef REGISTER_GPU_KERNEL\n \n-\n class DeleteSessionTensorOp : public OpKernel {\n  public:\n   explicit DeleteSessionTensorOp(OpKernelConstruction* context)\n@@ -131,7 +133,11 @@ class DeleteSessionTensorOp : public OpKernel {\n   void Compute(OpKernelContext* ctx) override {\n     const Tensor& handle = ctx->input(0);\n     const string& name = handle.scalar<tstring>()();\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));\n+    auto session_state = ctx->session_state();\n+    OP_REQUIRES(ctx, session_state != nullptr,\n+                errors::FailedPrecondition(\n+                    \"DeleteSessionTensor called on null session state\"));\n+    OP_REQUIRES_OK(ctx, session_state->DeleteTensor(name));\n   }\n \n   TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);"
    }
}