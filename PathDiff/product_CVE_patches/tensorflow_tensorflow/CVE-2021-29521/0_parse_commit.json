{
    "current_hash": "c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
    "parent_hash": "8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624",
    "modified_file_0": {
        "mod_filename": "tensorflow/core/kernels/count_ops.cc",
        "status": "modified",
        "add_lines": 9,
        "dele_lines": 1,
        "patch": "@@ -197,9 +197,17 @@ class SparseCount : public OpKernel {\n                     \"The shape argument requires at least one element.\"));\n \n     bool is_1d = shape.NumElements() == 1;\n-    int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\n+    auto shape_vector = shape.flat<int64>();\n+    int num_batches = is_1d ? 1 : shape_vector(0);\n     int num_values = values.NumElements();\n \n+    for (int b = 0; b < shape_vector.size(); b++) {\n+      OP_REQUIRES(context, shape_vector(b) >= 0,\n+                  errors::InvalidArgument(\n+                      \"Elements in dense_shape must be >= 0. Instead got:\",\n+                      shape.DebugString()));\n+    }\n+\n     OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\n                 errors::InvalidArgument(\n                     \"Number of values must match first dimension of indices.\","
    }
}