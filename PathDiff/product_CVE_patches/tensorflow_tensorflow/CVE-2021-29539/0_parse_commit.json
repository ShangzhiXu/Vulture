{
    "current_hash": "4f663d4b8f0bec1b48da6fa091a7d29609980fa4",
    "parent_hash": "f0e867da82025a97524a233eaedfccfcf6295d5c",
    "modified_file_0": {
        "mod_filename": "tensorflow/core/kernels/immutable_constant_op.cc",
        "status": "modified",
        "add_lines": 5,
        "dele_lines": 0,
        "patch": "@@ -17,6 +17,8 @@ limitations under the License.\n \n #include <unordered_set>\n \n+#include \"tensorflow/core/framework/types.pb.h\"\n+\n namespace tensorflow {\n \n namespace {\n@@ -86,6 +88,9 @@ ImmutableConstantOp::ImmutableConstantOp(OpKernelConstruction* context)\n   OP_REQUIRES_OK(context,\n                  context->GetAttr(kMemoryRegionNameAttr, &region_name_));\n   OP_REQUIRES_OK(context, context->GetAttr(kDTypeAttr, &dtype_));\n+  OP_REQUIRES(context, dtype_ != DT_RESOURCE && dtype_ != DT_VARIANT,\n+              errors::InvalidArgument(\n+                  \"Resource and variant dtypes are invalid for this op.\"));\n   OP_REQUIRES_OK(context, context->GetAttr(kShapeAttr, &shape_));\n }\n "
    }
}