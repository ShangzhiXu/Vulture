{
    "current_hash": "617b12c0339db4891d117b661982126c495439ea",
    "parent_hash": "33834cb2a4d035b52aa2a26742f832a112e90a0a",
    "modified_file_0": {
        "mod_filename": "rpcapd/daemon.c",
        "status": "modified",
        "add_lines": 9,
        "dele_lines": 6,
        "patch": "@@ -1335,6 +1335,7 @@ daemon_msg_findallif_req(uint8 ver, struct daemon_slpars *pars, uint32 plen)\n \tpcap_if_t *d;\t\t\t\t// temp pointer needed to scan the interface chain\n \tstruct pcap_addr *address;\t\t// pcap structure that keeps a network address of an interface\n \tstruct rpcap_findalldevs_if *findalldevs_if;// rpcap structure that packet all the data of an interface together\n+\tuint32 replylen;\t\t\t// length of reply payload\n \tuint16 nif = 0;\t\t\t\t// counts the number of interface listed\n \n \t// Discard the rest of the message; there shouldn't be any payload.\n@@ -1361,17 +1362,19 @@ daemon_msg_findallif_req(uint8 ver, struct daemon_slpars *pars, uint32 plen)\n \t\treturn 0;\n \t}\n \n-\t// checks the number of interfaces and it computes the total length of the payload\n+\t// This checks the number of interfaces and computes the total\n+\t// length of the payload.\n+\treplylen = 0;\n \tfor (d = alldevs; d != NULL; d = d->next)\n \t{\n \t\tnif++;\n \n \t\tif (d->description)\n-\t\t\tplen+= strlen(d->description);\n+\t\t\treplylen += strlen(d->description);\n \t\tif (d->name)\n-\t\t\tplen+= strlen(d->name);\n+\t\t\treplylen += strlen(d->name);\n \n-\t\tplen+= sizeof(struct rpcap_findalldevs_if);\n+\t\treplylen += sizeof(struct rpcap_findalldevs_if);\n \n \t\tfor (address = d->addresses; address != NULL; address = address->next)\n \t\t{\n@@ -1384,7 +1387,7 @@ daemon_msg_findallif_req(uint8 ver, struct daemon_slpars *pars, uint32 plen)\n #ifdef AF_INET6\n \t\t\tcase AF_INET6:\n #endif\n-\t\t\t\tplen+= (sizeof(struct rpcap_sockaddr) * 4);\n+\t\t\t\treplylen += (sizeof(struct rpcap_sockaddr) * 4);\n \t\t\t\tbreak;\n \n \t\t\tdefault:\n@@ -1400,7 +1403,7 @@ daemon_msg_findallif_req(uint8 ver, struct daemon_slpars *pars, uint32 plen)\n \t\tgoto error;\n \n \trpcap_createhdr((struct rpcap_header *) sendbuf, ver,\n-\t    RPCAP_MSG_FINDALLIF_REPLY, nif, plen);\n+\t    RPCAP_MSG_FINDALLIF_REPLY, nif, replylen);\n \n \t// send the interface list\n \tfor (d = alldevs; d != NULL; d = d->next)"
    }
}