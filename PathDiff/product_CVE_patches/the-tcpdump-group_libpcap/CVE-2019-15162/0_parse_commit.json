{
    "current_hash": "484d60cbf7ca4ec758c3cbb8a82d68b244a78d58",
    "parent_hash": "437b273761adedcbd880f714bfa44afeec186a31",
    "modified_file_0": {
        "mod_filename": "rpcapd/daemon.c",
        "status": "modified",
        "add_lines": 44,
        "dele_lines": 7,
        "patch": "@@ -1176,20 +1176,33 @@ daemon_AuthUserPwd(char *username, char *password, char *errbuf)\n \t * stop trying to log in with a given user name and move on\n \t * to another user name.\n \t */\n+\tDWORD error;\n \tHANDLE Token;\n+\tchar errmsgbuf[PCAP_ERRBUF_SIZE];\t// buffer for errors to log\n+\n \tif (LogonUser(username, \".\", password, LOGON32_LOGON_NETWORK, LOGON32_PROVIDER_DEFAULT, &Token) == 0)\n \t{\n-\t\tpcap_fmt_errmsg_for_win32_err(errbuf, PCAP_ERRBUF_SIZE,\n-\t\t    GetLastError(), \"LogonUser() failed\");\n+\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");\n+\t\terror = GetLastError();\n+\t\tif (error != ERROR_LOGON_FAILURE)\n+\t\t{\n+\t\t\t// Some error other than an authentication error;\n+\t\t\t// log it.\n+\t\t\tpcap_fmt_errmsg_for_win32_err(errmsgbuf,\n+\t\t\t    PCAP_ERRBUF_SIZE, error, \"LogonUser() failed\");\n+\t\t\trpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);\n+\t\t}\t\t\t    \n \t\treturn -1;\n \t}\n \n \t// This call should change the current thread to the selected user.\n \t// I didn't test it.\n \tif (ImpersonateLoggedOnUser(Token) == 0)\n \t{\n-\t\tpcap_fmt_errmsg_for_win32_err(errbuf, PCAP_ERRBUF_SIZE,\n+\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");\n+\t\tpcap_fmt_errmsg_for_win32_err(errmsgbuf, PCAP_ERRBUF_SIZE,\n \t\t    GetLastError(), \"ImpersonateLoggedOnUser() failed\");\n+\t\trpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);\n \t\tCloseHandle(Token);\n \t\treturn -1;\n \t}\n@@ -1217,6 +1230,7 @@ daemon_AuthUserPwd(char *username, char *password, char *errbuf)\n \t * only password database or some other authentication mechanism,\n \t * behind its API.\n \t */\n+\tint error;\n \tstruct passwd *user;\n \tchar *user_password;\n #ifdef HAVE_GETSPNAM\n@@ -1227,15 +1241,15 @@ daemon_AuthUserPwd(char *username, char *password, char *errbuf)\n \t// This call is needed to get the uid\n \tif ((user = getpwnam(username)) == NULL)\n \t{\n-\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");\n+\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");\n \t\treturn -1;\n \t}\n \n #ifdef HAVE_GETSPNAM\n \t// This call is needed to get the password; otherwise 'x' is returned\n \tif ((usersp = getspnam(username)) == NULL)\n \t{\n-\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");\n+\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");\n \t\treturn -1;\n \t}\n \tuser_password = usersp->sp_pwdp;\n@@ -1253,29 +1267,52 @@ daemon_AuthUserPwd(char *username, char *password, char *errbuf)\n \tuser_password = user->pw_passwd;\n #endif\n \n+\t//\n+\t// The Single UNIX Specification says that if crypt() fails it\n+\t// sets errno, but some implementatons that haven't been run\n+\t// through the SUS test suite might not do so.\n+\t//\n+\terrno = 0;\n \tcrypt_password = crypt(password, user_password);\n \tif (crypt_password == NULL)\n \t{\n+\t\terror = errno;\n \t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");\n+\t\tif (error == 0)\n+\t\t{\n+\t\t\t// It didn't set errno.\n+\t\t\trpcapd_log(LOGPRIO_ERROR, \"crypt() failed\");\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\trpcapd_log(LOGPRIO_ERROR, \"crypt() failed: %s\",\n+\t\t\t    strerror(error));\n+\t\t}\n \t\treturn -1;\n \t}\n \tif (strcmp(user_password, crypt_password) != 0)\n \t{\n-\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");\n+\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");\n \t\treturn -1;\n \t}\n \n \tif (setuid(user->pw_uid))\n \t{\n+\t\terror = errno;\n \t\tpcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,\n-\t\t    errno, \"setuid\");\n+\t\t    error, \"setuid\");\n+\t\trpcapd_log(LOGPRIO_ERROR, \"setuid() failed: %s\",\n+\t\t    strerror(error));\n \t\treturn -1;\n \t}\n \n /*\tif (setgid(user->pw_gid))\n \t{\n+\t\terror = errno;\n \t\tpcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,\n \t\t    errno, \"setgid\");\n+\t\trpcapd_log(LOGPRIO_ERROR, \"setgid() failed: %s\",\n+\t\t    strerror(error));\n \t\treturn -1;\n \t}\n */"
    }
}