{
    "current_hash": "87d6bef033062f969e70fa40c43dfd945d5a20ab",
    "parent_hash": "449d95265252b291711899fd288836414791930d",
    "modified_file_0": {
        "mod_filename": "sf-pcapng.c",
        "status": "modified",
        "add_lines": 10,
        "dele_lines": 16,
        "patch": "@@ -85,7 +85,7 @@ struct option_header {\n  * Section Header Block.\n  */\n #define BT_SHB\t\t\t0x0A0D0D0A\n-\n+#define BT_SHB_INSANE_MAX       1024*1024*1  /* 1MB should be enough */\n struct section_header_block {\n \tbpf_u_int32\tbyte_order_magic;\n \tu_short\t\tmajor_version;\n@@ -266,7 +266,7 @@ read_bytes(FILE *fp, void *buf, size_t bytes_to_read, int fail_on_eof,\n \t\t\tif (amt_read == 0 && !fail_on_eof)\n \t\t\t\treturn (0);\t/* EOF */\n \t\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n-\t\t\t    \"truncated dump file; tried to read %\" PRIsize \" bytes, only got %\" PRIsize,\n+\t\t\t    \"truncated pcapng dump file; tried to read %\" PRIsize \" bytes, only got %\" PRIsize,\n \t\t\t    bytes_to_read, amt_read);\n \t\t}\n \t\treturn (-1);\n@@ -856,26 +856,20 @@ pcap_ng_check_header(const uint8_t *magic, FILE *fp, u_int precision,\n \t/*\n \t * Check the sanity of the total length.\n \t */\n-\tif (total_length < sizeof(*bhdrp) + sizeof(*shbp) + sizeof(struct block_trailer)) {\n+\tif (total_length < sizeof(*bhdrp) + sizeof(*shbp) + sizeof(struct block_trailer) ||\n+            (total_length > BT_SHB_INSANE_MAX)) {\n \t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n-\t\t    \"Section Header Block in pcapng dump file has a length of %u < %\" PRIsize,\n-\t\t    total_length,\n-\t\t    sizeof(*bhdrp) + sizeof(*shbp) + sizeof(struct block_trailer));\n-\t\t*err = 1;\n-\t\treturn (NULL);\n-\t}\n+\t\t    \"Section Header Block in pcapng dump file has invalid length %\" PRIsize \" < _%lu_ < %lu (BT_SHB_INSANE_MAX)\",\n+                              sizeof(*bhdrp) + sizeof(*shbp) + sizeof(struct block_trailer),\n+                              total_length,\n+                              BT_SHB_INSANE_MAX);\n \n-\t/*\n-\t * Make sure it's not too big.\n-\t */\n-\tif (total_length > INITIAL_MAX_BLOCKSIZE) {\n-\t\tpcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n-\t\t    \"pcapng block size %u > maximum %u\",\n-\t\t    total_length, INITIAL_MAX_BLOCKSIZE);\n \t\t*err = 1;\n \t\treturn (NULL);\n \t}\n \n+\n+\n \t/*\n \t * OK, this is a good pcapng file.\n \t * Allocate a pcap_t for it."
    }
}