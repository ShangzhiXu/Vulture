{
    "current_hash": "af2cf04a9394c1a56227c2289ae8da262828294a",
    "parent_hash": "4bfd71eee41a1db0647fa4d434841a51b07ec38a",
    "modified_file_0": {
        "mod_filename": "print-bgp.c",
        "status": "modified",
        "add_lines": 12,
        "dele_lines": 4,
        "patch": "@@ -1361,7 +1361,7 @@ bgp_attr_get_as_size(netdissect_options *ndo,\n \n static int\n bgp_attr_print(netdissect_options *ndo,\n-               u_int atype, const u_char *pptr, u_int len)\n+               u_int atype, const u_char *pptr, u_int len, const unsigned attr_set_level)\n {\n \tint i;\n \tuint16_t af;\n@@ -2284,8 +2284,16 @@ bgp_attr_print(netdissect_options *ndo,\n                             ND_PRINT((ndo, \"+%x\", aflags & 0xf));\n                         ND_PRINT((ndo, \"]: \"));\n                     }\n-                    /* FIXME check for recursion */\n-                    if (!bgp_attr_print(ndo, atype, tptr, alen))\n+                    /* The protocol encoding per se allows ATTR_SET to be nested as many times\n+                     * as the message can accommodate. This printer used to be able to recurse\n+                     * into ATTR_SET contents until the stack exhaustion, but now there is a\n+                     * limit on that (if live protocol exchange goes that many levels deep,\n+                     * something is probably wrong anyway). Feel free to refine this value if\n+                     * you can find the spec with respective normative text.\n+                     */\n+                    if (attr_set_level == 10)\n+                        ND_PRINT((ndo, \"(too many nested levels, not recursing)\"));\n+                    else if (!bgp_attr_print(ndo, atype, tptr, alen, attr_set_level + 1))\n                         return 0;\n                     tptr += alen;\n                     len -= alen;\n@@ -2592,7 +2600,7 @@ bgp_update_print(netdissect_options *ndo,\n \t\t\t\tgoto trunc;\n \t\t\tif (length < alen)\n \t\t\t\tgoto trunc;\n-\t\t\tif (!bgp_attr_print(ndo, atype, p, alen))\n+\t\t\tif (!bgp_attr_print(ndo, atype, p, alen, 0))\n \t\t\t\tgoto trunc;\n \t\t\tp += alen;\n \t\t\tlen -= alen;"
    }
}