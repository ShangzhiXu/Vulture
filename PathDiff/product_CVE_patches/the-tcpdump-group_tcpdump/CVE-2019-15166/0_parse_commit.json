{
    "current_hash": "0b661e0aa61850234b64394585cf577aac570bf4",
    "parent_hash": "d97e94223720684c6aa740ff219e0d19426c2220",
    "modified_file_0": {
        "mod_filename": "print-lmp.c",
        "status": "modified",
        "add_lines": 8,
        "dele_lines": 1,
        "patch": "@@ -31,6 +31,8 @@\n #include \"addrtoname.h\"\n #include \"gmpls.h\"\n \n+static const char tstr[] = \" [|LMP]\";\n+\n /*\n  * LMP common header\n  *\n@@ -367,6 +369,7 @@ lmp_print_data_link_subobjs(netdissect_options *ndo, const u_char *obj_tptr,\n     } bw;\n \n     while (total_subobj_len > 0 && hexdump == FALSE ) {\n+\tND_TCHECK_16BITS(obj_tptr + offset);\n \tsubobj_type = EXTRACT_8BITS(obj_tptr + offset);\n \tsubobj_len  = EXTRACT_8BITS(obj_tptr + offset + 1);\n \tND_PRINT((ndo, \"\\n\\t    Subobject, Type: %s (%u), Length: %u\",\n@@ -389,11 +392,13 @@ lmp_print_data_link_subobjs(netdissect_options *ndo, const u_char *obj_tptr,\n \t}\n \tswitch(subobj_type) {\n \tcase INT_SWITCHING_TYPE_SUBOBJ:\n+\t    ND_TCHECK_8BITS(obj_tptr + offset + 2);\n \t    ND_PRINT((ndo, \"\\n\\t      Switching Type: %s (%u)\",\n \t\ttok2str(gmpls_switch_cap_values,\n \t\t\t\"Unknown\",\n \t\t\tEXTRACT_8BITS(obj_tptr + offset + 2)),\n \t\t\tEXTRACT_8BITS(obj_tptr + offset + 2)));\n+\t    ND_TCHECK_8BITS(obj_tptr + offset + 3);\n \t    ND_PRINT((ndo, \"\\n\\t      Encoding Type: %s (%u)\",\n \t\ttok2str(gmpls_encoding_values,\n \t\t\t\"Unknown\",\n@@ -403,11 +408,13 @@ lmp_print_data_link_subobjs(netdissect_options *ndo, const u_char *obj_tptr,\n \t    bw.i = EXTRACT_32BITS(obj_tptr+offset+4);\n \t    ND_PRINT((ndo, \"\\n\\t      Min Reservable Bandwidth: %.3f Mbps\",\n                 bw.f*8/1000000));\n+\t    ND_TCHECK_32BITS(obj_tptr + offset + 8);\n \t    bw.i = EXTRACT_32BITS(obj_tptr+offset+8);\n \t    ND_PRINT((ndo, \"\\n\\t      Max Reservable Bandwidth: %.3f Mbps\",\n                 bw.f*8/1000000));\n \t    break;\n \tcase WAVELENGTH_SUBOBJ:\n+\t    ND_TCHECK_32BITS(obj_tptr + offset + 4);\n \t    ND_PRINT((ndo, \"\\n\\t      Wavelength: %u\",\n \t\tEXTRACT_32BITS(obj_tptr+offset+4)));\n \t    break;\n@@ -1141,7 +1148,7 @@ lmp_print(netdissect_options *ndo,\n     }\n     return;\n trunc:\n-    ND_PRINT((ndo, \"\\n\\t\\t packet exceeded snapshot\"));\n+    ND_PRINT((ndo, \"%s\", tstr));\n }\n /*\n  * Local Variables:"
    },
    "modified_file_1": {
        "mod_filename": "tests/lmp-lmp_print_data_link_subobjs-oobr.out",
        "status": "modified",
        "add_lines": 2,
        "dele_lines": 4,
        "patch": "@@ -7,8 +7,7 @@ IP (tos 0xfd,ECT(1), ttl 254, id 45839, offset 0, flags [+, DF, rsvd], proto UDP\n \t    Remote Interface ID: 3657433088 (0xda000000)\n \t    Subobject, Type: Interface Switching Type (1), Length: 4\n \t      Switching Type: Unknown (0)\n-\t      Encoding Type: Unknown (0)\n-\t\t packet exceeded snapshot\n+\t      Encoding Type: Unknown (0) [|LMP]\n IP (tos 0xfd,ECT(1), ttl 254, id 45839, offset 0, flags [+, DF, rsvd], proto UDP (17), length 56871, bad cksum fe07 (->ddf0)!)\n     17.8.8.255.701 > 40.184.42.8.12: \n \tLMPv1, msg-type: unknown, type: 249, Flags: [none], length: 212\n@@ -18,5 +17,4 @@ IP (tos 0xfd,ECT(1), ttl 254, id 45839, offset 0, flags [+, DF, rsvd], proto UDP\n \t    Remote Interface ID: 3657433088 (0xda000000)\n \t    Subobject, Type: Interface Switching Type (1), Length: 4\n \t      Switching Type: Unknown (0)\n-\t      Encoding Type: Unknown (0)\n-\t\t packet exceeded snapshot\n+\t      Encoding Type: Unknown (0) [|LMP]"
    },
    "modified_file_2": {
        "mod_filename": "tests/lmpv1_busyloop.out",
        "status": "modified",
        "add_lines": 1,
        "dele_lines": 2,
        "patch": "@@ -38,5 +38,4 @@\n \t    0x01d0:  0200 0200 0002 0002 0000 0200 0200 0002\n \t    0x01e0:  0002 0000 0200 0200 0002 0002 0000 0200\n \t    0x01f0:  0200 0002 0002 0000 0200 0200 0002 0002\n-\t  Unknown Object (0), Class-Type: Unknown (0) Flags: [non-negotiable], length: 512\n-\t\t packet exceeded snapshot\n+\t  Unknown Object (0), Class-Type: Unknown (0) Flags: [non-negotiable], length: 512 [|LMP]"
    }
}