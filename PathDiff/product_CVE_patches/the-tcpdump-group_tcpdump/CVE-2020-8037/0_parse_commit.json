{
    "current_hash": "32027e199368dad9508965aae8cd8de5b6ab5231",
    "parent_hash": "d95da9ea1ca48dbd0e91d0de5a3f3684c0b2e41d",
    "modified_file_0": {
        "mod_filename": "print-ppp.c",
        "status": "modified",
        "add_lines": 14,
        "dele_lines": 4,
        "patch": "@@ -1367,19 +1367,29 @@ print_bacp_config_options(netdissect_options *ndo,\n \treturn 0;\n }\n \n+/*\n+ * Un-escape RFC 1662 PPP in HDLC-like framing, with octet escapes.\n+ * The length argument is the on-the-wire length, not the captured\n+ * length; we can only un-escape the captured part.\n+ */\n static void\n ppp_hdlc(netdissect_options *ndo,\n          const u_char *p, int length)\n {\n+\tu_int caplen = ndo->ndo_snapend - p;\n \tu_char *b, *t, c;\n \tconst u_char *s;\n-\tint i, proto;\n+\tu_int i;\n+\tint proto;\n \tconst void *se;\n \n+\tif (caplen == 0)\n+\t\treturn;\n+\n         if (length <= 0)\n                 return;\n \n-\tb = (u_char *)malloc(length);\n+\tb = (u_char *)malloc(caplen);\n \tif (b == NULL)\n \t\treturn;\n \n@@ -1388,10 +1398,10 @@ ppp_hdlc(netdissect_options *ndo,\n \t * Do this so that we dont overwrite the original packet\n \t * contents.\n \t */\n-\tfor (s = p, t = b, i = length; i > 0 && ND_TTEST(*s); i--) {\n+\tfor (s = p, t = b, i = caplen; i != 0; i--) {\n \t\tc = *s++;\n \t\tif (c == 0x7d) {\n-\t\t\tif (i <= 1 || !ND_TTEST(*s))\n+\t\t\tif (i <= 1)\n \t\t\t\tbreak;\n \t\t\ti--;\n \t\t\tc = *s++ ^ 0x20;"
    }
}