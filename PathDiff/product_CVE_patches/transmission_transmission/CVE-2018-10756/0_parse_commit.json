{
    "current_hash": "2123adf8e5e1c2b48791f9d22fc8c747e974180e",
    "parent_hash": "a6482b00613192c454d7550eba9428129c969045",
    "modified_file_0": {
        "mod_filename": "libtransmission/variant.c",
        "status": "modified",
        "add_lines": 14,
        "dele_lines": 8,
        "patch": "@@ -758,7 +758,7 @@ static int compareKeyIndex(void const* va, void const* vb)\n struct SaveNode\n {\n     tr_variant const* v;\n-    tr_variant sorted;\n+    tr_variant* sorted;\n     size_t childIndex;\n     bool isVisited;\n };\n@@ -783,30 +783,36 @@ static void nodeConstruct(struct SaveNode* node, tr_variant const* v, bool sort_\n \n         qsort(tmp, n, sizeof(struct KeyIndex), compareKeyIndex);\n \n-        tr_variantInitDict(&node->sorted, n);\n+        node->sorted = tr_new(tr_variant, 1);\n+        tr_variantInitDict(node->sorted, n);\n \n         for (size_t i = 0; i < n; ++i)\n         {\n-            node->sorted.val.l.vals[i] = *tmp[i].val;\n+            node->sorted->val.l.vals[i] = *tmp[i].val;\n         }\n \n-        node->sorted.val.l.count = n;\n+        node->sorted->val.l.count = n;\n \n         tr_free(tmp);\n \n-        node->v = &node->sorted;\n+        v = node->sorted;\n     }\n     else\n     {\n-        node->v = v;\n+        node->sorted = NULL;\n     }\n+\n+    node->v = v;\n }\n \n static void nodeDestruct(struct SaveNode* node)\n {\n-    if (node->v == &node->sorted)\n+    TR_ASSERT(node != NULL);\n+\n+    if (node->sorted != NULL)\n     {\n-        tr_free(node->sorted.val.l.vals);\n+        tr_free(node->sorted->val.l.vals);\n+        tr_free(node->sorted);\n     }\n }\n "
    }
}