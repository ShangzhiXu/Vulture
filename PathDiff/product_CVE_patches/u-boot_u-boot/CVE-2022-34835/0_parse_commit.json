{
    "current_hash": "8f8c04bf1ebbd2f72f1643e7ad9617dafa6e5409",
    "parent_hash": "b75fd37037bcca8a5e86f1648e8fb4e97cba345a",
    "modified_file_0": {
        "mod_filename": "cmd/i2c.c",
        "status": "modified",
        "add_lines": 12,
        "dele_lines": 12,
        "patch": "@@ -200,10 +200,10 @@ void i2c_init_board(void)\n  *\n  * Returns the address length.\n  */\n-static uint get_alen(char *arg, int default_len)\n+static uint get_alen(char *arg, uint default_len)\n {\n-\tint\tj;\n-\tint\talen;\n+\tuint\tj;\n+\tuint\talen;\n \n \talen = default_len;\n \tfor (j = 0; j < 8; j++) {\n@@ -247,7 +247,7 @@ static int do_i2c_read(struct cmd_tbl *cmdtp, int flag, int argc,\n {\n \tuint\tchip;\n \tuint\tdevaddr, length;\n-\tint alen;\n+\tuint\talen;\n \tu_char  *memaddr;\n \tint ret;\n #if CONFIG_IS_ENABLED(DM_I2C)\n@@ -301,7 +301,7 @@ static int do_i2c_write(struct cmd_tbl *cmdtp, int flag, int argc,\n {\n \tuint\tchip;\n \tuint\tdevaddr, length;\n-\tint alen;\n+\tuint\talen;\n \tu_char  *memaddr;\n \tint ret;\n #if CONFIG_IS_ENABLED(DM_I2C)\n@@ -469,8 +469,8 @@ static int do_i2c_md(struct cmd_tbl *cmdtp, int flag, int argc,\n {\n \tuint\tchip;\n \tuint\taddr, length;\n-\tint alen;\n-\tint\tj, nbytes, linebytes;\n+\tuint\talen;\n+\tuint\tj, nbytes, linebytes;\n \tint ret;\n #if CONFIG_IS_ENABLED(DM_I2C)\n \tstruct udevice *dev;\n@@ -589,9 +589,9 @@ static int do_i2c_mw(struct cmd_tbl *cmdtp, int flag, int argc,\n {\n \tuint\tchip;\n \tulong\taddr;\n-\tint\talen;\n+\tuint\talen;\n \tuchar\tbyte;\n-\tint\tcount;\n+\tuint\tcount;\n \tint ret;\n #if CONFIG_IS_ENABLED(DM_I2C)\n \tstruct udevice *dev;\n@@ -676,8 +676,8 @@ static int do_i2c_crc(struct cmd_tbl *cmdtp, int flag, int argc,\n {\n \tuint\tchip;\n \tulong\taddr;\n-\tint\talen;\n-\tint\tcount;\n+\tuint\talen;\n+\tuint\tcount;\n \tuchar\tbyte;\n \tulong\tcrc;\n \tulong\terr;\n@@ -985,7 +985,7 @@ static int do_i2c_loop(struct cmd_tbl *cmdtp, int flag, int argc,\n \t\t       char *const argv[])\n {\n \tuint\tchip;\n-\tint alen;\n+\tuint\talen;\n \tuint\taddr;\n \tuint\tlength;\n \tu_char\tbytes[16];"
    }
}