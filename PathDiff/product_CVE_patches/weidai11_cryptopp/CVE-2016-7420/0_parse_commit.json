{
    "current_hash": "553049ba297d89d9e8fbf2204acb40a8a53f5cd6",
    "parent_hash": "df40b6224ae03b6a93faf865b5c2e35460d7b88b",
    "modified_file_0": {
        "mod_filename": "Install.txt",
        "status": "modified",
        "add_lines": 12,
        "dele_lines": 3,
        "patch": "@@ -15,11 +15,13 @@ INTRODUCTION\n \r\n Crypto++ Library is a free C++ class library of cryptographic algorithms and schemes. It was written and placed in public domain by Wei Dai. The library homepage is at http://www.cryptopp.com/. The latest library source code can be found at http://github.com/weidai11/cryptopp. For licensing and copyright information, please see License.txt.\r\n \r\n-These are general instructions for the BSDs, Linux, OS X, Solaris and Unix. On BSD and Solaris you will likely have to use `gmake` to build the library. On Linux, OS X, Solaris and Unix, the system's make should be OK. On Windows, Crypto++ provides Borland and Visual Studio solutions. Cmake is available, but its still maturing.\r\n+These are general instructions for the BSDs, Linux, OS X, Solaris and Unix. The library uses a GNU makefile, which combines configuration and a non-anemic make. On BSD and Solaris you will likely have to use `gmake` to build the library. On Linux, OS X and Unix, the system's make should be OK. On Windows, Crypto++ provides Borland and Visual Studio solutions.\r\n \r\n-Crypto++ uses a GNU makefile, which combines configuration and a non-anemic make. You should look through the GNUmakefile and config.h to ensure settings look reasonable before building. Please pay particular attention to CRYPTOPP_NO_UNALIGNED_DATA_ACCESS in config.h.\r\n+You should look through the GNUmakefile and config.h to ensure settings look reasonable before building. You are strogly encourgaed to use `config.recommend` in place of `config.h` if you are building the library and you can recompile dependent programs.\r\n \r\n-Crypto++ does not depend upon other tools or libraries. It does not use Autotools, does not use Cmake, and does not use Boost.\r\n+Wiki pages are available for some platforms with specific build instructions. The wiki can be found at http://cryptopp.com/wiki/. The pages include Android, ARM, iOS and Solaris. Solaris users should visit the wiki for important information on compiling the library with different versions of SunCC and options, and information on improving library performnce and features.\r\n+\r\n+Crypto++ does not depend upon other tools or libraries. It does not use Autotools, does not use CMake, and does not use Boost. If you use an alternate build system, like Autotools or CMake, then see the warning below about CXXFLAGS and lack of -DNDEBUG. CMake is available in Master as a matter of convenience, but its not officially supported.\r\n \r\n \r\n BUILDING THE LIBRARY\r\n@@ -60,6 +62,13 @@ LLVM's libc++ is also supported, so you can:\n     make\r\n \r\n \r\n+ALTERNATE BUILD SYSTEMS\r\n+-----------------------\r\n+\r\n+The Crypto++ library is Make based and uses GNU Make by default. The makefile uses '-DNDEBUG -g2 -O2' CXXFLAGS by default. If you use an alternate build system, like Autotools or CMake, then ensure the build system includes '-DNDEBUG' for production or release builds. The Crypto++ library uses asserts for debugging and diagnostics during development; it does not rely on them to crash a program at runtime.\r\n+\r\n+If an assert triggers in production software, then unprotected sensitive information could be egressed from the program to the filesystem or the platform's error reporting program, like Apport on Ubuntu or CrashReporter on Apple.\r\n+\r\n INSTALLING THE LIBRARY\r\n ----------------------\r\n \r"
    },
    "modified_file_1": {
        "mod_filename": "Readme.txt",
        "status": "modified",
        "add_lines": 17,
        "dele_lines": 6,
        "patch": "@@ -162,12 +162,23 @@ and \"SetNewAndDeleteFromCryptoPP\". If one of these functions is found,\n Crypto++ uses methods 1 or 2, respectively, by calling the function.\r\n Otherwise, method 3 is used.\r\n \r\n-*** GCC-Specific Information ***\r\n-\r\n-A makefile is included for you to compile Crypto++ with GCC. Make sure\r\n-you are using GNU Make and GNU ld. The make process will produce two files,\r\n-libcryptopp.a and cryptest.exe. Run \"cryptest.exe v\" for the validation\r\n-suite.\r\n+*** Linux and Unix-like Specific Information ***\r\n+\r\n+A makefile is included for you to compile Crypto++ with GCC and compatibles.\r\n+Make sure you are using GNU Make and GNU ld. The make process will produce\r\n+two files, libcryptopp.a and cryptest.exe. Run \"cryptest.exe v\" for the\r\n+validation suite and \"cryptest.exe tv all\" for additional test vectors.\r\n+\r\n+The makefile uses '-DNDEBUG -g2 -O2' CXXFLAGS by default. If you use an\r\n+alternate build system, like Autotools or CMake, then ensure the build system\r\n+includes '-DNDEBUG' for production or release builds. The Crypto++ library uses\r\n+asserts for debugging and diagnostics during development; it does not\r\n+rely on them to crash a program at runtime.\r\n+\r\n+If an assert triggers in production software, then unprotected sensitive\r\n+information could be egressed from the program to the filesystem or the\r\n+platform's error reporting program, like Apport on Ubuntu or CrashReporter\r\n+on Apple.\r\n \r\n *** Documentation and Support ***\r\n \r"
    }
}